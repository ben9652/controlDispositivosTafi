ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.__NVIC_SetPriority,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	__NVIC_SetPriority:
  24              	.LFB53:
  25              		.file 1 "Drivers/CMSIS/Include/core_cm3.h"
   1:Drivers/CMSIS/Include/core_cm3.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm3.h ****  * @file     core_cm3.h
   3:Drivers/CMSIS/Include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm3.h ****  * @version  V5.0.8
   5:Drivers/CMSIS/Include/core_cm3.h ****  * @date     04. June 2018
   6:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm3.h **** /*
   8:Drivers/CMSIS/Include/core_cm3.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm3.h ****  *
  10:Drivers/CMSIS/Include/core_cm3.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm3.h ****  *
  12:Drivers/CMSIS/Include/core_cm3.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm3.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm3.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm3.h ****  *
  16:Drivers/CMSIS/Include/core_cm3.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm3.h ****  *
  18:Drivers/CMSIS/Include/core_cm3.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm3.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm3.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm3.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm3.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm3.h ****  */
  24:Drivers/CMSIS/Include/core_cm3.h **** 
  25:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm3.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm3.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm3.h **** #endif
  30:Drivers/CMSIS/Include/core_cm3.h **** 
  31:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 2


  34:Drivers/CMSIS/Include/core_cm3.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm3.h **** 
  36:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm3.h **** #endif
  39:Drivers/CMSIS/Include/core_cm3.h **** 
  40:Drivers/CMSIS/Include/core_cm3.h **** /**
  41:Drivers/CMSIS/Include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm3.h **** 
  44:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm3.h **** 
  47:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm3.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm3.h **** 
  50:Drivers/CMSIS/Include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm3.h ****  */
  53:Drivers/CMSIS/Include/core_cm3.h **** 
  54:Drivers/CMSIS/Include/core_cm3.h **** 
  55:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm3.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm3.h **** /**
  59:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup Cortex_M3
  60:Drivers/CMSIS/Include/core_cm3.h ****   @{
  61:Drivers/CMSIS/Include/core_cm3.h ****  */
  62:Drivers/CMSIS/Include/core_cm3.h **** 
  63:Drivers/CMSIS/Include/core_cm3.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm3.h **** 
  65:Drivers/CMSIS/Include/core_cm3.h **** /*  CMSIS CM3 definitions */
  66:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm3.h **** 
  71:Drivers/CMSIS/Include/core_cm3.h **** #define __CORTEX_M                (3U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm3.h **** 
  73:Drivers/CMSIS/Include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm3.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm3.h **** */
  76:Drivers/CMSIS/Include/core_cm3.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm3.h **** 
  78:Drivers/CMSIS/Include/core_cm3.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm3.h **** 
  83:Drivers/CMSIS/Include/core_cm3.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm3.h **** 
  88:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 3


  91:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm3.h **** 
  93:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm3.h **** 
  98:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm3.h **** 
 103:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm3.h **** 
 108:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm3.h **** 
 113:Drivers/CMSIS/Include/core_cm3.h **** #endif
 114:Drivers/CMSIS/Include/core_cm3.h **** 
 115:Drivers/CMSIS/Include/core_cm3.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm3.h **** 
 117:Drivers/CMSIS/Include/core_cm3.h **** 
 118:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm3.h **** }
 120:Drivers/CMSIS/Include/core_cm3.h **** #endif
 121:Drivers/CMSIS/Include/core_cm3.h **** 
 122:Drivers/CMSIS/Include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm3.h **** 
 124:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm3.h **** 
 126:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm3.h **** 
 129:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm3.h **** #endif
 132:Drivers/CMSIS/Include/core_cm3.h **** 
 133:Drivers/CMSIS/Include/core_cm3.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __CM3_REV
 136:Drivers/CMSIS/Include/core_cm3.h ****     #define __CM3_REV               0x0200U
 137:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm3.h **** 
 140:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __MPU_PRESENT
 141:Drivers/CMSIS/Include/core_cm3.h ****     #define __MPU_PRESENT             0U
 142:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm3.h **** 
 145:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 146:Drivers/CMSIS/Include/core_cm3.h ****     #define __NVIC_PRIO_BITS          3U
 147:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 4


 148:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm3.h **** 
 150:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 151:Drivers/CMSIS/Include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 152:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 153:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 154:Drivers/CMSIS/Include/core_cm3.h **** #endif
 155:Drivers/CMSIS/Include/core_cm3.h **** 
 156:Drivers/CMSIS/Include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 157:Drivers/CMSIS/Include/core_cm3.h **** /**
 158:Drivers/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 159:Drivers/CMSIS/Include/core_cm3.h **** 
 160:Drivers/CMSIS/Include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 161:Drivers/CMSIS/Include/core_cm3.h ****     \li to specify the access to peripheral variables.
 162:Drivers/CMSIS/Include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 163:Drivers/CMSIS/Include/core_cm3.h **** */
 164:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 165:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 166:Drivers/CMSIS/Include/core_cm3.h **** #else
 167:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 168:Drivers/CMSIS/Include/core_cm3.h **** #endif
 169:Drivers/CMSIS/Include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 170:Drivers/CMSIS/Include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 171:Drivers/CMSIS/Include/core_cm3.h **** 
 172:Drivers/CMSIS/Include/core_cm3.h **** /* following defines should be used for structure members */
 173:Drivers/CMSIS/Include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 174:Drivers/CMSIS/Include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 175:Drivers/CMSIS/Include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 176:Drivers/CMSIS/Include/core_cm3.h **** 
 177:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group Cortex_M3 */
 178:Drivers/CMSIS/Include/core_cm3.h **** 
 179:Drivers/CMSIS/Include/core_cm3.h **** 
 180:Drivers/CMSIS/Include/core_cm3.h **** 
 181:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
 182:Drivers/CMSIS/Include/core_cm3.h ****  *                 Register Abstraction
 183:Drivers/CMSIS/Include/core_cm3.h ****   Core Register contain:
 184:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register
 185:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Register
 186:Drivers/CMSIS/Include/core_cm3.h ****   - Core SCB Register
 187:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Register
 188:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Register
 189:Drivers/CMSIS/Include/core_cm3.h ****   - Core MPU Register
 190:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
 191:Drivers/CMSIS/Include/core_cm3.h **** /**
 192:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 193:Drivers/CMSIS/Include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 194:Drivers/CMSIS/Include/core_cm3.h **** */
 195:Drivers/CMSIS/Include/core_cm3.h **** 
 196:Drivers/CMSIS/Include/core_cm3.h **** /**
 197:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 198:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 199:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Core Register type definitions.
 200:Drivers/CMSIS/Include/core_cm3.h ****   @{
 201:Drivers/CMSIS/Include/core_cm3.h ****  */
 202:Drivers/CMSIS/Include/core_cm3.h **** 
 203:Drivers/CMSIS/Include/core_cm3.h **** /**
 204:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 5


 205:Drivers/CMSIS/Include/core_cm3.h ****  */
 206:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 207:Drivers/CMSIS/Include/core_cm3.h **** {
 208:Drivers/CMSIS/Include/core_cm3.h ****   struct
 209:Drivers/CMSIS/Include/core_cm3.h ****   {
 210:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 211:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 212:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 213:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 214:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 215:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 216:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 217:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 218:Drivers/CMSIS/Include/core_cm3.h **** } APSR_Type;
 219:Drivers/CMSIS/Include/core_cm3.h **** 
 220:Drivers/CMSIS/Include/core_cm3.h **** /* APSR Register Definitions */
 221:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 222:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm3.h **** 
 224:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 225:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 226:Drivers/CMSIS/Include/core_cm3.h **** 
 227:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 228:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 229:Drivers/CMSIS/Include/core_cm3.h **** 
 230:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 231:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 232:Drivers/CMSIS/Include/core_cm3.h **** 
 233:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 234:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 235:Drivers/CMSIS/Include/core_cm3.h **** 
 236:Drivers/CMSIS/Include/core_cm3.h **** 
 237:Drivers/CMSIS/Include/core_cm3.h **** /**
 238:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 239:Drivers/CMSIS/Include/core_cm3.h ****  */
 240:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 241:Drivers/CMSIS/Include/core_cm3.h **** {
 242:Drivers/CMSIS/Include/core_cm3.h ****   struct
 243:Drivers/CMSIS/Include/core_cm3.h ****   {
 244:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 245:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 246:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 247:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 248:Drivers/CMSIS/Include/core_cm3.h **** } IPSR_Type;
 249:Drivers/CMSIS/Include/core_cm3.h **** 
 250:Drivers/CMSIS/Include/core_cm3.h **** /* IPSR Register Definitions */
 251:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 252:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 253:Drivers/CMSIS/Include/core_cm3.h **** 
 254:Drivers/CMSIS/Include/core_cm3.h **** 
 255:Drivers/CMSIS/Include/core_cm3.h **** /**
 256:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 257:Drivers/CMSIS/Include/core_cm3.h ****  */
 258:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 259:Drivers/CMSIS/Include/core_cm3.h **** {
 260:Drivers/CMSIS/Include/core_cm3.h ****   struct
 261:Drivers/CMSIS/Include/core_cm3.h ****   {
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 6


 262:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 263:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 264:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 265:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:8;               /*!< bit: 16..23  Reserved */
 266:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 267:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 268:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 269:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 270:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 271:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 272:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 273:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 274:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 275:Drivers/CMSIS/Include/core_cm3.h **** } xPSR_Type;
 276:Drivers/CMSIS/Include/core_cm3.h **** 
 277:Drivers/CMSIS/Include/core_cm3.h **** /* xPSR Register Definitions */
 278:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 279:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm3.h **** 
 281:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 282:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 283:Drivers/CMSIS/Include/core_cm3.h **** 
 284:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 285:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 286:Drivers/CMSIS/Include/core_cm3.h **** 
 287:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 288:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 289:Drivers/CMSIS/Include/core_cm3.h **** 
 290:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 291:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 292:Drivers/CMSIS/Include/core_cm3.h **** 
 293:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 294:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 295:Drivers/CMSIS/Include/core_cm3.h **** 
 296:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 297:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 298:Drivers/CMSIS/Include/core_cm3.h **** 
 299:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 300:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 301:Drivers/CMSIS/Include/core_cm3.h **** 
 302:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 303:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 304:Drivers/CMSIS/Include/core_cm3.h **** 
 305:Drivers/CMSIS/Include/core_cm3.h **** 
 306:Drivers/CMSIS/Include/core_cm3.h **** /**
 307:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 308:Drivers/CMSIS/Include/core_cm3.h ****  */
 309:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 310:Drivers/CMSIS/Include/core_cm3.h **** {
 311:Drivers/CMSIS/Include/core_cm3.h ****   struct
 312:Drivers/CMSIS/Include/core_cm3.h ****   {
 313:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 314:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 315:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 316:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 317:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 318:Drivers/CMSIS/Include/core_cm3.h **** } CONTROL_Type;
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 7


 319:Drivers/CMSIS/Include/core_cm3.h **** 
 320:Drivers/CMSIS/Include/core_cm3.h **** /* CONTROL Register Definitions */
 321:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 322:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 323:Drivers/CMSIS/Include/core_cm3.h **** 
 324:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 325:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 326:Drivers/CMSIS/Include/core_cm3.h **** 
 327:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 328:Drivers/CMSIS/Include/core_cm3.h **** 
 329:Drivers/CMSIS/Include/core_cm3.h **** 
 330:Drivers/CMSIS/Include/core_cm3.h **** /**
 331:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 332:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 333:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 334:Drivers/CMSIS/Include/core_cm3.h ****   @{
 335:Drivers/CMSIS/Include/core_cm3.h ****  */
 336:Drivers/CMSIS/Include/core_cm3.h **** 
 337:Drivers/CMSIS/Include/core_cm3.h **** /**
 338:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 339:Drivers/CMSIS/Include/core_cm3.h ****  */
 340:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 341:Drivers/CMSIS/Include/core_cm3.h **** {
 342:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 343:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[24U];
 344:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 345:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RSERVED1[24U];
 346:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 347:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[24U];
 348:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 349:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[24U];
 350:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 351:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[56U];
 352:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 353:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[644U];
 354:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 355:Drivers/CMSIS/Include/core_cm3.h **** }  NVIC_Type;
 356:Drivers/CMSIS/Include/core_cm3.h **** 
 357:Drivers/CMSIS/Include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 358:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 359:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 360:Drivers/CMSIS/Include/core_cm3.h **** 
 361:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 362:Drivers/CMSIS/Include/core_cm3.h **** 
 363:Drivers/CMSIS/Include/core_cm3.h **** 
 364:Drivers/CMSIS/Include/core_cm3.h **** /**
 365:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 366:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 367:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 368:Drivers/CMSIS/Include/core_cm3.h ****   @{
 369:Drivers/CMSIS/Include/core_cm3.h ****  */
 370:Drivers/CMSIS/Include/core_cm3.h **** 
 371:Drivers/CMSIS/Include/core_cm3.h **** /**
 372:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 373:Drivers/CMSIS/Include/core_cm3.h ****  */
 374:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 375:Drivers/CMSIS/Include/core_cm3.h **** {
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 8


 376:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 377:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 378:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 379:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 380:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 381:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 382:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 383:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 384:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 385:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 386:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 387:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 388:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 389:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 390:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 391:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 392:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 393:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 394:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 395:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[5U];
 396:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 397:Drivers/CMSIS/Include/core_cm3.h **** } SCB_Type;
 398:Drivers/CMSIS/Include/core_cm3.h **** 
 399:Drivers/CMSIS/Include/core_cm3.h **** /* SCB CPUID Register Definitions */
 400:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 402:Drivers/CMSIS/Include/core_cm3.h **** 
 403:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 405:Drivers/CMSIS/Include/core_cm3.h **** 
 406:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 408:Drivers/CMSIS/Include/core_cm3.h **** 
 409:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 411:Drivers/CMSIS/Include/core_cm3.h **** 
 412:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 414:Drivers/CMSIS/Include/core_cm3.h **** 
 415:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 416:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 418:Drivers/CMSIS/Include/core_cm3.h **** 
 419:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 421:Drivers/CMSIS/Include/core_cm3.h **** 
 422:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 424:Drivers/CMSIS/Include/core_cm3.h **** 
 425:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm3.h **** 
 428:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm3.h **** 
 431:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 432:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 9


 433:Drivers/CMSIS/Include/core_cm3.h **** 
 434:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 435:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 436:Drivers/CMSIS/Include/core_cm3.h **** 
 437:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 438:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 439:Drivers/CMSIS/Include/core_cm3.h **** 
 440:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 441:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 442:Drivers/CMSIS/Include/core_cm3.h **** 
 443:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm3.h **** 
 446:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 447:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__CM3_REV) && (__CM3_REV < 0x0201U)                   /* core r2p1 */
 448:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 449:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm3.h **** 
 451:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 452:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm3.h **** #else
 454:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 455:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 456:Drivers/CMSIS/Include/core_cm3.h **** #endif
 457:Drivers/CMSIS/Include/core_cm3.h **** 
 458:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 459:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 461:Drivers/CMSIS/Include/core_cm3.h **** 
 462:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 463:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm3.h **** 
 465:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 466:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm3.h **** 
 468:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 469:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm3.h **** 
 471:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm3.h **** 
 474:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm3.h **** 
 477:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm3.h **** 
 480:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Control Register Definitions */
 481:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 483:Drivers/CMSIS/Include/core_cm3.h **** 
 484:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 486:Drivers/CMSIS/Include/core_cm3.h **** 
 487:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 10


 490:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 491:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm3.h **** 
 494:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm3.h **** 
 497:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm3.h **** 
 500:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm3.h **** 
 503:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 505:Drivers/CMSIS/Include/core_cm3.h **** 
 506:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 508:Drivers/CMSIS/Include/core_cm3.h **** 
 509:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 510:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm3.h **** 
 513:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm3.h **** 
 516:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 517:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm3.h **** 
 519:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm3.h **** 
 522:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm3.h **** 
 525:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm3.h **** 
 528:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm3.h **** 
 531:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm3.h **** 
 534:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm3.h **** 
 537:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm3.h **** 
 540:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm3.h **** 
 543:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm3.h **** 
 546:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 11


 547:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm3.h **** 
 549:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm3.h **** 
 552:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 553:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm3.h **** 
 556:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm3.h **** 
 559:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm3.h **** 
 562:Drivers/CMSIS/Include/core_cm3.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 563:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm3.h **** 
 566:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm3.h **** 
 569:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm3.h **** 
 572:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm3.h **** 
 575:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm3.h **** 
 578:Drivers/CMSIS/Include/core_cm3.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 579:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm3.h **** 
 582:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm3.h **** 
 585:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm3.h **** 
 588:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm3.h **** 
 591:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm3.h **** 
 594:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm3.h **** 
 597:Drivers/CMSIS/Include/core_cm3.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 598:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm3.h **** 
 601:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 12


 604:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm3.h **** 
 607:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm3.h **** 
 610:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm3.h **** 
 613:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm3.h **** 
 616:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 617:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm3.h **** 
 620:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm3.h **** 
 623:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm3.h **** 
 626:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 627:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm3.h **** 
 630:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm3.h **** 
 633:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm3.h **** 
 636:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm3.h **** 
 639:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm3.h **** 
 642:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 643:Drivers/CMSIS/Include/core_cm3.h **** 
 644:Drivers/CMSIS/Include/core_cm3.h **** 
 645:Drivers/CMSIS/Include/core_cm3.h **** /**
 646:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 647:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 648:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 649:Drivers/CMSIS/Include/core_cm3.h ****   @{
 650:Drivers/CMSIS/Include/core_cm3.h ****  */
 651:Drivers/CMSIS/Include/core_cm3.h **** 
 652:Drivers/CMSIS/Include/core_cm3.h **** /**
 653:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 654:Drivers/CMSIS/Include/core_cm3.h ****  */
 655:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 656:Drivers/CMSIS/Include/core_cm3.h **** {
 657:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 658:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 659:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__CM3_REV) && (__CM3_REV >= 0x200U)
 660:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 13


 661:Drivers/CMSIS/Include/core_cm3.h **** #else
 662:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 663:Drivers/CMSIS/Include/core_cm3.h **** #endif
 664:Drivers/CMSIS/Include/core_cm3.h **** } SCnSCB_Type;
 665:Drivers/CMSIS/Include/core_cm3.h **** 
 666:Drivers/CMSIS/Include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 667:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 668:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 669:Drivers/CMSIS/Include/core_cm3.h **** 
 670:Drivers/CMSIS/Include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 671:Drivers/CMSIS/Include/core_cm3.h **** 
 672:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 673:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 674:Drivers/CMSIS/Include/core_cm3.h **** 
 675:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 676:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 677:Drivers/CMSIS/Include/core_cm3.h **** 
 678:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 679:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 680:Drivers/CMSIS/Include/core_cm3.h **** 
 681:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 682:Drivers/CMSIS/Include/core_cm3.h **** 
 683:Drivers/CMSIS/Include/core_cm3.h **** 
 684:Drivers/CMSIS/Include/core_cm3.h **** /**
 685:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 686:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 687:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 688:Drivers/CMSIS/Include/core_cm3.h ****   @{
 689:Drivers/CMSIS/Include/core_cm3.h ****  */
 690:Drivers/CMSIS/Include/core_cm3.h **** 
 691:Drivers/CMSIS/Include/core_cm3.h **** /**
 692:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 693:Drivers/CMSIS/Include/core_cm3.h ****  */
 694:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 695:Drivers/CMSIS/Include/core_cm3.h **** {
 696:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 697:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 698:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 699:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 700:Drivers/CMSIS/Include/core_cm3.h **** } SysTick_Type;
 701:Drivers/CMSIS/Include/core_cm3.h **** 
 702:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 703:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 704:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 705:Drivers/CMSIS/Include/core_cm3.h **** 
 706:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 707:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 708:Drivers/CMSIS/Include/core_cm3.h **** 
 709:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 710:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 711:Drivers/CMSIS/Include/core_cm3.h **** 
 712:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 713:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 714:Drivers/CMSIS/Include/core_cm3.h **** 
 715:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Reload Register Definitions */
 716:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 717:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 14


 718:Drivers/CMSIS/Include/core_cm3.h **** 
 719:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Current Register Definitions */
 720:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 721:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 722:Drivers/CMSIS/Include/core_cm3.h **** 
 723:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 724:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 725:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 726:Drivers/CMSIS/Include/core_cm3.h **** 
 727:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 728:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 729:Drivers/CMSIS/Include/core_cm3.h **** 
 730:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 731:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 732:Drivers/CMSIS/Include/core_cm3.h **** 
 733:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 734:Drivers/CMSIS/Include/core_cm3.h **** 
 735:Drivers/CMSIS/Include/core_cm3.h **** 
 736:Drivers/CMSIS/Include/core_cm3.h **** /**
 737:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 738:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 739:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 740:Drivers/CMSIS/Include/core_cm3.h ****   @{
 741:Drivers/CMSIS/Include/core_cm3.h ****  */
 742:Drivers/CMSIS/Include/core_cm3.h **** 
 743:Drivers/CMSIS/Include/core_cm3.h **** /**
 744:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 745:Drivers/CMSIS/Include/core_cm3.h ****  */
 746:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 747:Drivers/CMSIS/Include/core_cm3.h **** {
 748:Drivers/CMSIS/Include/core_cm3.h ****   __OM  union
 749:Drivers/CMSIS/Include/core_cm3.h ****   {
 750:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 751:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 752:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 753:Drivers/CMSIS/Include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 754:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[864U];
 755:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 756:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[15U];
 757:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 758:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[15U];
 759:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 760:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[29U];
 761:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 762:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 763:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 764:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[43U];
 765:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 766:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 767:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[6U];
 768:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 769:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 770:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 771:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 772:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 773:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 774:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 15


 775:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 776:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 777:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 778:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 779:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 780:Drivers/CMSIS/Include/core_cm3.h **** } ITM_Type;
 781:Drivers/CMSIS/Include/core_cm3.h **** 
 782:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 783:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 784:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 785:Drivers/CMSIS/Include/core_cm3.h **** 
 786:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 787:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 788:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 789:Drivers/CMSIS/Include/core_cm3.h **** 
 790:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 791:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 792:Drivers/CMSIS/Include/core_cm3.h **** 
 793:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 794:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 795:Drivers/CMSIS/Include/core_cm3.h **** 
 796:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 797:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 798:Drivers/CMSIS/Include/core_cm3.h **** 
 799:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 800:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 801:Drivers/CMSIS/Include/core_cm3.h **** 
 802:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 803:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 804:Drivers/CMSIS/Include/core_cm3.h **** 
 805:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 806:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 807:Drivers/CMSIS/Include/core_cm3.h **** 
 808:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 809:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 810:Drivers/CMSIS/Include/core_cm3.h **** 
 811:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 812:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 813:Drivers/CMSIS/Include/core_cm3.h **** 
 814:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 815:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 816:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 817:Drivers/CMSIS/Include/core_cm3.h **** 
 818:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 819:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 820:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 821:Drivers/CMSIS/Include/core_cm3.h **** 
 822:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 823:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 824:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 825:Drivers/CMSIS/Include/core_cm3.h **** 
 826:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 827:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 828:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 829:Drivers/CMSIS/Include/core_cm3.h **** 
 830:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 831:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 16


 832:Drivers/CMSIS/Include/core_cm3.h **** 
 833:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 834:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 835:Drivers/CMSIS/Include/core_cm3.h **** 
 836:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 837:Drivers/CMSIS/Include/core_cm3.h **** 
 838:Drivers/CMSIS/Include/core_cm3.h **** 
 839:Drivers/CMSIS/Include/core_cm3.h **** /**
 840:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 841:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 842:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 843:Drivers/CMSIS/Include/core_cm3.h ****   @{
 844:Drivers/CMSIS/Include/core_cm3.h ****  */
 845:Drivers/CMSIS/Include/core_cm3.h **** 
 846:Drivers/CMSIS/Include/core_cm3.h **** /**
 847:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 848:Drivers/CMSIS/Include/core_cm3.h ****  */
 849:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 850:Drivers/CMSIS/Include/core_cm3.h **** {
 851:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 852:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 853:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 854:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 855:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 856:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 857:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 858:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 859:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 860:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 861:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 862:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 863:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 864:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 865:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 866:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 867:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 868:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 869:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 870:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[1U];
 871:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 872:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 873:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 874:Drivers/CMSIS/Include/core_cm3.h **** } DWT_Type;
 875:Drivers/CMSIS/Include/core_cm3.h **** 
 876:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Control Register Definitions */
 877:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 878:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 879:Drivers/CMSIS/Include/core_cm3.h **** 
 880:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 881:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 882:Drivers/CMSIS/Include/core_cm3.h **** 
 883:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 884:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 885:Drivers/CMSIS/Include/core_cm3.h **** 
 886:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 887:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 888:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 17


 889:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 890:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 891:Drivers/CMSIS/Include/core_cm3.h **** 
 892:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 893:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 894:Drivers/CMSIS/Include/core_cm3.h **** 
 895:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 896:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 897:Drivers/CMSIS/Include/core_cm3.h **** 
 898:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 899:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 900:Drivers/CMSIS/Include/core_cm3.h **** 
 901:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 902:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 903:Drivers/CMSIS/Include/core_cm3.h **** 
 904:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 905:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 906:Drivers/CMSIS/Include/core_cm3.h **** 
 907:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 908:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 909:Drivers/CMSIS/Include/core_cm3.h **** 
 910:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 911:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 912:Drivers/CMSIS/Include/core_cm3.h **** 
 913:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 914:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 915:Drivers/CMSIS/Include/core_cm3.h **** 
 916:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 917:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 918:Drivers/CMSIS/Include/core_cm3.h **** 
 919:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 920:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 921:Drivers/CMSIS/Include/core_cm3.h **** 
 922:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 923:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 924:Drivers/CMSIS/Include/core_cm3.h **** 
 925:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 926:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 927:Drivers/CMSIS/Include/core_cm3.h **** 
 928:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 930:Drivers/CMSIS/Include/core_cm3.h **** 
 931:Drivers/CMSIS/Include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 932:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 933:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 934:Drivers/CMSIS/Include/core_cm3.h **** 
 935:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 936:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 937:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 938:Drivers/CMSIS/Include/core_cm3.h **** 
 939:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 940:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 941:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 942:Drivers/CMSIS/Include/core_cm3.h **** 
 943:Drivers/CMSIS/Include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 944:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 945:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 18


 946:Drivers/CMSIS/Include/core_cm3.h **** 
 947:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 948:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 949:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 950:Drivers/CMSIS/Include/core_cm3.h **** 
 951:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 952:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 953:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 954:Drivers/CMSIS/Include/core_cm3.h **** 
 955:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 956:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 957:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 958:Drivers/CMSIS/Include/core_cm3.h **** 
 959:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 960:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 961:Drivers/CMSIS/Include/core_cm3.h **** 
 962:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 963:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 964:Drivers/CMSIS/Include/core_cm3.h **** 
 965:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 966:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 967:Drivers/CMSIS/Include/core_cm3.h **** 
 968:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 969:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 970:Drivers/CMSIS/Include/core_cm3.h **** 
 971:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 972:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 973:Drivers/CMSIS/Include/core_cm3.h **** 
 974:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 975:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 976:Drivers/CMSIS/Include/core_cm3.h **** 
 977:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 978:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 979:Drivers/CMSIS/Include/core_cm3.h **** 
 980:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 981:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 982:Drivers/CMSIS/Include/core_cm3.h **** 
 983:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 984:Drivers/CMSIS/Include/core_cm3.h **** 
 985:Drivers/CMSIS/Include/core_cm3.h **** 
 986:Drivers/CMSIS/Include/core_cm3.h **** /**
 987:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 988:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 989:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 990:Drivers/CMSIS/Include/core_cm3.h ****   @{
 991:Drivers/CMSIS/Include/core_cm3.h ****  */
 992:Drivers/CMSIS/Include/core_cm3.h **** 
 993:Drivers/CMSIS/Include/core_cm3.h **** /**
 994:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 995:Drivers/CMSIS/Include/core_cm3.h ****  */
 996:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 997:Drivers/CMSIS/Include/core_cm3.h **** {
 998:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 999:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1000:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[2U];
1001:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1002:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[55U];
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 19


1003:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1004:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[131U];
1005:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1006:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1007:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1008:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[759U];
1009:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1010:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1011:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1012:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[1U];
1013:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1014:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1015:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1016:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[39U];
1017:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1018:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1019:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED7[8U];
1020:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1021:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1022:Drivers/CMSIS/Include/core_cm3.h **** } TPI_Type;
1023:Drivers/CMSIS/Include/core_cm3.h **** 
1024:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1025:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1026:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1027:Drivers/CMSIS/Include/core_cm3.h **** 
1028:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1029:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1030:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1031:Drivers/CMSIS/Include/core_cm3.h **** 
1032:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1033:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1034:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1035:Drivers/CMSIS/Include/core_cm3.h **** 
1036:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1037:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1038:Drivers/CMSIS/Include/core_cm3.h **** 
1039:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1040:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1041:Drivers/CMSIS/Include/core_cm3.h **** 
1042:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1043:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1044:Drivers/CMSIS/Include/core_cm3.h **** 
1045:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1046:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1047:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1048:Drivers/CMSIS/Include/core_cm3.h **** 
1049:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1050:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1051:Drivers/CMSIS/Include/core_cm3.h **** 
1052:Drivers/CMSIS/Include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1053:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1054:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1055:Drivers/CMSIS/Include/core_cm3.h **** 
1056:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1057:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1058:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1059:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 20


1060:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1061:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1062:Drivers/CMSIS/Include/core_cm3.h **** 
1063:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1064:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1065:Drivers/CMSIS/Include/core_cm3.h **** 
1066:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1067:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1068:Drivers/CMSIS/Include/core_cm3.h **** 
1069:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1070:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1071:Drivers/CMSIS/Include/core_cm3.h **** 
1072:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1073:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1074:Drivers/CMSIS/Include/core_cm3.h **** 
1075:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1076:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1077:Drivers/CMSIS/Include/core_cm3.h **** 
1078:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1079:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1080:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1081:Drivers/CMSIS/Include/core_cm3.h **** 
1082:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1083:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1084:Drivers/CMSIS/Include/core_cm3.h **** 
1085:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1087:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:Drivers/CMSIS/Include/core_cm3.h **** 
1089:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1090:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:Drivers/CMSIS/Include/core_cm3.h **** 
1092:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1093:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:Drivers/CMSIS/Include/core_cm3.h **** 
1095:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1096:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:Drivers/CMSIS/Include/core_cm3.h **** 
1098:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1099:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:Drivers/CMSIS/Include/core_cm3.h **** 
1101:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1102:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:Drivers/CMSIS/Include/core_cm3.h **** 
1104:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1105:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:Drivers/CMSIS/Include/core_cm3.h **** 
1107:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1108:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1109:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1110:Drivers/CMSIS/Include/core_cm3.h **** 
1111:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1112:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1113:Drivers/CMSIS/Include/core_cm3.h **** 
1114:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1115:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1116:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 21


1117:Drivers/CMSIS/Include/core_cm3.h **** 
1118:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVID Register Definitions */
1119:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1120:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1121:Drivers/CMSIS/Include/core_cm3.h **** 
1122:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1123:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1124:Drivers/CMSIS/Include/core_cm3.h **** 
1125:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1126:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1127:Drivers/CMSIS/Include/core_cm3.h **** 
1128:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1129:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1130:Drivers/CMSIS/Include/core_cm3.h **** 
1131:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1132:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1133:Drivers/CMSIS/Include/core_cm3.h **** 
1134:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1135:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1136:Drivers/CMSIS/Include/core_cm3.h **** 
1137:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1138:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1139:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:Drivers/CMSIS/Include/core_cm3.h **** 
1141:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1142:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1143:Drivers/CMSIS/Include/core_cm3.h **** 
1144:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1145:Drivers/CMSIS/Include/core_cm3.h **** 
1146:Drivers/CMSIS/Include/core_cm3.h **** 
1147:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1148:Drivers/CMSIS/Include/core_cm3.h **** /**
1149:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1150:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1151:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1152:Drivers/CMSIS/Include/core_cm3.h ****   @{
1153:Drivers/CMSIS/Include/core_cm3.h ****  */
1154:Drivers/CMSIS/Include/core_cm3.h **** 
1155:Drivers/CMSIS/Include/core_cm3.h **** /**
1156:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1157:Drivers/CMSIS/Include/core_cm3.h ****  */
1158:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1159:Drivers/CMSIS/Include/core_cm3.h **** {
1160:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1161:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1162:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1163:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1164:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1165:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1166:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1167:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1168:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1169:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1170:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1171:Drivers/CMSIS/Include/core_cm3.h **** } MPU_Type;
1172:Drivers/CMSIS/Include/core_cm3.h **** 
1173:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_RALIASES                  4U
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 22


1174:Drivers/CMSIS/Include/core_cm3.h **** 
1175:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Type Register Definitions */
1176:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1177:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1178:Drivers/CMSIS/Include/core_cm3.h **** 
1179:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1180:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1181:Drivers/CMSIS/Include/core_cm3.h **** 
1182:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1183:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1184:Drivers/CMSIS/Include/core_cm3.h **** 
1185:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Control Register Definitions */
1186:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1187:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1188:Drivers/CMSIS/Include/core_cm3.h **** 
1189:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1190:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1191:Drivers/CMSIS/Include/core_cm3.h **** 
1192:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1193:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1194:Drivers/CMSIS/Include/core_cm3.h **** 
1195:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Number Register Definitions */
1196:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1197:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1198:Drivers/CMSIS/Include/core_cm3.h **** 
1199:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1200:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1201:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1202:Drivers/CMSIS/Include/core_cm3.h **** 
1203:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1204:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1205:Drivers/CMSIS/Include/core_cm3.h **** 
1206:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1207:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1208:Drivers/CMSIS/Include/core_cm3.h **** 
1209:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1210:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1211:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1212:Drivers/CMSIS/Include/core_cm3.h **** 
1213:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1214:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1215:Drivers/CMSIS/Include/core_cm3.h **** 
1216:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1217:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1218:Drivers/CMSIS/Include/core_cm3.h **** 
1219:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1221:Drivers/CMSIS/Include/core_cm3.h **** 
1222:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1223:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1224:Drivers/CMSIS/Include/core_cm3.h **** 
1225:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1226:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1227:Drivers/CMSIS/Include/core_cm3.h **** 
1228:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1229:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1230:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 23


1231:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm3.h **** 
1234:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm3.h **** 
1237:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm3.h **** 
1240:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1241:Drivers/CMSIS/Include/core_cm3.h **** #endif
1242:Drivers/CMSIS/Include/core_cm3.h **** 
1243:Drivers/CMSIS/Include/core_cm3.h **** 
1244:Drivers/CMSIS/Include/core_cm3.h **** /**
1245:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1246:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1247:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1248:Drivers/CMSIS/Include/core_cm3.h ****   @{
1249:Drivers/CMSIS/Include/core_cm3.h ****  */
1250:Drivers/CMSIS/Include/core_cm3.h **** 
1251:Drivers/CMSIS/Include/core_cm3.h **** /**
1252:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1253:Drivers/CMSIS/Include/core_cm3.h ****  */
1254:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1255:Drivers/CMSIS/Include/core_cm3.h **** {
1256:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1257:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1258:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1259:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1260:Drivers/CMSIS/Include/core_cm3.h **** } CoreDebug_Type;
1261:Drivers/CMSIS/Include/core_cm3.h **** 
1262:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1263:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1264:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1265:Drivers/CMSIS/Include/core_cm3.h **** 
1266:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1267:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1268:Drivers/CMSIS/Include/core_cm3.h **** 
1269:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1270:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1271:Drivers/CMSIS/Include/core_cm3.h **** 
1272:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1273:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1274:Drivers/CMSIS/Include/core_cm3.h **** 
1275:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1276:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1277:Drivers/CMSIS/Include/core_cm3.h **** 
1278:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1279:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1280:Drivers/CMSIS/Include/core_cm3.h **** 
1281:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1282:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1283:Drivers/CMSIS/Include/core_cm3.h **** 
1284:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1285:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1286:Drivers/CMSIS/Include/core_cm3.h **** 
1287:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 24


1288:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1289:Drivers/CMSIS/Include/core_cm3.h **** 
1290:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1291:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1292:Drivers/CMSIS/Include/core_cm3.h **** 
1293:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1294:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1295:Drivers/CMSIS/Include/core_cm3.h **** 
1296:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1297:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1298:Drivers/CMSIS/Include/core_cm3.h **** 
1299:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1300:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1301:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1302:Drivers/CMSIS/Include/core_cm3.h **** 
1303:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1304:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1305:Drivers/CMSIS/Include/core_cm3.h **** 
1306:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1307:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1308:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1309:Drivers/CMSIS/Include/core_cm3.h **** 
1310:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1311:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1312:Drivers/CMSIS/Include/core_cm3.h **** 
1313:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1314:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1315:Drivers/CMSIS/Include/core_cm3.h **** 
1316:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1317:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1318:Drivers/CMSIS/Include/core_cm3.h **** 
1319:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1320:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1321:Drivers/CMSIS/Include/core_cm3.h **** 
1322:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1323:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1324:Drivers/CMSIS/Include/core_cm3.h **** 
1325:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1326:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1327:Drivers/CMSIS/Include/core_cm3.h **** 
1328:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1329:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1330:Drivers/CMSIS/Include/core_cm3.h **** 
1331:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1332:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1333:Drivers/CMSIS/Include/core_cm3.h **** 
1334:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1335:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1336:Drivers/CMSIS/Include/core_cm3.h **** 
1337:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1338:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1339:Drivers/CMSIS/Include/core_cm3.h **** 
1340:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1341:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1342:Drivers/CMSIS/Include/core_cm3.h **** 
1343:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1344:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 25


1345:Drivers/CMSIS/Include/core_cm3.h **** 
1346:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1347:Drivers/CMSIS/Include/core_cm3.h **** 
1348:Drivers/CMSIS/Include/core_cm3.h **** 
1349:Drivers/CMSIS/Include/core_cm3.h **** /**
1350:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1351:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1352:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1353:Drivers/CMSIS/Include/core_cm3.h ****   @{
1354:Drivers/CMSIS/Include/core_cm3.h ****  */
1355:Drivers/CMSIS/Include/core_cm3.h **** 
1356:Drivers/CMSIS/Include/core_cm3.h **** /**
1357:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1358:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1359:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1360:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted value.
1361:Drivers/CMSIS/Include/core_cm3.h **** */
1362:Drivers/CMSIS/Include/core_cm3.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1363:Drivers/CMSIS/Include/core_cm3.h **** 
1364:Drivers/CMSIS/Include/core_cm3.h **** /**
1365:Drivers/CMSIS/Include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1366:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1367:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1368:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted bit field value.
1369:Drivers/CMSIS/Include/core_cm3.h **** */
1370:Drivers/CMSIS/Include/core_cm3.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1371:Drivers/CMSIS/Include/core_cm3.h **** 
1372:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1373:Drivers/CMSIS/Include/core_cm3.h **** 
1374:Drivers/CMSIS/Include/core_cm3.h **** 
1375:Drivers/CMSIS/Include/core_cm3.h **** /**
1376:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1377:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1378:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1379:Drivers/CMSIS/Include/core_cm3.h ****   @{
1380:Drivers/CMSIS/Include/core_cm3.h ****  */
1381:Drivers/CMSIS/Include/core_cm3.h **** 
1382:Drivers/CMSIS/Include/core_cm3.h **** /* Memory mapping of Core Hardware */
1383:Drivers/CMSIS/Include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1384:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1385:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1386:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1387:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1388:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1389:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1390:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1391:Drivers/CMSIS/Include/core_cm3.h **** 
1392:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1393:Drivers/CMSIS/Include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1394:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1395:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1396:Drivers/CMSIS/Include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1397:Drivers/CMSIS/Include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1398:Drivers/CMSIS/Include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1399:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1400:Drivers/CMSIS/Include/core_cm3.h **** 
1401:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 26


1402:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1403:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1404:Drivers/CMSIS/Include/core_cm3.h **** #endif
1405:Drivers/CMSIS/Include/core_cm3.h **** 
1406:Drivers/CMSIS/Include/core_cm3.h **** /*@} */
1407:Drivers/CMSIS/Include/core_cm3.h **** 
1408:Drivers/CMSIS/Include/core_cm3.h **** 
1409:Drivers/CMSIS/Include/core_cm3.h **** 
1410:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
1411:Drivers/CMSIS/Include/core_cm3.h ****  *                Hardware Abstraction Layer
1412:Drivers/CMSIS/Include/core_cm3.h ****   Core Function Interface contains:
1413:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Functions
1414:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Functions
1415:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Functions
1416:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register Access Functions
1417:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
1418:Drivers/CMSIS/Include/core_cm3.h **** /**
1419:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1420:Drivers/CMSIS/Include/core_cm3.h **** */
1421:Drivers/CMSIS/Include/core_cm3.h **** 
1422:Drivers/CMSIS/Include/core_cm3.h **** 
1423:Drivers/CMSIS/Include/core_cm3.h **** 
1424:Drivers/CMSIS/Include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1425:Drivers/CMSIS/Include/core_cm3.h **** /**
1426:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1427:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1428:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1429:Drivers/CMSIS/Include/core_cm3.h ****   @{
1430:Drivers/CMSIS/Include/core_cm3.h ****  */
1431:Drivers/CMSIS/Include/core_cm3.h **** 
1432:Drivers/CMSIS/Include/core_cm3.h **** #ifdef CMSIS_NVIC_VIRTUAL
1433:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1434:Drivers/CMSIS/Include/core_cm3.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1435:Drivers/CMSIS/Include/core_cm3.h ****   #endif
1436:Drivers/CMSIS/Include/core_cm3.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1437:Drivers/CMSIS/Include/core_cm3.h **** #else
1438:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1439:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1440:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1441:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1442:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1443:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1444:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1445:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1446:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetActive              __NVIC_GetActive
1447:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1448:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1449:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1450:Drivers/CMSIS/Include/core_cm3.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1451:Drivers/CMSIS/Include/core_cm3.h **** 
1452:Drivers/CMSIS/Include/core_cm3.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1453:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1454:Drivers/CMSIS/Include/core_cm3.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1455:Drivers/CMSIS/Include/core_cm3.h ****   #endif
1456:Drivers/CMSIS/Include/core_cm3.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1457:Drivers/CMSIS/Include/core_cm3.h **** #else
1458:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetVector              __NVIC_SetVector
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 27


1459:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetVector              __NVIC_GetVector
1460:Drivers/CMSIS/Include/core_cm3.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1461:Drivers/CMSIS/Include/core_cm3.h **** 
1462:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_USER_IRQ_OFFSET          16
1463:Drivers/CMSIS/Include/core_cm3.h **** 
1464:Drivers/CMSIS/Include/core_cm3.h **** 
1465:Drivers/CMSIS/Include/core_cm3.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1466:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1467:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1468:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1469:Drivers/CMSIS/Include/core_cm3.h **** 
1470:Drivers/CMSIS/Include/core_cm3.h **** 
1471:Drivers/CMSIS/Include/core_cm3.h **** /**
1472:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Priority Grouping
1473:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1474:Drivers/CMSIS/Include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1475:Drivers/CMSIS/Include/core_cm3.h ****            Only values from 0..7 are used.
1476:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1477:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1478:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1479:Drivers/CMSIS/Include/core_cm3.h ****  */
1480:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1481:Drivers/CMSIS/Include/core_cm3.h **** {
1482:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t reg_value;
1483:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1484:Drivers/CMSIS/Include/core_cm3.h **** 
1485:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1486:Drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1487:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1488:Drivers/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1489:Drivers/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key a
1490:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR =  reg_value;
1491:Drivers/CMSIS/Include/core_cm3.h **** }
1492:Drivers/CMSIS/Include/core_cm3.h **** 
1493:Drivers/CMSIS/Include/core_cm3.h **** 
1494:Drivers/CMSIS/Include/core_cm3.h **** /**
1495:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Priority Grouping
1496:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1497:Drivers/CMSIS/Include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1498:Drivers/CMSIS/Include/core_cm3.h ****  */
1499:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1500:Drivers/CMSIS/Include/core_cm3.h **** {
1501:Drivers/CMSIS/Include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1502:Drivers/CMSIS/Include/core_cm3.h **** }
1503:Drivers/CMSIS/Include/core_cm3.h **** 
1504:Drivers/CMSIS/Include/core_cm3.h **** 
1505:Drivers/CMSIS/Include/core_cm3.h **** /**
1506:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Enable Interrupt
1507:Drivers/CMSIS/Include/core_cm3.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1508:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1509:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1510:Drivers/CMSIS/Include/core_cm3.h ****  */
1511:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1512:Drivers/CMSIS/Include/core_cm3.h **** {
1513:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1514:Drivers/CMSIS/Include/core_cm3.h ****   {
1515:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 28


1516:Drivers/CMSIS/Include/core_cm3.h ****   }
1517:Drivers/CMSIS/Include/core_cm3.h **** }
1518:Drivers/CMSIS/Include/core_cm3.h **** 
1519:Drivers/CMSIS/Include/core_cm3.h **** 
1520:Drivers/CMSIS/Include/core_cm3.h **** /**
1521:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Enable status
1522:Drivers/CMSIS/Include/core_cm3.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1523:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1524:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt is not enabled.
1525:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt is enabled.
1526:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1527:Drivers/CMSIS/Include/core_cm3.h ****  */
1528:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1529:Drivers/CMSIS/Include/core_cm3.h **** {
1530:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1531:Drivers/CMSIS/Include/core_cm3.h ****   {
1532:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1533:Drivers/CMSIS/Include/core_cm3.h ****   }
1534:Drivers/CMSIS/Include/core_cm3.h ****   else
1535:Drivers/CMSIS/Include/core_cm3.h ****   {
1536:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1537:Drivers/CMSIS/Include/core_cm3.h ****   }
1538:Drivers/CMSIS/Include/core_cm3.h **** }
1539:Drivers/CMSIS/Include/core_cm3.h **** 
1540:Drivers/CMSIS/Include/core_cm3.h **** 
1541:Drivers/CMSIS/Include/core_cm3.h **** /**
1542:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Disable Interrupt
1543:Drivers/CMSIS/Include/core_cm3.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1544:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1545:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1546:Drivers/CMSIS/Include/core_cm3.h ****  */
1547:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1548:Drivers/CMSIS/Include/core_cm3.h **** {
1549:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1550:Drivers/CMSIS/Include/core_cm3.h ****   {
1551:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1552:Drivers/CMSIS/Include/core_cm3.h ****     __DSB();
1553:Drivers/CMSIS/Include/core_cm3.h ****     __ISB();
1554:Drivers/CMSIS/Include/core_cm3.h ****   }
1555:Drivers/CMSIS/Include/core_cm3.h **** }
1556:Drivers/CMSIS/Include/core_cm3.h **** 
1557:Drivers/CMSIS/Include/core_cm3.h **** 
1558:Drivers/CMSIS/Include/core_cm3.h **** /**
1559:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Pending Interrupt
1560:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1561:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1562:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not pending.
1563:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is pending.
1564:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1565:Drivers/CMSIS/Include/core_cm3.h ****  */
1566:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1567:Drivers/CMSIS/Include/core_cm3.h **** {
1568:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1569:Drivers/CMSIS/Include/core_cm3.h ****   {
1570:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1571:Drivers/CMSIS/Include/core_cm3.h ****   }
1572:Drivers/CMSIS/Include/core_cm3.h ****   else
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 29


1573:Drivers/CMSIS/Include/core_cm3.h ****   {
1574:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1575:Drivers/CMSIS/Include/core_cm3.h ****   }
1576:Drivers/CMSIS/Include/core_cm3.h **** }
1577:Drivers/CMSIS/Include/core_cm3.h **** 
1578:Drivers/CMSIS/Include/core_cm3.h **** 
1579:Drivers/CMSIS/Include/core_cm3.h **** /**
1580:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Pending Interrupt
1581:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1582:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1583:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1584:Drivers/CMSIS/Include/core_cm3.h ****  */
1585:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1586:Drivers/CMSIS/Include/core_cm3.h **** {
1587:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1588:Drivers/CMSIS/Include/core_cm3.h ****   {
1589:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1590:Drivers/CMSIS/Include/core_cm3.h ****   }
1591:Drivers/CMSIS/Include/core_cm3.h **** }
1592:Drivers/CMSIS/Include/core_cm3.h **** 
1593:Drivers/CMSIS/Include/core_cm3.h **** 
1594:Drivers/CMSIS/Include/core_cm3.h **** /**
1595:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Clear Pending Interrupt
1596:Drivers/CMSIS/Include/core_cm3.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1597:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1598:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1599:Drivers/CMSIS/Include/core_cm3.h ****  */
1600:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1601:Drivers/CMSIS/Include/core_cm3.h **** {
1602:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1603:Drivers/CMSIS/Include/core_cm3.h ****   {
1604:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1605:Drivers/CMSIS/Include/core_cm3.h ****   }
1606:Drivers/CMSIS/Include/core_cm3.h **** }
1607:Drivers/CMSIS/Include/core_cm3.h **** 
1608:Drivers/CMSIS/Include/core_cm3.h **** 
1609:Drivers/CMSIS/Include/core_cm3.h **** /**
1610:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Active Interrupt
1611:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1612:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1613:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not active.
1614:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is active.
1615:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1616:Drivers/CMSIS/Include/core_cm3.h ****  */
1617:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1618:Drivers/CMSIS/Include/core_cm3.h **** {
1619:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1620:Drivers/CMSIS/Include/core_cm3.h ****   {
1621:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1622:Drivers/CMSIS/Include/core_cm3.h ****   }
1623:Drivers/CMSIS/Include/core_cm3.h ****   else
1624:Drivers/CMSIS/Include/core_cm3.h ****   {
1625:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1626:Drivers/CMSIS/Include/core_cm3.h ****   }
1627:Drivers/CMSIS/Include/core_cm3.h **** }
1628:Drivers/CMSIS/Include/core_cm3.h **** 
1629:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 30


1630:Drivers/CMSIS/Include/core_cm3.h **** /**
1631:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Interrupt Priority
1632:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1633:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify a device specific interrupt,
1634:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify a processor exception.
1635:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1636:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]  priority  Priority to set.
1637:Drivers/CMSIS/Include/core_cm3.h ****   \note    The priority cannot be set for every processor exception.
1638:Drivers/CMSIS/Include/core_cm3.h ****  */
1639:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1640:Drivers/CMSIS/Include/core_cm3.h **** {
  26              		.loc 1 1640 1
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 3960     		str	r1, [r7]
  43 000a FB71     		strb	r3, [r7, #7]
1641:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
  44              		.loc 1 1641 6
  45 000c 97F90730 		ldrsb	r3, [r7, #7]
  46 0010 002B     		cmp	r3, #0
  47 0012 0ADB     		blt	.L2
1642:Drivers/CMSIS/Include/core_cm3.h ****   {
1643:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
  48              		.loc 1 1643 48
  49 0014 3B68     		ldr	r3, [r7]
  50 0016 DAB2     		uxtb	r2, r3
  51              		.loc 1 1643 9
  52 0018 0C49     		ldr	r1, .L5
  53              		.loc 1 1643 15
  54 001a 97F90730 		ldrsb	r3, [r7, #7]
  55              		.loc 1 1643 48
  56 001e 1201     		lsls	r2, r2, #4
  57 0020 D2B2     		uxtb	r2, r2
  58              		.loc 1 1643 46
  59 0022 0B44     		add	r3, r3, r1
  60 0024 83F80023 		strb	r2, [r3, #768]
1644:Drivers/CMSIS/Include/core_cm3.h ****   }
1645:Drivers/CMSIS/Include/core_cm3.h ****   else
1646:Drivers/CMSIS/Include/core_cm3.h ****   {
1647:Drivers/CMSIS/Include/core_cm3.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1648:Drivers/CMSIS/Include/core_cm3.h ****   }
1649:Drivers/CMSIS/Include/core_cm3.h **** }
  61              		.loc 1 1649 1
  62 0028 0AE0     		b	.L4
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 31


  63              	.L2:
1647:Drivers/CMSIS/Include/core_cm3.h ****   }
  64              		.loc 1 1647 48
  65 002a 3B68     		ldr	r3, [r7]
  66 002c DAB2     		uxtb	r2, r3
1647:Drivers/CMSIS/Include/core_cm3.h ****   }
  67              		.loc 1 1647 8
  68 002e 0849     		ldr	r1, .L5+4
1647:Drivers/CMSIS/Include/core_cm3.h ****   }
  69              		.loc 1 1647 32
  70 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  71 0032 03F00F03 		and	r3, r3, #15
1647:Drivers/CMSIS/Include/core_cm3.h ****   }
  72              		.loc 1 1647 40
  73 0036 043B     		subs	r3, r3, #4
1647:Drivers/CMSIS/Include/core_cm3.h ****   }
  74              		.loc 1 1647 48
  75 0038 1201     		lsls	r2, r2, #4
  76 003a D2B2     		uxtb	r2, r2
1647:Drivers/CMSIS/Include/core_cm3.h ****   }
  77              		.loc 1 1647 46
  78 003c 0B44     		add	r3, r3, r1
  79 003e 1A76     		strb	r2, [r3, #24]
  80              	.L4:
  81              		.loc 1 1649 1
  82 0040 00BF     		nop
  83 0042 0C37     		adds	r7, r7, #12
  84              	.LCFI3:
  85              		.cfi_def_cfa_offset 4
  86 0044 BD46     		mov	sp, r7
  87              	.LCFI4:
  88              		.cfi_def_cfa_register 13
  89              		@ sp needed
  90 0046 80BC     		pop	{r7}
  91              	.LCFI5:
  92              		.cfi_restore 7
  93              		.cfi_def_cfa_offset 0
  94 0048 7047     		bx	lr
  95              	.L6:
  96 004a 00BF     		.align	2
  97              	.L5:
  98 004c 00E100E0 		.word	-536813312
  99 0050 00ED00E0 		.word	-536810240
 100              		.cfi_endproc
 101              	.LFE53:
 103              		.section	.bss.intensidadLed,"aw",%nobits
 104              		.align	2
 107              	intensidadLed:
 108 0000 00000000 		.space	4
 109              		.section	.bss.index_intensidad,"aw",%nobits
 112              	index_intensidad:
 113 0000 00       		.space	1
 114              		.section	.bss.caracteres,"aw",%nobits
 115              		.align	2
 118              	caracteres:
 119 0000 00000000 		.space	4
 120              		.section	.bss.index_caracteres,"aw",%nobits
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 32


 123              	index_caracteres:
 124 0000 00       		.space	1
 125              		.section	.bss.partyMode,"aw",%nobits
 128              	partyMode:
 129 0000 00       		.space	1
 130              		.section	.text.transmitirCadena,"ax",%progbits
 131              		.align	1
 132              		.global	transmitirCadena
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu softvfp
 138              	transmitirCadena:
 139              	.LFB65:
 140              		.file 2 "Core/Inc/myLib.h"
   1:Core/Inc/myLib.h **** #include "stm32f1xx.h"
   2:Core/Inc/myLib.h **** #include "stm32f103xb.h"
   3:Core/Inc/myLib.h **** #include <string.h>
   4:Core/Inc/myLib.h **** 
   5:Core/Inc/myLib.h **** #ifndef __MY_LIB
   6:Core/Inc/myLib.h **** #define __MY_LIB
   7:Core/Inc/myLib.h **** 
   8:Core/Inc/myLib.h **** // Frecuencia a la que funcionará el contador de los timers
   9:Core/Inc/myLib.h **** #define FRECUENCIA_CNT_LEDS 1e6
  10:Core/Inc/myLib.h **** #define PERIODO_PWM 20000
  11:Core/Inc/myLib.h **** #define PASO 2
  12:Core/Inc/myLib.h **** #define MAXIMA_INTENSIDAD (PERIODO_PWM/PASO)
  13:Core/Inc/myLib.h **** 
  14:Core/Inc/myLib.h **** #define COMIENZO_ROJO 0
  15:Core/Inc/myLib.h **** #define COMIENZO_
  16:Core/Inc/myLib.h **** 
  17:Core/Inc/myLib.h **** static char* intensidadLed;
  18:Core/Inc/myLib.h **** static uint8_t index_intensidad;
  19:Core/Inc/myLib.h **** 
  20:Core/Inc/myLib.h **** static char* caracteres;
  21:Core/Inc/myLib.h **** static uint8_t index_caracteres;
  22:Core/Inc/myLib.h **** 
  23:Core/Inc/myLib.h **** static uint8_t partyMode = 0;
  24:Core/Inc/myLib.h **** // Creame una enumeración
  25:Core/Inc/myLib.h **** enum {
  26:Core/Inc/myLib.h ****     NARANJA,
  27:Core/Inc/myLib.h ****     AMARILLO,
  28:Core/Inc/myLib.h ****     FLUOR,
  29:Core/Inc/myLib.h ****     ROSA,
  30:Core/Inc/myLib.h ****     ROJO,
  31:Core/Inc/myLib.h ****     VIOLETA,
  32:Core/Inc/myLib.h ****     VERDE,
  33:Core/Inc/myLib.h ****     CELESTE,
  34:Core/Inc/myLib.h ****     AZUL,
  35:Core/Inc/myLib.h ****     BLANCO,
  36:Core/Inc/myLib.h ****     CELESTE_MAR,
  37:Core/Inc/myLib.h ****     VIOLETA_OSCURO,
  38:Core/Inc/myLib.h ****     FUCSIA
  39:Core/Inc/myLib.h **** };
  40:Core/Inc/myLib.h **** 
  41:Core/Inc/myLib.h **** // Quiero una función con la que pueda ingresar una cadena de caracteres para meter en el buffer d
  42:Core/Inc/myLib.h **** // y que se transmita esa cadena de caracteres
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 33


  43:Core/Inc/myLib.h **** void transmitirCadena(char* cadena)
  44:Core/Inc/myLib.h **** {
 141              		.loc 2 44 1
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 16
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145 0000 80B5     		push	{r7, lr}
 146              	.LCFI6:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 84B0     		sub	sp, sp, #16
 151              	.LCFI7:
 152              		.cfi_def_cfa_offset 24
 153 0004 00AF     		add	r7, sp, #0
 154              	.LCFI8:
 155              		.cfi_def_cfa_register 7
 156 0006 7860     		str	r0, [r7, #4]
  45:Core/Inc/myLib.h ****     uint8_t longitud = strlen(cadena);
 157              		.loc 2 45 24
 158 0008 7868     		ldr	r0, [r7, #4]
 159 000a FFF7FEFF 		bl	strlen
 160 000e 0346     		mov	r3, r0
 161              		.loc 2 45 13
 162 0010 BB73     		strb	r3, [r7, #14]
 163              	.LBB2:
  46:Core/Inc/myLib.h ****     for(uint8_t i = 0; i < longitud; i++)
 164              		.loc 2 46 17
 165 0012 0023     		movs	r3, #0
 166 0014 FB73     		strb	r3, [r7, #15]
 167              		.loc 2 46 5
 168 0016 0FE0     		b	.L8
 169              	.L10:
  47:Core/Inc/myLib.h ****     {
  48:Core/Inc/myLib.h ****         while(!(USART1->SR & USART_SR_TC));
 170              		.loc 2 48 14
 171 0018 00BF     		nop
 172              	.L9:
 173              		.loc 2 48 23 discriminator 1
 174 001a 0C4B     		ldr	r3, .L11
 175 001c 1B68     		ldr	r3, [r3]
 176              		.loc 2 48 28 discriminator 1
 177 001e 03F04003 		and	r3, r3, #64
 178              		.loc 2 48 14 discriminator 1
 179 0022 002B     		cmp	r3, #0
 180 0024 F9D0     		beq	.L9
  49:Core/Inc/myLib.h ****         USART1->DR = cadena[i];
 181              		.loc 2 49 28 discriminator 2
 182 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 183 0028 7A68     		ldr	r2, [r7, #4]
 184 002a 1344     		add	r3, r3, r2
 185 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 186              		.loc 2 49 15 discriminator 2
 187 002e 074B     		ldr	r3, .L11
 188              		.loc 2 49 20 discriminator 2
 189 0030 5A60     		str	r2, [r3, #4]
  46:Core/Inc/myLib.h ****     for(uint8_t i = 0; i < longitud; i++)
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 34


 190              		.loc 2 46 39 discriminator 2
 191 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 192 0034 0133     		adds	r3, r3, #1
 193 0036 FB73     		strb	r3, [r7, #15]
 194              	.L8:
  46:Core/Inc/myLib.h ****     for(uint8_t i = 0; i < longitud; i++)
 195              		.loc 2 46 5 discriminator 1
 196 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 197 003a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 198 003c 9A42     		cmp	r2, r3
 199 003e EBD3     		bcc	.L10
 200              	.LBE2:
  50:Core/Inc/myLib.h ****     }
  51:Core/Inc/myLib.h **** }
 201              		.loc 2 51 1
 202 0040 00BF     		nop
 203 0042 00BF     		nop
 204 0044 1037     		adds	r7, r7, #16
 205              	.LCFI9:
 206              		.cfi_def_cfa_offset 8
 207 0046 BD46     		mov	sp, r7
 208              	.LCFI10:
 209              		.cfi_def_cfa_register 13
 210              		@ sp needed
 211 0048 80BD     		pop	{r7, pc}
 212              	.L12:
 213 004a 00BF     		.align	2
 214              	.L11:
 215 004c 00380140 		.word	1073821696
 216              		.cfi_endproc
 217              	.LFE65:
 219              		.section	.text.parpadearLedPlaca,"ax",%progbits
 220              		.align	1
 221              		.global	parpadearLedPlaca
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu softvfp
 227              	parpadearLedPlaca:
 228              	.LFB66:
  52:Core/Inc/myLib.h **** 
  53:Core/Inc/myLib.h **** // Sirve para parpadear una sola vez el LED de la placa
  54:Core/Inc/myLib.h **** void parpadearLedPlaca()
  55:Core/Inc/myLib.h **** {
 229              		.loc 2 55 1
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234 0000 80B4     		push	{r7}
 235              	.LCFI11:
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 7, -4
 238 0002 00AF     		add	r7, sp, #0
 239              	.LCFI12:
 240              		.cfi_def_cfa_register 7
  56:Core/Inc/myLib.h ****     TIM1->CR1 |= TIM_CR1_CEN;
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 35


 241              		.loc 2 56 15
 242 0004 064B     		ldr	r3, .L14
 243 0006 1B68     		ldr	r3, [r3]
 244 0008 054A     		ldr	r2, .L14
 245 000a 43F00103 		orr	r3, r3, #1
 246 000e 1360     		str	r3, [r2]
  57:Core/Inc/myLib.h ****     TIM1->SR = 0;
 247              		.loc 2 57 9
 248 0010 034B     		ldr	r3, .L14
 249              		.loc 2 57 14
 250 0012 0022     		movs	r2, #0
 251 0014 1A61     		str	r2, [r3, #16]
  58:Core/Inc/myLib.h **** }
 252              		.loc 2 58 1
 253 0016 00BF     		nop
 254 0018 BD46     		mov	sp, r7
 255              	.LCFI13:
 256              		.cfi_def_cfa_register 13
 257              		@ sp needed
 258 001a 80BC     		pop	{r7}
 259              	.LCFI14:
 260              		.cfi_restore 7
 261              		.cfi_def_cfa_offset 0
 262 001c 7047     		bx	lr
 263              	.L15:
 264 001e 00BF     		.align	2
 265              	.L14:
 266 0020 002C0140 		.word	1073818624
 267              		.cfi_endproc
 268              	.LFE66:
 270              		.section	.text.parpadearLedPlacaVeces,"ax",%progbits
 271              		.align	1
 272              		.global	parpadearLedPlacaVeces
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu softvfp
 278              	parpadearLedPlacaVeces:
 279              	.LFB67:
  59:Core/Inc/myLib.h **** 
  60:Core/Inc/myLib.h **** // Sirve para parpadear n veces el LED de la placa
  61:Core/Inc/myLib.h **** void parpadearLedPlacaVeces(uint64_t n)
  62:Core/Inc/myLib.h **** {
 280              		.loc 2 62 1
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 16
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 0000 B0B5     		push	{r4, r5, r7, lr}
 285              	.LCFI15:
 286              		.cfi_def_cfa_offset 16
 287              		.cfi_offset 4, -16
 288              		.cfi_offset 5, -12
 289              		.cfi_offset 7, -8
 290              		.cfi_offset 14, -4
 291 0002 84B0     		sub	sp, sp, #16
 292              	.LCFI16:
 293              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 36


 294 0004 00AF     		add	r7, sp, #0
 295              	.LCFI17:
 296              		.cfi_def_cfa_register 7
 297 0006 C7E90001 		strd	r0, [r7]
 298              	.LBB3:
  63:Core/Inc/myLib.h ****     for(uint64_t i = 0; i < n; i++)
 299              		.loc 2 63 18
 300 000a 4FF00002 		mov	r2, #0
 301 000e 4FF00003 		mov	r3, #0
 302 0012 C7E90223 		strd	r2, [r7, #8]
 303              		.loc 2 63 5
 304 0016 17E0     		b	.L17
 305              	.L20:
  64:Core/Inc/myLib.h ****     {
  65:Core/Inc/myLib.h ****         parpadearLedPlaca();
 306              		.loc 2 65 9
 307 0018 FFF7FEFF 		bl	parpadearLedPlaca
  66:Core/Inc/myLib.h ****         while(TIM1->CR1 & TIM_CR1_CEN);
 308              		.loc 2 66 14
 309 001c 00BF     		nop
 310              	.L18:
 311              		.loc 2 66 19 discriminator 1
 312 001e 114B     		ldr	r3, .L21
 313 0020 1B68     		ldr	r3, [r3]
 314              		.loc 2 66 25 discriminator 1
 315 0022 03F00103 		and	r3, r3, #1
 316              		.loc 2 66 14 discriminator 1
 317 0026 002B     		cmp	r3, #0
 318 0028 F9D1     		bne	.L18
  67:Core/Inc/myLib.h ****         while(NVIC->IABR[0] & TIM1_UP_IRQn);
 319              		.loc 2 67 14
 320 002a 00BF     		nop
 321              	.L19:
 322              		.loc 2 67 19 discriminator 1
 323 002c 0E4B     		ldr	r3, .L21+4
 324              		.loc 2 67 25 discriminator 1
 325 002e D3F80032 		ldr	r3, [r3, #512]
 326              		.loc 2 67 29 discriminator 1
 327 0032 03F01903 		and	r3, r3, #25
 328              		.loc 2 67 14 discriminator 1
 329 0036 002B     		cmp	r3, #0
 330 0038 F8D1     		bne	.L19
  63:Core/Inc/myLib.h ****     {
 331              		.loc 2 63 33 discriminator 2
 332 003a D7E90223 		ldrd	r2, [r7, #8]
 333 003e 541C     		adds	r4, r2, #1
 334 0040 43F10005 		adc	r5, r3, #0
 335 0044 C7E90245 		strd	r4, [r7, #8]
 336              	.L17:
  63:Core/Inc/myLib.h ****     {
 337              		.loc 2 63 5 discriminator 1
 338 0048 D7E90201 		ldrd	r0, [r7, #8]
 339 004c D7E90023 		ldrd	r2, [r7]
 340 0050 9042     		cmp	r0, r2
 341 0052 71EB0303 		sbcs	r3, r1, r3
 342 0056 DFD3     		bcc	.L20
 343              	.LBE3:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 37


  68:Core/Inc/myLib.h ****     }
  69:Core/Inc/myLib.h **** }
 344              		.loc 2 69 1
 345 0058 00BF     		nop
 346 005a 00BF     		nop
 347 005c 1037     		adds	r7, r7, #16
 348              	.LCFI18:
 349              		.cfi_def_cfa_offset 16
 350 005e BD46     		mov	sp, r7
 351              	.LCFI19:
 352              		.cfi_def_cfa_register 13
 353              		@ sp needed
 354 0060 B0BD     		pop	{r4, r5, r7, pc}
 355              	.L22:
 356 0062 00BF     		.align	2
 357              	.L21:
 358 0064 002C0140 		.word	1073818624
 359 0068 00E100E0 		.word	-536813312
 360              		.cfi_endproc
 361              	.LFE67:
 363              		.section	.text.msParpadeoLedPlaca,"ax",%progbits
 364              		.align	1
 365              		.global	msParpadeoLedPlaca
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu softvfp
 371              	msParpadeoLedPlaca:
 372              	.LFB68:
  70:Core/Inc/myLib.h **** 
  71:Core/Inc/myLib.h **** // Sirve para configurar el tiempo en el que estará encendido el LED
  72:Core/Inc/myLib.h **** void msParpadeoLedPlaca(uint16_t milisegundos)
  73:Core/Inc/myLib.h **** {
 373              		.loc 2 73 1
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 8
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378 0000 80B4     		push	{r7}
 379              	.LCFI20:
 380              		.cfi_def_cfa_offset 4
 381              		.cfi_offset 7, -4
 382 0002 83B0     		sub	sp, sp, #12
 383              	.LCFI21:
 384              		.cfi_def_cfa_offset 16
 385 0004 00AF     		add	r7, sp, #0
 386              	.LCFI22:
 387              		.cfi_def_cfa_register 7
 388 0006 0346     		mov	r3, r0
 389 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  74:Core/Inc/myLib.h ****     TIM1->ARR = milisegundos;
 390              		.loc 2 74 9
 391 000a 054A     		ldr	r2, .L24
 392              		.loc 2 74 15
 393 000c FB88     		ldrh	r3, [r7, #6]
 394 000e D362     		str	r3, [r2, #44]
  75:Core/Inc/myLib.h ****     TIM1->SR = 0;
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 38


 395              		.loc 2 75 9
 396 0010 034B     		ldr	r3, .L24
 397              		.loc 2 75 14
 398 0012 0022     		movs	r2, #0
 399 0014 1A61     		str	r2, [r3, #16]
  76:Core/Inc/myLib.h **** }
 400              		.loc 2 76 1
 401 0016 00BF     		nop
 402 0018 0C37     		adds	r7, r7, #12
 403              	.LCFI23:
 404              		.cfi_def_cfa_offset 4
 405 001a BD46     		mov	sp, r7
 406              	.LCFI24:
 407              		.cfi_def_cfa_register 13
 408              		@ sp needed
 409 001c 80BC     		pop	{r7}
 410              	.LCFI25:
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 001e 7047     		bx	lr
 414              	.L25:
 415              		.align	2
 416              	.L24:
 417 0020 002C0140 		.word	1073818624
 418              		.cfi_endproc
 419              	.LFE68:
 421              		.section	.text.esNumero,"ax",%progbits
 422              		.align	1
 423              		.global	esNumero
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 427              		.fpu softvfp
 429              	esNumero:
 430              	.LFB69:
  77:Core/Inc/myLib.h **** 
  78:Core/Inc/myLib.h **** uint8_t esNumero(uint8_t car)
  79:Core/Inc/myLib.h **** {
 431              		.loc 2 79 1
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 8
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 436 0000 80B4     		push	{r7}
 437              	.LCFI26:
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 7, -4
 440 0002 83B0     		sub	sp, sp, #12
 441              	.LCFI27:
 442              		.cfi_def_cfa_offset 16
 443 0004 00AF     		add	r7, sp, #0
 444              	.LCFI28:
 445              		.cfi_def_cfa_register 7
 446 0006 0346     		mov	r3, r0
 447 0008 FB71     		strb	r3, [r7, #7]
  80:Core/Inc/myLib.h ****     return car >= 0x30 && car <= 0x39;
 448              		.loc 2 80 24
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 39


 449 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 450 000c 2F2B     		cmp	r3, #47
 451 000e 04D9     		bls	.L27
 452              		.loc 2 80 24 is_stmt 0 discriminator 1
 453 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 454 0012 392B     		cmp	r3, #57
 455 0014 01D8     		bhi	.L27
 456              		.loc 2 80 24 discriminator 3
 457 0016 0123     		movs	r3, #1
 458 0018 00E0     		b	.L28
 459              	.L27:
 460              		.loc 2 80 24 discriminator 4
 461 001a 0023     		movs	r3, #0
 462              	.L28:
 463              		.loc 2 80 24 discriminator 6
 464 001c DBB2     		uxtb	r3, r3
  81:Core/Inc/myLib.h **** }
 465              		.loc 2 81 1 is_stmt 1 discriminator 6
 466 001e 1846     		mov	r0, r3
 467 0020 0C37     		adds	r7, r7, #12
 468              	.LCFI29:
 469              		.cfi_def_cfa_offset 4
 470 0022 BD46     		mov	sp, r7
 471              	.LCFI30:
 472              		.cfi_def_cfa_register 13
 473              		@ sp needed
 474 0024 80BC     		pop	{r7}
 475              	.LCFI31:
 476              		.cfi_restore 7
 477              		.cfi_def_cfa_offset 0
 478 0026 7047     		bx	lr
 479              		.cfi_endproc
 480              	.LFE69:
 482              		.section	.text.encenderNaranja,"ax",%progbits
 483              		.align	1
 484              		.global	encenderNaranja
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 488              		.fpu softvfp
 490              	encenderNaranja:
 491              	.LFB70:
  82:Core/Inc/myLib.h **** 
  83:Core/Inc/myLib.h **** void encenderNaranja()
  84:Core/Inc/myLib.h **** {
 492              		.loc 2 84 1
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 1, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 497 0000 80B4     		push	{r7}
 498              	.LCFI32:
 499              		.cfi_def_cfa_offset 4
 500              		.cfi_offset 7, -4
 501 0002 00AF     		add	r7, sp, #0
 502              	.LCFI33:
 503              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 40


  85:Core/Inc/myLib.h ****     TIM2->CCR2 = 3000 * PASO;
 504              		.loc 2 85 9
 505 0004 4FF08043 		mov	r3, #1073741824
 506              		.loc 2 85 16
 507 0008 41F27072 		movw	r2, #6000
 508 000c 9A63     		str	r2, [r3, #56]
  86:Core/Inc/myLib.h ****     TIM3->CCR2 = 500 * PASO;
 509              		.loc 2 86 9
 510 000e 054B     		ldr	r3, .L31
 511              		.loc 2 86 16
 512 0010 4FF47A72 		mov	r2, #1000
 513 0014 9A63     		str	r2, [r3, #56]
  87:Core/Inc/myLib.h ****     TIM4->CCR2 = 0;
 514              		.loc 2 87 9
 515 0016 044B     		ldr	r3, .L31+4
 516              		.loc 2 87 16
 517 0018 0022     		movs	r2, #0
 518 001a 9A63     		str	r2, [r3, #56]
  88:Core/Inc/myLib.h **** }
 519              		.loc 2 88 1
 520 001c 00BF     		nop
 521 001e BD46     		mov	sp, r7
 522              	.LCFI34:
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 0020 80BC     		pop	{r7}
 526              	.LCFI35:
 527              		.cfi_restore 7
 528              		.cfi_def_cfa_offset 0
 529 0022 7047     		bx	lr
 530              	.L32:
 531              		.align	2
 532              	.L31:
 533 0024 00040040 		.word	1073742848
 534 0028 00080040 		.word	1073743872
 535              		.cfi_endproc
 536              	.LFE70:
 538              		.section	.text.encenderAmarillo,"ax",%progbits
 539              		.align	1
 540              		.global	encenderAmarillo
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 544              		.fpu softvfp
 546              	encenderAmarillo:
 547              	.LFB71:
  89:Core/Inc/myLib.h **** 
  90:Core/Inc/myLib.h **** void encenderAmarillo()
  91:Core/Inc/myLib.h **** {
 548              		.loc 2 91 1
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553 0000 80B4     		push	{r7}
 554              	.LCFI36:
 555              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 41


 556              		.cfi_offset 7, -4
 557 0002 00AF     		add	r7, sp, #0
 558              	.LCFI37:
 559              		.cfi_def_cfa_register 7
  92:Core/Inc/myLib.h ****     TIM2->CCR2 = 3000 * PASO;
 560              		.loc 2 92 9
 561 0004 4FF08043 		mov	r3, #1073741824
 562              		.loc 2 92 16
 563 0008 41F27072 		movw	r2, #6000
 564 000c 9A63     		str	r2, [r3, #56]
  93:Core/Inc/myLib.h ****     TIM3->CCR2 = 2100 * PASO;
 565              		.loc 2 93 9
 566 000e 054B     		ldr	r3, .L34
 567              		.loc 2 93 16
 568 0010 41F26802 		movw	r2, #4200
 569 0014 9A63     		str	r2, [r3, #56]
  94:Core/Inc/myLib.h ****     TIM4->CCR2 = 0;
 570              		.loc 2 94 9
 571 0016 044B     		ldr	r3, .L34+4
 572              		.loc 2 94 16
 573 0018 0022     		movs	r2, #0
 574 001a 9A63     		str	r2, [r3, #56]
  95:Core/Inc/myLib.h **** }
 575              		.loc 2 95 1
 576 001c 00BF     		nop
 577 001e BD46     		mov	sp, r7
 578              	.LCFI38:
 579              		.cfi_def_cfa_register 13
 580              		@ sp needed
 581 0020 80BC     		pop	{r7}
 582              	.LCFI39:
 583              		.cfi_restore 7
 584              		.cfi_def_cfa_offset 0
 585 0022 7047     		bx	lr
 586              	.L35:
 587              		.align	2
 588              	.L34:
 589 0024 00040040 		.word	1073742848
 590 0028 00080040 		.word	1073743872
 591              		.cfi_endproc
 592              	.LFE71:
 594              		.section	.text.encenderFluor,"ax",%progbits
 595              		.align	1
 596              		.global	encenderFluor
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu softvfp
 602              	encenderFluor:
 603              	.LFB72:
  96:Core/Inc/myLib.h **** 
  97:Core/Inc/myLib.h **** void encenderFluor()
  98:Core/Inc/myLib.h **** {
 604              		.loc 2 98 1
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 42


 608              		@ link register save eliminated.
 609 0000 80B4     		push	{r7}
 610              	.LCFI40:
 611              		.cfi_def_cfa_offset 4
 612              		.cfi_offset 7, -4
 613 0002 00AF     		add	r7, sp, #0
 614              	.LCFI41:
 615              		.cfi_def_cfa_register 7
  99:Core/Inc/myLib.h ****     TIM2->CCR2 = 3000 * PASO;
 616              		.loc 2 99 9
 617 0004 4FF08043 		mov	r3, #1073741824
 618              		.loc 2 99 16
 619 0008 41F27072 		movw	r2, #6000
 620 000c 9A63     		str	r2, [r3, #56]
 100:Core/Inc/myLib.h ****     TIM3->CCR2 = 3000 * PASO;
 621              		.loc 2 100 9
 622 000e 054B     		ldr	r3, .L37
 623              		.loc 2 100 16
 624 0010 41F27072 		movw	r2, #6000
 625 0014 9A63     		str	r2, [r3, #56]
 101:Core/Inc/myLib.h ****     TIM4->CCR2 = 0;
 626              		.loc 2 101 9
 627 0016 044B     		ldr	r3, .L37+4
 628              		.loc 2 101 16
 629 0018 0022     		movs	r2, #0
 630 001a 9A63     		str	r2, [r3, #56]
 102:Core/Inc/myLib.h **** }
 631              		.loc 2 102 1
 632 001c 00BF     		nop
 633 001e BD46     		mov	sp, r7
 634              	.LCFI42:
 635              		.cfi_def_cfa_register 13
 636              		@ sp needed
 637 0020 80BC     		pop	{r7}
 638              	.LCFI43:
 639              		.cfi_restore 7
 640              		.cfi_def_cfa_offset 0
 641 0022 7047     		bx	lr
 642              	.L38:
 643              		.align	2
 644              	.L37:
 645 0024 00040040 		.word	1073742848
 646 0028 00080040 		.word	1073743872
 647              		.cfi_endproc
 648              	.LFE72:
 650              		.section	.text.encenderRosa,"ax",%progbits
 651              		.align	1
 652              		.global	encenderRosa
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu softvfp
 658              	encenderRosa:
 659              	.LFB73:
 103:Core/Inc/myLib.h **** 
 104:Core/Inc/myLib.h **** void encenderRosa()
 105:Core/Inc/myLib.h **** {
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 43


 660              		.loc 2 105 1
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0000 80B4     		push	{r7}
 666              	.LCFI44:
 667              		.cfi_def_cfa_offset 4
 668              		.cfi_offset 7, -4
 669 0002 00AF     		add	r7, sp, #0
 670              	.LCFI45:
 671              		.cfi_def_cfa_register 7
 106:Core/Inc/myLib.h ****     TIM2->CCR2 = 2500 * PASO;
 672              		.loc 2 106 9
 673 0004 4FF08043 		mov	r3, #1073741824
 674              		.loc 2 106 16
 675 0008 41F28832 		movw	r2, #5000
 676 000c 9A63     		str	r2, [r3, #56]
 107:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 677              		.loc 2 107 9
 678 000e 054B     		ldr	r3, .L40
 679              		.loc 2 107 16
 680 0010 0022     		movs	r2, #0
 681 0012 9A63     		str	r2, [r3, #56]
 108:Core/Inc/myLib.h ****     TIM4->CCR2 = 3000 * PASO;
 682              		.loc 2 108 9
 683 0014 044B     		ldr	r3, .L40+4
 684              		.loc 2 108 16
 685 0016 41F27072 		movw	r2, #6000
 686 001a 9A63     		str	r2, [r3, #56]
 109:Core/Inc/myLib.h **** }
 687              		.loc 2 109 1
 688 001c 00BF     		nop
 689 001e BD46     		mov	sp, r7
 690              	.LCFI46:
 691              		.cfi_def_cfa_register 13
 692              		@ sp needed
 693 0020 80BC     		pop	{r7}
 694              	.LCFI47:
 695              		.cfi_restore 7
 696              		.cfi_def_cfa_offset 0
 697 0022 7047     		bx	lr
 698              	.L41:
 699              		.align	2
 700              	.L40:
 701 0024 00040040 		.word	1073742848
 702 0028 00080040 		.word	1073743872
 703              		.cfi_endproc
 704              	.LFE73:
 706              		.section	.text.encenderRojo,"ax",%progbits
 707              		.align	1
 708              		.global	encenderRojo
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu softvfp
 714              	encenderRojo:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 44


 715              	.LFB74:
 110:Core/Inc/myLib.h **** 
 111:Core/Inc/myLib.h **** void encenderRojo()
 112:Core/Inc/myLib.h **** {
 716              		.loc 2 112 1
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              	.LCFI48:
 723              		.cfi_def_cfa_offset 4
 724              		.cfi_offset 7, -4
 725 0002 00AF     		add	r7, sp, #0
 726              	.LCFI49:
 727              		.cfi_def_cfa_register 7
 113:Core/Inc/myLib.h ****     TIM2->CCR2 = 3000 * PASO;
 728              		.loc 2 113 9
 729 0004 4FF08043 		mov	r3, #1073741824
 730              		.loc 2 113 16
 731 0008 41F27072 		movw	r2, #6000
 732 000c 9A63     		str	r2, [r3, #56]
 114:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 733              		.loc 2 114 9
 734 000e 054B     		ldr	r3, .L43
 735              		.loc 2 114 16
 736 0010 0022     		movs	r2, #0
 737 0012 9A63     		str	r2, [r3, #56]
 115:Core/Inc/myLib.h ****     TIM4->CCR2 = 0;
 738              		.loc 2 115 9
 739 0014 044B     		ldr	r3, .L43+4
 740              		.loc 2 115 16
 741 0016 0022     		movs	r2, #0
 742 0018 9A63     		str	r2, [r3, #56]
 116:Core/Inc/myLib.h **** }
 743              		.loc 2 116 1
 744 001a 00BF     		nop
 745 001c BD46     		mov	sp, r7
 746              	.LCFI50:
 747              		.cfi_def_cfa_register 13
 748              		@ sp needed
 749 001e 80BC     		pop	{r7}
 750              	.LCFI51:
 751              		.cfi_restore 7
 752              		.cfi_def_cfa_offset 0
 753 0020 7047     		bx	lr
 754              	.L44:
 755 0022 00BF     		.align	2
 756              	.L43:
 757 0024 00040040 		.word	1073742848
 758 0028 00080040 		.word	1073743872
 759              		.cfi_endproc
 760              	.LFE74:
 762              		.section	.text.encenderVioleta,"ax",%progbits
 763              		.align	1
 764              		.global	encenderVioleta
 765              		.syntax unified
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 45


 766              		.thumb
 767              		.thumb_func
 768              		.fpu softvfp
 770              	encenderVioleta:
 771              	.LFB75:
 117:Core/Inc/myLib.h **** 
 118:Core/Inc/myLib.h **** void encenderVioleta()
 119:Core/Inc/myLib.h **** {
 772              		.loc 2 119 1
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777 0000 80B4     		push	{r7}
 778              	.LCFI52:
 779              		.cfi_def_cfa_offset 4
 780              		.cfi_offset 7, -4
 781 0002 00AF     		add	r7, sp, #0
 782              	.LCFI53:
 783              		.cfi_def_cfa_register 7
 120:Core/Inc/myLib.h ****     TIM2->CCR2 = 800 * PASO;
 784              		.loc 2 120 9
 785 0004 4FF08043 		mov	r3, #1073741824
 786              		.loc 2 120 16
 787 0008 4FF4C862 		mov	r2, #1600
 788 000c 9A63     		str	r2, [r3, #56]
 121:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 789              		.loc 2 121 9
 790 000e 054B     		ldr	r3, .L46
 791              		.loc 2 121 16
 792 0010 0022     		movs	r2, #0
 793 0012 9A63     		str	r2, [r3, #56]
 122:Core/Inc/myLib.h ****     TIM4->CCR2 = 3000 * PASO;
 794              		.loc 2 122 9
 795 0014 044B     		ldr	r3, .L46+4
 796              		.loc 2 122 16
 797 0016 41F27072 		movw	r2, #6000
 798 001a 9A63     		str	r2, [r3, #56]
 123:Core/Inc/myLib.h **** }
 799              		.loc 2 123 1
 800 001c 00BF     		nop
 801 001e BD46     		mov	sp, r7
 802              	.LCFI54:
 803              		.cfi_def_cfa_register 13
 804              		@ sp needed
 805 0020 80BC     		pop	{r7}
 806              	.LCFI55:
 807              		.cfi_restore 7
 808              		.cfi_def_cfa_offset 0
 809 0022 7047     		bx	lr
 810              	.L47:
 811              		.align	2
 812              	.L46:
 813 0024 00040040 		.word	1073742848
 814 0028 00080040 		.word	1073743872
 815              		.cfi_endproc
 816              	.LFE75:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 46


 818              		.section	.text.encenderVerde,"ax",%progbits
 819              		.align	1
 820              		.global	encenderVerde
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu softvfp
 826              	encenderVerde:
 827              	.LFB76:
 124:Core/Inc/myLib.h **** 
 125:Core/Inc/myLib.h **** void encenderVerde()
 126:Core/Inc/myLib.h **** {
 828              		.loc 2 126 1
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833 0000 80B4     		push	{r7}
 834              	.LCFI56:
 835              		.cfi_def_cfa_offset 4
 836              		.cfi_offset 7, -4
 837 0002 00AF     		add	r7, sp, #0
 838              	.LCFI57:
 839              		.cfi_def_cfa_register 7
 127:Core/Inc/myLib.h ****     TIM2->CCR2 = 0;
 840              		.loc 2 127 9
 841 0004 4FF08043 		mov	r3, #1073741824
 842              		.loc 2 127 16
 843 0008 0022     		movs	r2, #0
 844 000a 9A63     		str	r2, [r3, #56]
 128:Core/Inc/myLib.h ****     TIM3->CCR2 = 3000 * PASO;
 845              		.loc 2 128 9
 846 000c 054B     		ldr	r3, .L49
 847              		.loc 2 128 16
 848 000e 41F27072 		movw	r2, #6000
 849 0012 9A63     		str	r2, [r3, #56]
 129:Core/Inc/myLib.h ****     TIM4->CCR2 = 0;
 850              		.loc 2 129 9
 851 0014 044B     		ldr	r3, .L49+4
 852              		.loc 2 129 16
 853 0016 0022     		movs	r2, #0
 854 0018 9A63     		str	r2, [r3, #56]
 130:Core/Inc/myLib.h **** }
 855              		.loc 2 130 1
 856 001a 00BF     		nop
 857 001c BD46     		mov	sp, r7
 858              	.LCFI58:
 859              		.cfi_def_cfa_register 13
 860              		@ sp needed
 861 001e 80BC     		pop	{r7}
 862              	.LCFI59:
 863              		.cfi_restore 7
 864              		.cfi_def_cfa_offset 0
 865 0020 7047     		bx	lr
 866              	.L50:
 867 0022 00BF     		.align	2
 868              	.L49:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 47


 869 0024 00040040 		.word	1073742848
 870 0028 00080040 		.word	1073743872
 871              		.cfi_endproc
 872              	.LFE76:
 874              		.section	.text.encenderCeleste,"ax",%progbits
 875              		.align	1
 876              		.global	encenderCeleste
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 880              		.fpu softvfp
 882              	encenderCeleste:
 883              	.LFB77:
 131:Core/Inc/myLib.h **** 
 132:Core/Inc/myLib.h **** void encenderCeleste()
 133:Core/Inc/myLib.h **** {
 884              		.loc 2 133 1
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 1, uses_anonymous_args = 0
 888              		@ link register save eliminated.
 889 0000 80B4     		push	{r7}
 890              	.LCFI60:
 891              		.cfi_def_cfa_offset 4
 892              		.cfi_offset 7, -4
 893 0002 00AF     		add	r7, sp, #0
 894              	.LCFI61:
 895              		.cfi_def_cfa_register 7
 134:Core/Inc/myLib.h ****     TIM2->CCR2 = 0;
 896              		.loc 2 134 9
 897 0004 4FF08043 		mov	r3, #1073741824
 898              		.loc 2 134 16
 899 0008 0022     		movs	r2, #0
 900 000a 9A63     		str	r2, [r3, #56]
 135:Core/Inc/myLib.h ****     TIM3->CCR2 = 1000 * PASO;
 901              		.loc 2 135 9
 902 000c 054B     		ldr	r3, .L52
 903              		.loc 2 135 16
 904 000e 4FF4FA62 		mov	r2, #2000
 905 0012 9A63     		str	r2, [r3, #56]
 136:Core/Inc/myLib.h ****     TIM4->CCR2 = 3000 * PASO;
 906              		.loc 2 136 9
 907 0014 044B     		ldr	r3, .L52+4
 908              		.loc 2 136 16
 909 0016 41F27072 		movw	r2, #6000
 910 001a 9A63     		str	r2, [r3, #56]
 137:Core/Inc/myLib.h **** }
 911              		.loc 2 137 1
 912 001c 00BF     		nop
 913 001e BD46     		mov	sp, r7
 914              	.LCFI62:
 915              		.cfi_def_cfa_register 13
 916              		@ sp needed
 917 0020 80BC     		pop	{r7}
 918              	.LCFI63:
 919              		.cfi_restore 7
 920              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 48


 921 0022 7047     		bx	lr
 922              	.L53:
 923              		.align	2
 924              	.L52:
 925 0024 00040040 		.word	1073742848
 926 0028 00080040 		.word	1073743872
 927              		.cfi_endproc
 928              	.LFE77:
 930              		.section	.text.encenderAzul,"ax",%progbits
 931              		.align	1
 932              		.global	encenderAzul
 933              		.syntax unified
 934              		.thumb
 935              		.thumb_func
 936              		.fpu softvfp
 938              	encenderAzul:
 939              	.LFB78:
 138:Core/Inc/myLib.h **** 
 139:Core/Inc/myLib.h **** void encenderAzul()
 140:Core/Inc/myLib.h **** {
 940              		.loc 2 140 1
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 1, uses_anonymous_args = 0
 944              		@ link register save eliminated.
 945 0000 80B4     		push	{r7}
 946              	.LCFI64:
 947              		.cfi_def_cfa_offset 4
 948              		.cfi_offset 7, -4
 949 0002 00AF     		add	r7, sp, #0
 950              	.LCFI65:
 951              		.cfi_def_cfa_register 7
 141:Core/Inc/myLib.h ****     TIM2->CCR2 = 0;
 952              		.loc 2 141 9
 953 0004 4FF08043 		mov	r3, #1073741824
 954              		.loc 2 141 16
 955 0008 0022     		movs	r2, #0
 956 000a 9A63     		str	r2, [r3, #56]
 142:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 957              		.loc 2 142 9
 958 000c 054B     		ldr	r3, .L55
 959              		.loc 2 142 16
 960 000e 0022     		movs	r2, #0
 961 0010 9A63     		str	r2, [r3, #56]
 143:Core/Inc/myLib.h ****     TIM4->CCR2 = 3000 * PASO;
 962              		.loc 2 143 9
 963 0012 054B     		ldr	r3, .L55+4
 964              		.loc 2 143 16
 965 0014 41F27072 		movw	r2, #6000
 966 0018 9A63     		str	r2, [r3, #56]
 144:Core/Inc/myLib.h **** }
 967              		.loc 2 144 1
 968 001a 00BF     		nop
 969 001c BD46     		mov	sp, r7
 970              	.LCFI66:
 971              		.cfi_def_cfa_register 13
 972              		@ sp needed
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 49


 973 001e 80BC     		pop	{r7}
 974              	.LCFI67:
 975              		.cfi_restore 7
 976              		.cfi_def_cfa_offset 0
 977 0020 7047     		bx	lr
 978              	.L56:
 979 0022 00BF     		.align	2
 980              	.L55:
 981 0024 00040040 		.word	1073742848
 982 0028 00080040 		.word	1073743872
 983              		.cfi_endproc
 984              	.LFE78:
 986              		.section	.text.encenderBlanco,"ax",%progbits
 987              		.align	1
 988              		.global	encenderBlanco
 989              		.syntax unified
 990              		.thumb
 991              		.thumb_func
 992              		.fpu softvfp
 994              	encenderBlanco:
 995              	.LFB79:
 145:Core/Inc/myLib.h **** 
 146:Core/Inc/myLib.h **** void encenderBlanco()
 147:Core/Inc/myLib.h **** {
 996              		.loc 2 147 1
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 1, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
 1001 0000 80B4     		push	{r7}
 1002              	.LCFI68:
 1003              		.cfi_def_cfa_offset 4
 1004              		.cfi_offset 7, -4
 1005 0002 00AF     		add	r7, sp, #0
 1006              	.LCFI69:
 1007              		.cfi_def_cfa_register 7
 148:Core/Inc/myLib.h ****     TIM2->CCR2 = 5000 * PASO;
 1008              		.loc 2 148 9
 1009 0004 4FF08043 		mov	r3, #1073741824
 1010              		.loc 2 148 16
 1011 0008 42F21072 		movw	r2, #10000
 1012 000c 9A63     		str	r2, [r3, #56]
 149:Core/Inc/myLib.h ****     TIM3->CCR2 = 5000 * PASO;
 1013              		.loc 2 149 9
 1014 000e 064B     		ldr	r3, .L58
 1015              		.loc 2 149 16
 1016 0010 42F21072 		movw	r2, #10000
 1017 0014 9A63     		str	r2, [r3, #56]
 150:Core/Inc/myLib.h ****     TIM4->CCR2 = 5000 * PASO;
 1018              		.loc 2 150 9
 1019 0016 054B     		ldr	r3, .L58+4
 1020              		.loc 2 150 16
 1021 0018 42F21072 		movw	r2, #10000
 1022 001c 9A63     		str	r2, [r3, #56]
 151:Core/Inc/myLib.h **** }
 1023              		.loc 2 151 1
 1024 001e 00BF     		nop
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 50


 1025 0020 BD46     		mov	sp, r7
 1026              	.LCFI70:
 1027              		.cfi_def_cfa_register 13
 1028              		@ sp needed
 1029 0022 80BC     		pop	{r7}
 1030              	.LCFI71:
 1031              		.cfi_restore 7
 1032              		.cfi_def_cfa_offset 0
 1033 0024 7047     		bx	lr
 1034              	.L59:
 1035 0026 00BF     		.align	2
 1036              	.L58:
 1037 0028 00040040 		.word	1073742848
 1038 002c 00080040 		.word	1073743872
 1039              		.cfi_endproc
 1040              	.LFE79:
 1042              		.section	.text.encenderCelesteMar,"ax",%progbits
 1043              		.align	1
 1044              		.global	encenderCelesteMar
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1048              		.fpu softvfp
 1050              	encenderCelesteMar:
 1051              	.LFB80:
 152:Core/Inc/myLib.h **** 
 153:Core/Inc/myLib.h **** void encenderCelesteMar()
 154:Core/Inc/myLib.h **** {
 1052              		.loc 2 154 1
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 0
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056              		@ link register save eliminated.
 1057 0000 80B4     		push	{r7}
 1058              	.LCFI72:
 1059              		.cfi_def_cfa_offset 4
 1060              		.cfi_offset 7, -4
 1061 0002 00AF     		add	r7, sp, #0
 1062              	.LCFI73:
 1063              		.cfi_def_cfa_register 7
 155:Core/Inc/myLib.h ****     TIM2->CCR2 = 0;
 1064              		.loc 2 155 9
 1065 0004 4FF08043 		mov	r3, #1073741824
 1066              		.loc 2 155 16
 1067 0008 0022     		movs	r2, #0
 1068 000a 9A63     		str	r2, [r3, #56]
 156:Core/Inc/myLib.h ****     TIM3->CCR2 = 2000 * PASO;
 1069              		.loc 2 156 9
 1070 000c 054B     		ldr	r3, .L61
 1071              		.loc 2 156 16
 1072 000e 4FF47A62 		mov	r2, #4000
 1073 0012 9A63     		str	r2, [r3, #56]
 157:Core/Inc/myLib.h ****     TIM4->CCR2 = 3000 * PASO;
 1074              		.loc 2 157 9
 1075 0014 044B     		ldr	r3, .L61+4
 1076              		.loc 2 157 16
 1077 0016 41F27072 		movw	r2, #6000
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 51


 1078 001a 9A63     		str	r2, [r3, #56]
 158:Core/Inc/myLib.h **** }
 1079              		.loc 2 158 1
 1080 001c 00BF     		nop
 1081 001e BD46     		mov	sp, r7
 1082              	.LCFI74:
 1083              		.cfi_def_cfa_register 13
 1084              		@ sp needed
 1085 0020 80BC     		pop	{r7}
 1086              	.LCFI75:
 1087              		.cfi_restore 7
 1088              		.cfi_def_cfa_offset 0
 1089 0022 7047     		bx	lr
 1090              	.L62:
 1091              		.align	2
 1092              	.L61:
 1093 0024 00040040 		.word	1073742848
 1094 0028 00080040 		.word	1073743872
 1095              		.cfi_endproc
 1096              	.LFE80:
 1098              		.section	.text.encenderVioletaOscuro,"ax",%progbits
 1099              		.align	1
 1100              		.global	encenderVioletaOscuro
 1101              		.syntax unified
 1102              		.thumb
 1103              		.thumb_func
 1104              		.fpu softvfp
 1106              	encenderVioletaOscuro:
 1107              	.LFB81:
 159:Core/Inc/myLib.h **** 
 160:Core/Inc/myLib.h **** void encenderVioletaOscuro()
 161:Core/Inc/myLib.h **** {
 1108              		.loc 2 161 1
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 1, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 1113 0000 80B4     		push	{r7}
 1114              	.LCFI76:
 1115              		.cfi_def_cfa_offset 4
 1116              		.cfi_offset 7, -4
 1117 0002 00AF     		add	r7, sp, #0
 1118              	.LCFI77:
 1119              		.cfi_def_cfa_register 7
 162:Core/Inc/myLib.h ****     TIM2->CCR2 = 500 * PASO;
 1120              		.loc 2 162 9
 1121 0004 4FF08043 		mov	r3, #1073741824
 1122              		.loc 2 162 16
 1123 0008 4FF47A72 		mov	r2, #1000
 1124 000c 9A63     		str	r2, [r3, #56]
 163:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 1125              		.loc 2 163 9
 1126 000e 054B     		ldr	r3, .L64
 1127              		.loc 2 163 16
 1128 0010 0022     		movs	r2, #0
 1129 0012 9A63     		str	r2, [r3, #56]
 164:Core/Inc/myLib.h ****     TIM4->CCR2 = 3000 * PASO;
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 52


 1130              		.loc 2 164 9
 1131 0014 044B     		ldr	r3, .L64+4
 1132              		.loc 2 164 16
 1133 0016 41F27072 		movw	r2, #6000
 1134 001a 9A63     		str	r2, [r3, #56]
 165:Core/Inc/myLib.h **** }
 1135              		.loc 2 165 1
 1136 001c 00BF     		nop
 1137 001e BD46     		mov	sp, r7
 1138              	.LCFI78:
 1139              		.cfi_def_cfa_register 13
 1140              		@ sp needed
 1141 0020 80BC     		pop	{r7}
 1142              	.LCFI79:
 1143              		.cfi_restore 7
 1144              		.cfi_def_cfa_offset 0
 1145 0022 7047     		bx	lr
 1146              	.L65:
 1147              		.align	2
 1148              	.L64:
 1149 0024 00040040 		.word	1073742848
 1150 0028 00080040 		.word	1073743872
 1151              		.cfi_endproc
 1152              	.LFE81:
 1154              		.section	.text.encenderFucsia,"ax",%progbits
 1155              		.align	1
 1156              		.global	encenderFucsia
 1157              		.syntax unified
 1158              		.thumb
 1159              		.thumb_func
 1160              		.fpu softvfp
 1162              	encenderFucsia:
 1163              	.LFB82:
 166:Core/Inc/myLib.h **** 
 167:Core/Inc/myLib.h **** void encenderFucsia()
 168:Core/Inc/myLib.h **** {
 1164              		.loc 2 168 1
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 1, uses_anonymous_args = 0
 1168              		@ link register save eliminated.
 1169 0000 80B4     		push	{r7}
 1170              	.LCFI80:
 1171              		.cfi_def_cfa_offset 4
 1172              		.cfi_offset 7, -4
 1173 0002 00AF     		add	r7, sp, #0
 1174              	.LCFI81:
 1175              		.cfi_def_cfa_register 7
 169:Core/Inc/myLib.h ****     TIM2->CCR2 = 3000 * PASO;
 1176              		.loc 2 169 9
 1177 0004 4FF08043 		mov	r3, #1073741824
 1178              		.loc 2 169 16
 1179 0008 41F27072 		movw	r2, #6000
 1180 000c 9A63     		str	r2, [r3, #56]
 170:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 1181              		.loc 2 170 9
 1182 000e 054B     		ldr	r3, .L67
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 53


 1183              		.loc 2 170 16
 1184 0010 0022     		movs	r2, #0
 1185 0012 9A63     		str	r2, [r3, #56]
 171:Core/Inc/myLib.h ****     TIM4->CCR2 = 1500 * PASO;
 1186              		.loc 2 171 9
 1187 0014 044B     		ldr	r3, .L67+4
 1188              		.loc 2 171 16
 1189 0016 40F6B832 		movw	r2, #3000
 1190 001a 9A63     		str	r2, [r3, #56]
 172:Core/Inc/myLib.h **** }
 1191              		.loc 2 172 1
 1192 001c 00BF     		nop
 1193 001e BD46     		mov	sp, r7
 1194              	.LCFI82:
 1195              		.cfi_def_cfa_register 13
 1196              		@ sp needed
 1197 0020 80BC     		pop	{r7}
 1198              	.LCFI83:
 1199              		.cfi_restore 7
 1200              		.cfi_def_cfa_offset 0
 1201 0022 7047     		bx	lr
 1202              	.L68:
 1203              		.align	2
 1204              	.L67:
 1205 0024 00040040 		.word	1073742848
 1206 0028 00080040 		.word	1073743872
 1207              		.cfi_endproc
 1208              	.LFE82:
 1210              		.section	.text.apagarLed,"ax",%progbits
 1211              		.align	1
 1212              		.global	apagarLed
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1216              		.fpu softvfp
 1218              	apagarLed:
 1219              	.LFB83:
 173:Core/Inc/myLib.h **** 
 174:Core/Inc/myLib.h **** void apagarLed()
 175:Core/Inc/myLib.h **** {
 1220              		.loc 2 175 1
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 1, uses_anonymous_args = 0
 1224              		@ link register save eliminated.
 1225 0000 80B4     		push	{r7}
 1226              	.LCFI84:
 1227              		.cfi_def_cfa_offset 4
 1228              		.cfi_offset 7, -4
 1229 0002 00AF     		add	r7, sp, #0
 1230              	.LCFI85:
 1231              		.cfi_def_cfa_register 7
 176:Core/Inc/myLib.h ****     TIM2->CCR2 = 0;
 1232              		.loc 2 176 9
 1233 0004 4FF08043 		mov	r3, #1073741824
 1234              		.loc 2 176 16
 1235 0008 0022     		movs	r2, #0
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 54


 1236 000a 9A63     		str	r2, [r3, #56]
 177:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 1237              		.loc 2 177 9
 1238 000c 044B     		ldr	r3, .L70
 1239              		.loc 2 177 16
 1240 000e 0022     		movs	r2, #0
 1241 0010 9A63     		str	r2, [r3, #56]
 178:Core/Inc/myLib.h ****     TIM4->CCR2 = 0;
 1242              		.loc 2 178 9
 1243 0012 044B     		ldr	r3, .L70+4
 1244              		.loc 2 178 16
 1245 0014 0022     		movs	r2, #0
 1246 0016 9A63     		str	r2, [r3, #56]
 179:Core/Inc/myLib.h **** }
 1247              		.loc 2 179 1
 1248 0018 00BF     		nop
 1249 001a BD46     		mov	sp, r7
 1250              	.LCFI86:
 1251              		.cfi_def_cfa_register 13
 1252              		@ sp needed
 1253 001c 80BC     		pop	{r7}
 1254              	.LCFI87:
 1255              		.cfi_restore 7
 1256              		.cfi_def_cfa_offset 0
 1257 001e 7047     		bx	lr
 1258              	.L71:
 1259              		.align	2
 1260              	.L70:
 1261 0020 00040040 		.word	1073742848
 1262 0024 00080040 		.word	1073743872
 1263              		.cfi_endproc
 1264              	.LFE83:
 1266              		.section	.text.setTo28MHzFromHSE,"ax",%progbits
 1267              		.align	1
 1268              		.global	setTo28MHzFromHSE
 1269              		.syntax unified
 1270              		.thumb
 1271              		.thumb_func
 1272              		.fpu softvfp
 1274              	setTo28MHzFromHSE:
 1275              	.LFB84:
 1276              		.file 3 "Core/Inc/configuraciones.h"
   1:Core/Inc/configuraciones.h **** #ifndef __CONFIGURACIONES
   2:Core/Inc/configuraciones.h **** #define __CONFIGURACIONES
   3:Core/Inc/configuraciones.h **** #include "stm32f1xx.h"
   4:Core/Inc/configuraciones.h **** #include "stm32f103xb.h"
   5:Core/Inc/configuraciones.h **** #include "myLib.h"
   6:Core/Inc/configuraciones.h **** 
   7:Core/Inc/configuraciones.h **** // Configuro la frecuencia del sistema a 28 MHz
   8:Core/Inc/configuraciones.h **** void setTo28MHzFromHSE(void)
   9:Core/Inc/configuraciones.h **** {
 1277              		.loc 3 9 1
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 1, uses_anonymous_args = 0
 1281 0000 80B5     		push	{r7, lr}
 1282              	.LCFI88:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 55


 1283              		.cfi_def_cfa_offset 8
 1284              		.cfi_offset 7, -8
 1285              		.cfi_offset 14, -4
 1286 0002 00AF     		add	r7, sp, #0
 1287              	.LCFI89:
 1288              		.cfi_def_cfa_register 7
  10:Core/Inc/configuraciones.h ****   // Para seleccionar, como frecuencia externa de entrada al micro la del cristal de 8 MHz, llamada
  11:Core/Inc/configuraciones.h ****   RCC->CR |= RCC_CR_HSEON;
 1289              		.loc 3 11 11
 1290 0004 364B     		ldr	r3, .L76
 1291 0006 1B68     		ldr	r3, [r3]
 1292 0008 354A     		ldr	r2, .L76
 1293 000a 43F48033 		orr	r3, r3, #65536
 1294 000e 1360     		str	r3, [r2]
  12:Core/Inc/configuraciones.h **** 
  13:Core/Inc/configuraciones.h ****   // Hay que esperar a que se estabilice la señal seleccionada
  14:Core/Inc/configuraciones.h ****   while(!(RCC->CR & RCC_CR_HSERDY));
 1295              		.loc 3 14 8
 1296 0010 00BF     		nop
 1297              	.L73:
 1298              		.loc 3 14 14 discriminator 1
 1299 0012 334B     		ldr	r3, .L76
 1300 0014 1B68     		ldr	r3, [r3]
 1301              		.loc 3 14 19 discriminator 1
 1302 0016 03F40033 		and	r3, r3, #131072
 1303              		.loc 3 14 8 discriminator 1
 1304 001a 002B     		cmp	r3, #0
 1305 001c F9D0     		beq	.L73
  15:Core/Inc/configuraciones.h **** 
  16:Core/Inc/configuraciones.h ****   // Activa un pre-buffer para la próxima instrucción, así se hace más rápida la ejecución
  17:Core/Inc/configuraciones.h ****   FLASH->ACR |= FLASH_ACR_PRFTBE;
 1306              		.loc 3 17 14
 1307 001e 314B     		ldr	r3, .L76+4
 1308 0020 1B68     		ldr	r3, [r3]
 1309 0022 304A     		ldr	r2, .L76+4
 1310 0024 43F01003 		orr	r3, r3, #16
 1311 0028 1360     		str	r3, [r2]
  18:Core/Inc/configuraciones.h ****   
  19:Core/Inc/configuraciones.h ****   // Esta latencia hay que especificarla para que no haya diferencias entre la
  20:Core/Inc/configuraciones.h ****   // velocidad que espera el micro para ejecutar cada instrucción y la que es realmente.
  21:Core/Inc/configuraciones.h ****   // Aquí se especifica particularmente la velocidad que esperamos configurar del SYSCLK.
  22:Core/Inc/configuraciones.h ****   // 0:      0 < SYSCLK < 24 MHz
  23:Core/Inc/configuraciones.h ****   // 1: 24 MHz < SYSCLK < 48 MHz
  24:Core/Inc/configuraciones.h ****   // 2: 48 MHz < SYSCLK <= 72 MHz
  25:Core/Inc/configuraciones.h ****   FLASH->ACR |= FLASH_ACR_LATENCY_1;
 1312              		.loc 3 25 14
 1313 002a 2E4B     		ldr	r3, .L76+4
 1314 002c 1B68     		ldr	r3, [r3]
 1315 002e 2D4A     		ldr	r2, .L76+4
 1316 0030 43F00203 		orr	r3, r3, #2
 1317 0034 1360     		str	r3, [r2]
  26:Core/Inc/configuraciones.h ****   // ¿Por qué? Porque esperamos configurar una frecuencia de 28 MHz para el SYSCLK
  27:Core/Inc/configuraciones.h **** 
  28:Core/Inc/configuraciones.h ****   // Con esto selecciono si la frecuencia HSE será dividida entre 2 o no.
  29:Core/Inc/configuraciones.h ****   // Aquí particularmente decido que se dividirá. Por lo que se tornará en 4 MHz.
  30:Core/Inc/configuraciones.h ****   // Esta frecuencia de salida se llama PREDIV1
  31:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_PLLXTPRE;
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 56


 1318              		.loc 3 31 13
 1319 0036 2A4B     		ldr	r3, .L76
 1320 0038 5B68     		ldr	r3, [r3, #4]
 1321 003a 294A     		ldr	r2, .L76
 1322 003c 43F40033 		orr	r3, r3, #131072
 1323 0040 5360     		str	r3, [r2, #4]
  32:Core/Inc/configuraciones.h **** 
  33:Core/Inc/configuraciones.h ****   // Con este bit selecciono si la frecuencia de salida PLLCLK será HSI o HSE.
  34:Core/Inc/configuraciones.h ****   // Como venimos configurando el HSE, elegimos esa, que en el multiplexor sería un 1.
  35:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_PLLSRC;
 1324              		.loc 3 35 13
 1325 0042 274B     		ldr	r3, .L76
 1326 0044 5B68     		ldr	r3, [r3, #4]
 1327 0046 264A     		ldr	r2, .L76
 1328 0048 43F48033 		orr	r3, r3, #65536
 1329 004c 5360     		str	r3, [r2, #4]
  36:Core/Inc/configuraciones.h **** 
  37:Core/Inc/configuraciones.h ****   // Aquí multiplico el reloj seleccionado por 7 así la señal termina siendo de 28 MHz
  38:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_PLLMULL7;
 1330              		.loc 3 38 13
 1331 004e 244B     		ldr	r3, .L76
 1332 0050 5B68     		ldr	r3, [r3, #4]
 1333 0052 234A     		ldr	r2, .L76
 1334 0054 43F4A013 		orr	r3, r3, #1310720
 1335 0058 5360     		str	r3, [r2, #4]
  39:Core/Inc/configuraciones.h **** 
  40:Core/Inc/configuraciones.h ****   // Con esto dejo que la señal AHB que sale a los periféricos siga siendo de 28 MHz
  41:Core/Inc/configuraciones.h ****   RCC->CFGR &= ~RCC_CFGR_HPRE;
 1336              		.loc 3 41 13
 1337 005a 214B     		ldr	r3, .L76
 1338 005c 5B68     		ldr	r3, [r3, #4]
 1339 005e 204A     		ldr	r2, .L76
 1340 0060 23F0F003 		bic	r3, r3, #240
 1341 0064 5360     		str	r3, [r2, #4]
  42:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 1342              		.loc 3 42 13
 1343 0066 1E4B     		ldr	r3, .L76
 1344 0068 1D4A     		ldr	r2, .L76
 1345 006a 5B68     		ldr	r3, [r3, #4]
 1346 006c 5360     		str	r3, [r2, #4]
  43:Core/Inc/configuraciones.h **** 
  44:Core/Inc/configuraciones.h ****   // Con esto hago que la señal APB1 sea de 28 MHz
  45:Core/Inc/configuraciones.h ****   RCC->CFGR &= ~RCC_CFGR_PPRE1;
 1347              		.loc 3 45 13
 1348 006e 1C4B     		ldr	r3, .L76
 1349 0070 5B68     		ldr	r3, [r3, #4]
 1350 0072 1B4A     		ldr	r2, .L76
 1351 0074 23F4E063 		bic	r3, r3, #1792
 1352 0078 5360     		str	r3, [r2, #4]
  46:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_PPRE1_DIV1;
 1353              		.loc 3 46 13
 1354 007a 194B     		ldr	r3, .L76
 1355 007c 184A     		ldr	r2, .L76
 1356 007e 5B68     		ldr	r3, [r3, #4]
 1357 0080 5360     		str	r3, [r2, #4]
  47:Core/Inc/configuraciones.h **** 
  48:Core/Inc/configuraciones.h ****   // Con esto hago que la señal APB2 sea de 28 MHz
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 57


  49:Core/Inc/configuraciones.h ****   RCC->CFGR &= ~RCC_CFGR_PPRE2;
 1358              		.loc 3 49 13
 1359 0082 174B     		ldr	r3, .L76
 1360 0084 5B68     		ldr	r3, [r3, #4]
 1361 0086 164A     		ldr	r2, .L76
 1362 0088 23F46053 		bic	r3, r3, #14336
 1363 008c 5360     		str	r3, [r2, #4]
  50:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;
 1364              		.loc 3 50 13
 1365 008e 144B     		ldr	r3, .L76
 1366 0090 134A     		ldr	r2, .L76
 1367 0092 5B68     		ldr	r3, [r3, #4]
 1368 0094 5360     		str	r3, [r2, #4]
  51:Core/Inc/configuraciones.h **** 
  52:Core/Inc/configuraciones.h ****   // Enciendo el PLL
  53:Core/Inc/configuraciones.h ****   RCC->CR |= RCC_CR_PLLON;
 1369              		.loc 3 53 11
 1370 0096 124B     		ldr	r3, .L76
 1371 0098 1B68     		ldr	r3, [r3]
 1372 009a 114A     		ldr	r2, .L76
 1373 009c 43F08073 		orr	r3, r3, #16777216
 1374 00a0 1360     		str	r3, [r2]
  54:Core/Inc/configuraciones.h **** 
  55:Core/Inc/configuraciones.h ****   // Espero a que se estabilice la señal del PLL
  56:Core/Inc/configuraciones.h ****   while(!(RCC->CR & RCC_CR_PLLRDY));
 1375              		.loc 3 56 8
 1376 00a2 00BF     		nop
 1377              	.L74:
 1378              		.loc 3 56 14 discriminator 1
 1379 00a4 0E4B     		ldr	r3, .L76
 1380 00a6 1B68     		ldr	r3, [r3]
 1381              		.loc 3 56 19 discriminator 1
 1382 00a8 03F00073 		and	r3, r3, #33554432
 1383              		.loc 3 56 8 discriminator 1
 1384 00ac 002B     		cmp	r3, #0
 1385 00ae F9D0     		beq	.L74
  57:Core/Inc/configuraciones.h **** 
  58:Core/Inc/configuraciones.h ****   // Selecciono como señal SYSCLK a la señal PLLCLK
  59:Core/Inc/configuraciones.h ****   RCC->CFGR &= ~RCC_CFGR_SW;
 1386              		.loc 3 59 13
 1387 00b0 0B4B     		ldr	r3, .L76
 1388 00b2 5B68     		ldr	r3, [r3, #4]
 1389 00b4 0A4A     		ldr	r2, .L76
 1390 00b6 23F00303 		bic	r3, r3, #3
 1391 00ba 5360     		str	r3, [r2, #4]
  60:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_SW_PLL;
 1392              		.loc 3 60 13
 1393 00bc 084B     		ldr	r3, .L76
 1394 00be 5B68     		ldr	r3, [r3, #4]
 1395 00c0 074A     		ldr	r2, .L76
 1396 00c2 43F00203 		orr	r3, r3, #2
 1397 00c6 5360     		str	r3, [r2, #4]
  61:Core/Inc/configuraciones.h ****   while(!(RCC->CFGR & RCC_CFGR_SWS_PLL));
 1398              		.loc 3 61 8
 1399 00c8 00BF     		nop
 1400              	.L75:
 1401              		.loc 3 61 14 discriminator 1
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 58


 1402 00ca 054B     		ldr	r3, .L76
 1403 00cc 5B68     		ldr	r3, [r3, #4]
 1404              		.loc 3 61 21 discriminator 1
 1405 00ce 03F00803 		and	r3, r3, #8
 1406              		.loc 3 61 8 discriminator 1
 1407 00d2 002B     		cmp	r3, #0
 1408 00d4 F9D0     		beq	.L75
  62:Core/Inc/configuraciones.h **** 
  63:Core/Inc/configuraciones.h ****   // Actualizo finalmente la señal de reloj del sistema (SYSCLK)
  64:Core/Inc/configuraciones.h ****   SystemCoreClockUpdate();
 1409              		.loc 3 64 3
 1410 00d6 FFF7FEFF 		bl	SystemCoreClockUpdate
  65:Core/Inc/configuraciones.h **** }
 1411              		.loc 3 65 1
 1412 00da 00BF     		nop
 1413 00dc 80BD     		pop	{r7, pc}
 1414              	.L77:
 1415 00de 00BF     		.align	2
 1416              	.L76:
 1417 00e0 00100240 		.word	1073876992
 1418 00e4 00200240 		.word	1073881088
 1419              		.cfi_endproc
 1420              	.LFE84:
 1422              		.global	__aeabi_ui2d
 1423              		.global	__aeabi_ddiv
 1424              		.global	__aeabi_dsub
 1425              		.global	__aeabi_d2uiz
 1426              		.section	.text.configurarTimerParaLedRgb,"ax",%progbits
 1427              		.align	1
 1428              		.global	configurarTimerParaLedRgb
 1429              		.syntax unified
 1430              		.thumb
 1431              		.thumb_func
 1432              		.fpu softvfp
 1434              	configurarTimerParaLedRgb:
 1435              	.LFB85:
  66:Core/Inc/configuraciones.h **** 
  67:Core/Inc/configuraciones.h **** void configurarTimerParaLedRgb()
  68:Core/Inc/configuraciones.h **** {
 1436              		.loc 3 68 1
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 0
 1439              		@ frame_needed = 1, uses_anonymous_args = 0
 1440 0000 98B5     		push	{r3, r4, r7, lr}
 1441              	.LCFI90:
 1442              		.cfi_def_cfa_offset 16
 1443              		.cfi_offset 3, -16
 1444              		.cfi_offset 4, -12
 1445              		.cfi_offset 7, -8
 1446              		.cfi_offset 14, -4
 1447 0002 00AF     		add	r7, sp, #0
 1448              	.LCFI91:
 1449              		.cfi_def_cfa_register 7
  69:Core/Inc/configuraciones.h ****   __asm__ volatile("cpsid i");
 1450              		.loc 3 69 3
 1451              		.syntax unified
 1452              	@ 69 "Core/Inc/configuraciones.h" 1
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 59


 1453 0004 72B6     		cpsid i
 1454              	@ 0 "" 2
  70:Core/Inc/configuraciones.h **** 
  71:Core/Inc/configuraciones.h ****   RCC->APB1ENR |= RCC_APB1ENR_TIM2EN | RCC_APB1ENR_TIM3EN | RCC_APB1ENR_TIM4EN;
 1455              		.loc 3 71 16
 1456              		.thumb
 1457              		.syntax unified
 1458 0006 724B     		ldr	r3, .L79+8
 1459 0008 DB69     		ldr	r3, [r3, #28]
 1460 000a 714A     		ldr	r2, .L79+8
 1461 000c 43F00703 		orr	r3, r3, #7
 1462 0010 D361     		str	r3, [r2, #28]
  72:Core/Inc/configuraciones.h ****   
  73:Core/Inc/configuraciones.h ****   /************************** Configuración de Timer 2 ***********************/
  74:Core/Inc/configuraciones.h **** 
  75:Core/Inc/configuraciones.h ****   TIM2->PSC = SystemCoreClock / FRECUENCIA_CNT_LEDS - 1;
 1463              		.loc 3 75 31
 1464 0012 704B     		ldr	r3, .L79+12
 1465 0014 1B68     		ldr	r3, [r3]
 1466 0016 1846     		mov	r0, r3
 1467 0018 FFF7FEFF 		bl	__aeabi_ui2d
 1468 001c 6AA3     		adr	r3, .L79
 1469 001e D3E90023 		ldrd	r2, [r3]
 1470 0022 FFF7FEFF 		bl	__aeabi_ddiv
 1471 0026 0246     		mov	r2, r0
 1472 0028 0B46     		mov	r3, r1
 1473 002a 1046     		mov	r0, r2
 1474 002c 1946     		mov	r1, r3
 1475              		.loc 3 75 53
 1476 002e 4FF00002 		mov	r2, #0
 1477 0032 694B     		ldr	r3, .L79+16
 1478 0034 FFF7FEFF 		bl	__aeabi_dsub
 1479 0038 0246     		mov	r2, r0
 1480 003a 0B46     		mov	r3, r1
 1481              		.loc 3 75 7
 1482 003c 4FF08044 		mov	r4, #1073741824
 1483              		.loc 3 75 13
 1484 0040 1046     		mov	r0, r2
 1485 0042 1946     		mov	r1, r3
 1486 0044 FFF7FEFF 		bl	__aeabi_d2uiz
 1487 0048 0346     		mov	r3, r0
 1488 004a A362     		str	r3, [r4, #40]
  76:Core/Inc/configuraciones.h ****   TIM2->ARR = 0xFFFF;
 1489              		.loc 3 76 7
 1490 004c 4FF08043 		mov	r3, #1073741824
 1491              		.loc 3 76 13
 1492 0050 4FF6FF72 		movw	r2, #65535
 1493 0054 DA62     		str	r2, [r3, #44]
  77:Core/Inc/configuraciones.h **** 
  78:Core/Inc/configuraciones.h ****   // Match para el LED rojo
  79:Core/Inc/configuraciones.h ****   TIM2->CCR2 = 0;
 1494              		.loc 3 79 7
 1495 0056 4FF08043 		mov	r3, #1073741824
 1496              		.loc 3 79 14
 1497 005a 0022     		movs	r2, #0
 1498 005c 9A63     		str	r2, [r3, #56]
  80:Core/Inc/configuraciones.h **** 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 60


  81:Core/Inc/configuraciones.h ****   // Hago que se haga un match en 2000000 μs
  82:Core/Inc/configuraciones.h ****   TIM2->CCR1 = PERIODO_PWM;
 1499              		.loc 3 82 7
 1500 005e 4FF08043 		mov	r3, #1073741824
 1501              		.loc 3 82 14
 1502 0062 44F62062 		movw	r2, #20000
 1503 0066 5A63     		str	r2, [r3, #52]
  83:Core/Inc/configuraciones.h **** 
  84:Core/Inc/configuraciones.h ****   // Hago que los matchs con CCR1 y CCR2 generen pedido de interrupción
  85:Core/Inc/configuraciones.h ****   TIM2->DIER = TIM_DIER_CC1IE | TIM_DIER_CC2IE;
 1504              		.loc 3 85 7
 1505 0068 4FF08043 		mov	r3, #1073741824
 1506              		.loc 3 85 14
 1507 006c 0622     		movs	r2, #6
 1508 006e DA60     		str	r2, [r3, #12]
  86:Core/Inc/configuraciones.h **** 
  87:Core/Inc/configuraciones.h ****   NVIC->ISER[0] |= (1 << TIM2_IRQn);
 1509              		.loc 3 87 17
 1510 0070 5A4B     		ldr	r3, .L79+20
 1511 0072 1B68     		ldr	r3, [r3]
 1512 0074 594A     		ldr	r2, .L79+20
 1513 0076 43F08053 		orr	r3, r3, #268435456
 1514 007a 1360     		str	r3, [r2]
  88:Core/Inc/configuraciones.h ****   NVIC->ICPR[0] |= (1 << TIM2_IRQn);
 1515              		.loc 3 88 17
 1516 007c 574B     		ldr	r3, .L79+20
 1517 007e D3F88031 		ldr	r3, [r3, #384]
 1518 0082 564A     		ldr	r2, .L79+20
 1519 0084 43F08053 		orr	r3, r3, #268435456
 1520 0088 C2F88031 		str	r3, [r2, #384]
  89:Core/Inc/configuraciones.h **** 
  90:Core/Inc/configuraciones.h ****   ////////////////////////////////////////////////////////////////////////////////
  91:Core/Inc/configuraciones.h ****   /************************* Configuración de Timer 3 ***************************/
  92:Core/Inc/configuraciones.h ****   
  93:Core/Inc/configuraciones.h ****   TIM3->PSC = SystemCoreClock / FRECUENCIA_CNT_LEDS - 1;
 1521              		.loc 3 93 31
 1522 008c 514B     		ldr	r3, .L79+12
 1523 008e 1B68     		ldr	r3, [r3]
 1524 0090 1846     		mov	r0, r3
 1525 0092 FFF7FEFF 		bl	__aeabi_ui2d
 1526 0096 4CA3     		adr	r3, .L79
 1527 0098 D3E90023 		ldrd	r2, [r3]
 1528 009c FFF7FEFF 		bl	__aeabi_ddiv
 1529 00a0 0246     		mov	r2, r0
 1530 00a2 0B46     		mov	r3, r1
 1531 00a4 1046     		mov	r0, r2
 1532 00a6 1946     		mov	r1, r3
 1533              		.loc 3 93 53
 1534 00a8 4FF00002 		mov	r2, #0
 1535 00ac 4A4B     		ldr	r3, .L79+16
 1536 00ae FFF7FEFF 		bl	__aeabi_dsub
 1537 00b2 0246     		mov	r2, r0
 1538 00b4 0B46     		mov	r3, r1
 1539              		.loc 3 93 7
 1540 00b6 4A4C     		ldr	r4, .L79+24
 1541              		.loc 3 93 13
 1542 00b8 1046     		mov	r0, r2
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 61


 1543 00ba 1946     		mov	r1, r3
 1544 00bc FFF7FEFF 		bl	__aeabi_d2uiz
 1545 00c0 0346     		mov	r3, r0
 1546 00c2 A362     		str	r3, [r4, #40]
  94:Core/Inc/configuraciones.h ****   TIM3->ARR = 0xFFFF;
 1547              		.loc 3 94 7
 1548 00c4 464B     		ldr	r3, .L79+24
 1549              		.loc 3 94 13
 1550 00c6 4FF6FF72 		movw	r2, #65535
 1551 00ca DA62     		str	r2, [r3, #44]
  95:Core/Inc/configuraciones.h **** 
  96:Core/Inc/configuraciones.h ****   // Match para el LED verde
  97:Core/Inc/configuraciones.h ****   TIM3->CCR2 = 0;
 1552              		.loc 3 97 7
 1553 00cc 444B     		ldr	r3, .L79+24
 1554              		.loc 3 97 14
 1555 00ce 0022     		movs	r2, #0
 1556 00d0 9A63     		str	r2, [r3, #56]
  98:Core/Inc/configuraciones.h **** 
  99:Core/Inc/configuraciones.h ****   // Hago que se haga un match en 2000000 μs
 100:Core/Inc/configuraciones.h ****   TIM3->CCR1 = PERIODO_PWM;
 1557              		.loc 3 100 7
 1558 00d2 434B     		ldr	r3, .L79+24
 1559              		.loc 3 100 14
 1560 00d4 44F62062 		movw	r2, #20000
 1561 00d8 5A63     		str	r2, [r3, #52]
 101:Core/Inc/configuraciones.h **** 
 102:Core/Inc/configuraciones.h ****   // Hago que los matchs con CCR1 y CCR2 generen pedido de interrupción
 103:Core/Inc/configuraciones.h ****   TIM3->DIER = TIM_DIER_CC1IE | TIM_DIER_CC2IE;
 1562              		.loc 3 103 7
 1563 00da 414B     		ldr	r3, .L79+24
 1564              		.loc 3 103 14
 1565 00dc 0622     		movs	r2, #6
 1566 00de DA60     		str	r2, [r3, #12]
 104:Core/Inc/configuraciones.h **** 
 105:Core/Inc/configuraciones.h ****   NVIC->ISER[0] |= (1 << TIM3_IRQn);
 1567              		.loc 3 105 17
 1568 00e0 3E4B     		ldr	r3, .L79+20
 1569 00e2 1B68     		ldr	r3, [r3]
 1570 00e4 3D4A     		ldr	r2, .L79+20
 1571 00e6 43F00053 		orr	r3, r3, #536870912
 1572 00ea 1360     		str	r3, [r2]
 106:Core/Inc/configuraciones.h ****   NVIC->ICPR[0] |= (1 << TIM3_IRQn);
 1573              		.loc 3 106 17
 1574 00ec 3B4B     		ldr	r3, .L79+20
 1575 00ee D3F88031 		ldr	r3, [r3, #384]
 1576 00f2 3A4A     		ldr	r2, .L79+20
 1577 00f4 43F00053 		orr	r3, r3, #536870912
 1578 00f8 C2F88031 		str	r3, [r2, #384]
 107:Core/Inc/configuraciones.h **** 
 108:Core/Inc/configuraciones.h ****   ////////////////////////////////////////////////////////////////////////////////
 109:Core/Inc/configuraciones.h ****   /************************* Configuración de Timer 4 ***************************/
 110:Core/Inc/configuraciones.h ****   
 111:Core/Inc/configuraciones.h ****   TIM4->PSC = SystemCoreClock / FRECUENCIA_CNT_LEDS - 1;
 1579              		.loc 3 111 31
 1580 00fc 354B     		ldr	r3, .L79+12
 1581 00fe 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 62


 1582 0100 1846     		mov	r0, r3
 1583 0102 FFF7FEFF 		bl	__aeabi_ui2d
 1584 0106 30A3     		adr	r3, .L79
 1585 0108 D3E90023 		ldrd	r2, [r3]
 1586 010c FFF7FEFF 		bl	__aeabi_ddiv
 1587 0110 0246     		mov	r2, r0
 1588 0112 0B46     		mov	r3, r1
 1589 0114 1046     		mov	r0, r2
 1590 0116 1946     		mov	r1, r3
 1591              		.loc 3 111 53
 1592 0118 4FF00002 		mov	r2, #0
 1593 011c 2E4B     		ldr	r3, .L79+16
 1594 011e FFF7FEFF 		bl	__aeabi_dsub
 1595 0122 0246     		mov	r2, r0
 1596 0124 0B46     		mov	r3, r1
 1597              		.loc 3 111 7
 1598 0126 2F4C     		ldr	r4, .L79+28
 1599              		.loc 3 111 13
 1600 0128 1046     		mov	r0, r2
 1601 012a 1946     		mov	r1, r3
 1602 012c FFF7FEFF 		bl	__aeabi_d2uiz
 1603 0130 0346     		mov	r3, r0
 1604 0132 A362     		str	r3, [r4, #40]
 112:Core/Inc/configuraciones.h ****   TIM4->ARR = 0xFFFF;
 1605              		.loc 3 112 7
 1606 0134 2B4B     		ldr	r3, .L79+28
 1607              		.loc 3 112 13
 1608 0136 4FF6FF72 		movw	r2, #65535
 1609 013a DA62     		str	r2, [r3, #44]
 113:Core/Inc/configuraciones.h **** 
 114:Core/Inc/configuraciones.h ****   // Match para el LED azul
 115:Core/Inc/configuraciones.h ****   TIM4->CCR2 = 0;
 1610              		.loc 3 115 7
 1611 013c 294B     		ldr	r3, .L79+28
 1612              		.loc 3 115 14
 1613 013e 0022     		movs	r2, #0
 1614 0140 9A63     		str	r2, [r3, #56]
 116:Core/Inc/configuraciones.h **** 
 117:Core/Inc/configuraciones.h ****   // Hago que se haga un match en 2000000 μs
 118:Core/Inc/configuraciones.h ****   TIM4->CCR1 = PERIODO_PWM;
 1615              		.loc 3 118 7
 1616 0142 284B     		ldr	r3, .L79+28
 1617              		.loc 3 118 14
 1618 0144 44F62062 		movw	r2, #20000
 1619 0148 5A63     		str	r2, [r3, #52]
 119:Core/Inc/configuraciones.h **** 
 120:Core/Inc/configuraciones.h ****   // Hago que los matchs con CCR1 y CCR2 generen pedido de interrupción
 121:Core/Inc/configuraciones.h ****   TIM4->DIER = TIM_DIER_CC1IE | TIM_DIER_CC2IE;
 1620              		.loc 3 121 7
 1621 014a 264B     		ldr	r3, .L79+28
 1622              		.loc 3 121 14
 1623 014c 0622     		movs	r2, #6
 1624 014e DA60     		str	r2, [r3, #12]
 122:Core/Inc/configuraciones.h **** 
 123:Core/Inc/configuraciones.h ****   NVIC->ISER[0] |= (1 << TIM4_IRQn);
 1625              		.loc 3 123 17
 1626 0150 224B     		ldr	r3, .L79+20
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 63


 1627 0152 1B68     		ldr	r3, [r3]
 1628 0154 214A     		ldr	r2, .L79+20
 1629 0156 43F08043 		orr	r3, r3, #1073741824
 1630 015a 1360     		str	r3, [r2]
 124:Core/Inc/configuraciones.h ****   NVIC->ICPR[0] |= (1 << TIM4_IRQn);
 1631              		.loc 3 124 17
 1632 015c 1F4B     		ldr	r3, .L79+20
 1633 015e D3F88031 		ldr	r3, [r3, #384]
 1634 0162 1E4A     		ldr	r2, .L79+20
 1635 0164 43F08043 		orr	r3, r3, #1073741824
 1636 0168 C2F88031 		str	r3, [r2, #384]
 125:Core/Inc/configuraciones.h **** 
 126:Core/Inc/configuraciones.h ****   NVIC_SetPriority(TIM2_IRQn, 0);
 1637              		.loc 3 126 3
 1638 016c 0021     		movs	r1, #0
 1639 016e 1C20     		movs	r0, #28
 1640 0170 FFF7FEFF 		bl	__NVIC_SetPriority
 127:Core/Inc/configuraciones.h ****   NVIC_SetPriority(TIM3_IRQn, 0);
 1641              		.loc 3 127 3
 1642 0174 0021     		movs	r1, #0
 1643 0176 1D20     		movs	r0, #29
 1644 0178 FFF7FEFF 		bl	__NVIC_SetPriority
 128:Core/Inc/configuraciones.h ****   NVIC_SetPriority(TIM4_IRQn, 0);
 1645              		.loc 3 128 3
 1646 017c 0021     		movs	r1, #0
 1647 017e 1E20     		movs	r0, #30
 1648 0180 FFF7FEFF 		bl	__NVIC_SetPriority
 129:Core/Inc/configuraciones.h ****   
 130:Core/Inc/configuraciones.h ****   __asm__ volatile ("cpsie i");
 1649              		.loc 3 130 3
 1650              		.syntax unified
 1651              	@ 130 "Core/Inc/configuraciones.h" 1
 1652 0184 62B6     		cpsie i
 1653              	@ 0 "" 2
 131:Core/Inc/configuraciones.h **** 
 132:Core/Inc/configuraciones.h ****   // Habilito el contador del timer
 133:Core/Inc/configuraciones.h ****   TIM2->CR1 |= TIM_CR1_CEN;
 1654              		.loc 3 133 13
 1655              		.thumb
 1656              		.syntax unified
 1657 0186 4FF08043 		mov	r3, #1073741824
 1658 018a 1B68     		ldr	r3, [r3]
 1659 018c 4FF08042 		mov	r2, #1073741824
 1660 0190 43F00103 		orr	r3, r3, #1
 1661 0194 1360     		str	r3, [r2]
 134:Core/Inc/configuraciones.h ****   TIM3->CR1 |= TIM_CR1_CEN;
 1662              		.loc 3 134 13
 1663 0196 124B     		ldr	r3, .L79+24
 1664 0198 1B68     		ldr	r3, [r3]
 1665 019a 114A     		ldr	r2, .L79+24
 1666 019c 43F00103 		orr	r3, r3, #1
 1667 01a0 1360     		str	r3, [r2]
 135:Core/Inc/configuraciones.h ****   TIM4->CR1 |= TIM_CR1_CEN;
 1668              		.loc 3 135 13
 1669 01a2 104B     		ldr	r3, .L79+28
 1670 01a4 1B68     		ldr	r3, [r3]
 1671 01a6 0F4A     		ldr	r2, .L79+28
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 64


 1672 01a8 43F00103 		orr	r3, r3, #1
 1673 01ac 1360     		str	r3, [r2]
 136:Core/Inc/configuraciones.h **** 
 137:Core/Inc/configuraciones.h ****   TIM2->SR = 0;
 1674              		.loc 3 137 7
 1675 01ae 4FF08043 		mov	r3, #1073741824
 1676              		.loc 3 137 12
 1677 01b2 0022     		movs	r2, #0
 1678 01b4 1A61     		str	r2, [r3, #16]
 138:Core/Inc/configuraciones.h ****   TIM3->SR = 0;
 1679              		.loc 3 138 7
 1680 01b6 0A4B     		ldr	r3, .L79+24
 1681              		.loc 3 138 12
 1682 01b8 0022     		movs	r2, #0
 1683 01ba 1A61     		str	r2, [r3, #16]
 139:Core/Inc/configuraciones.h ****   TIM4->SR = 0;
 1684              		.loc 3 139 7
 1685 01bc 094B     		ldr	r3, .L79+28
 1686              		.loc 3 139 12
 1687 01be 0022     		movs	r2, #0
 1688 01c0 1A61     		str	r2, [r3, #16]
 140:Core/Inc/configuraciones.h **** }
 1689              		.loc 3 140 1
 1690 01c2 00BF     		nop
 1691 01c4 98BD     		pop	{r3, r4, r7, pc}
 1692              	.L80:
 1693 01c6 00BF     		.align	3
 1694              	.L79:
 1695 01c8 00000000 		.word	0
 1696 01cc 80842E41 		.word	1093567616
 1697 01d0 00100240 		.word	1073876992
 1698 01d4 00000000 		.word	SystemCoreClock
 1699 01d8 0000F03F 		.word	1072693248
 1700 01dc 00E100E0 		.word	-536813312
 1701 01e0 00040040 		.word	1073742848
 1702 01e4 00080040 		.word	1073743872
 1703              		.cfi_endproc
 1704              	.LFE85:
 1706              		.section	.text.configurarTIM1,"ax",%progbits
 1707              		.align	1
 1708              		.global	configurarTIM1
 1709              		.syntax unified
 1710              		.thumb
 1711              		.thumb_func
 1712              		.fpu softvfp
 1714              	configurarTIM1:
 1715              	.LFB86:
 141:Core/Inc/configuraciones.h **** 
 142:Core/Inc/configuraciones.h **** // Timer usado para notificar un error con el LED de la placa
 143:Core/Inc/configuraciones.h **** void configurarTIM1(void)
 144:Core/Inc/configuraciones.h **** {
 1716              		.loc 3 144 1
 1717              		.cfi_startproc
 1718              		@ args = 0, pretend = 0, frame = 0
 1719              		@ frame_needed = 1, uses_anonymous_args = 0
 1720 0000 80B5     		push	{r7, lr}
 1721              	.LCFI92:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 65


 1722              		.cfi_def_cfa_offset 8
 1723              		.cfi_offset 7, -8
 1724              		.cfi_offset 14, -4
 1725 0002 00AF     		add	r7, sp, #0
 1726              	.LCFI93:
 1727              		.cfi_def_cfa_register 7
 145:Core/Inc/configuraciones.h ****   __asm__ volatile ("cpsid i");
 1728              		.loc 3 145 3
 1729              		.syntax unified
 1730              	@ 145 "Core/Inc/configuraciones.h" 1
 1731 0004 72B6     		cpsid i
 1732              	@ 0 "" 2
 146:Core/Inc/configuraciones.h **** 
 147:Core/Inc/configuraciones.h ****   // Habilito la entrada de reloj para el Timer 1
 148:Core/Inc/configuraciones.h ****   RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;
 1733              		.loc 3 148 16
 1734              		.thumb
 1735              		.syntax unified
 1736 0006 1A4B     		ldr	r3, .L82
 1737 0008 9B69     		ldr	r3, [r3, #24]
 1738 000a 194A     		ldr	r2, .L82
 1739 000c 43F40063 		orr	r3, r3, #2048
 1740 0010 9361     		str	r3, [r2, #24]
 149:Core/Inc/configuraciones.h **** 
 150:Core/Inc/configuraciones.h ****   // Con esto consigo un período de 1000 μs
 151:Core/Inc/configuraciones.h ****   // Así, si la frecuencia de entrada al timer es de 28 MHz, el PSC tendrá el valor 1000
 152:Core/Inc/configuraciones.h ****   TIM1->PSC = SystemCoreClock / 1000 - 1;
 1741              		.loc 3 152 31
 1742 0012 184B     		ldr	r3, .L82+4
 1743 0014 1B68     		ldr	r3, [r3]
 1744 0016 184A     		ldr	r2, .L82+8
 1745 0018 A2FB0323 		umull	r2, r3, r2, r3
 1746 001c 9B09     		lsrs	r3, r3, #6
 1747              		.loc 3 152 7
 1748 001e 174A     		ldr	r2, .L82+12
 1749              		.loc 3 152 38
 1750 0020 013B     		subs	r3, r3, #1
 1751              		.loc 3 152 13
 1752 0022 9362     		str	r3, [r2, #40]
 153:Core/Inc/configuraciones.h ****   TIM1->ARR = 500;
 1753              		.loc 3 153 7
 1754 0024 154B     		ldr	r3, .L82+12
 1755              		.loc 3 153 13
 1756 0026 4FF4FA72 		mov	r2, #500
 1757 002a DA62     		str	r2, [r3, #44]
 154:Core/Inc/configuraciones.h **** 
 155:Core/Inc/configuraciones.h ****   // Hago que los matchs con CCR1 y CCR2 generen pedido de interrupción
 156:Core/Inc/configuraciones.h ****   TIM1->DIER = TIM_DIER_UIE;
 1758              		.loc 3 156 7
 1759 002c 134B     		ldr	r3, .L82+12
 1760              		.loc 3 156 14
 1761 002e 0122     		movs	r2, #1
 1762 0030 DA60     		str	r2, [r3, #12]
 157:Core/Inc/configuraciones.h **** 
 158:Core/Inc/configuraciones.h ****   TIM1->CR1 = 0;
 1763              		.loc 3 158 7
 1764 0032 124B     		ldr	r3, .L82+12
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 66


 1765              		.loc 3 158 13
 1766 0034 0022     		movs	r2, #0
 1767 0036 1A60     		str	r2, [r3]
 159:Core/Inc/configuraciones.h **** 
 160:Core/Inc/configuraciones.h ****   NVIC->ISER[0] |= 1 << TIM1_UP_IRQn;
 1768              		.loc 3 160 17
 1769 0038 114B     		ldr	r3, .L82+16
 1770 003a 1B68     		ldr	r3, [r3]
 1771 003c 104A     		ldr	r2, .L82+16
 1772 003e 43F00073 		orr	r3, r3, #33554432
 1773 0042 1360     		str	r3, [r2]
 161:Core/Inc/configuraciones.h ****   NVIC->ICPR[0] |= 1 << TIM1_UP_IRQn;
 1774              		.loc 3 161 17
 1775 0044 0E4B     		ldr	r3, .L82+16
 1776 0046 D3F88031 		ldr	r3, [r3, #384]
 1777 004a 0D4A     		ldr	r2, .L82+16
 1778 004c 43F00073 		orr	r3, r3, #33554432
 1779 0050 C2F88031 		str	r3, [r2, #384]
 162:Core/Inc/configuraciones.h ****   
 163:Core/Inc/configuraciones.h ****   TIM1->CNT = 0;
 1780              		.loc 3 163 7
 1781 0054 094B     		ldr	r3, .L82+12
 1782              		.loc 3 163 13
 1783 0056 0022     		movs	r2, #0
 1784 0058 5A62     		str	r2, [r3, #36]
 164:Core/Inc/configuraciones.h ****   TIM1->SR = 0;
 1785              		.loc 3 164 7
 1786 005a 084B     		ldr	r3, .L82+12
 1787              		.loc 3 164 12
 1788 005c 0022     		movs	r2, #0
 1789 005e 1A61     		str	r2, [r3, #16]
 165:Core/Inc/configuraciones.h ****   NVIC_SetPriority(TIM1_UP_IRQn, 1);
 1790              		.loc 3 165 3
 1791 0060 0121     		movs	r1, #1
 1792 0062 1920     		movs	r0, #25
 1793 0064 FFF7FEFF 		bl	__NVIC_SetPriority
 166:Core/Inc/configuraciones.h **** 
 167:Core/Inc/configuraciones.h ****   __asm__ volatile ("cpsie i");
 1794              		.loc 3 167 3
 1795              		.syntax unified
 1796              	@ 167 "Core/Inc/configuraciones.h" 1
 1797 0068 62B6     		cpsie i
 1798              	@ 0 "" 2
 168:Core/Inc/configuraciones.h **** }
 1799              		.loc 3 168 1
 1800              		.thumb
 1801              		.syntax unified
 1802 006a 00BF     		nop
 1803 006c 80BD     		pop	{r7, pc}
 1804              	.L83:
 1805 006e 00BF     		.align	2
 1806              	.L82:
 1807 0070 00100240 		.word	1073876992
 1808 0074 00000000 		.word	SystemCoreClock
 1809 0078 D34D6210 		.word	274877907
 1810 007c 002C0140 		.word	1073818624
 1811 0080 00E100E0 		.word	-536813312
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 67


 1812              		.cfi_endproc
 1813              	.LFE86:
 1815              		.section	.text.configurarUSART1,"ax",%progbits
 1816              		.align	1
 1817              		.global	configurarUSART1
 1818              		.syntax unified
 1819              		.thumb
 1820              		.thumb_func
 1821              		.fpu softvfp
 1823              	configurarUSART1:
 1824              	.LFB87:
 169:Core/Inc/configuraciones.h **** 
 170:Core/Inc/configuraciones.h **** // Configurar la USART usada para el módulo Bluetooth
 171:Core/Inc/configuraciones.h **** void configurarUSART1()
 172:Core/Inc/configuraciones.h **** {
 1825              		.loc 3 172 1
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 0
 1828              		@ frame_needed = 1, uses_anonymous_args = 0
 1829 0000 80B5     		push	{r7, lr}
 1830              	.LCFI94:
 1831              		.cfi_def_cfa_offset 8
 1832              		.cfi_offset 7, -8
 1833              		.cfi_offset 14, -4
 1834 0002 00AF     		add	r7, sp, #0
 1835              	.LCFI95:
 1836              		.cfi_def_cfa_register 7
 173:Core/Inc/configuraciones.h ****   // Esto hace que se divida en 45.57 la frecuencia de 28 MHz.
 174:Core/Inc/configuraciones.h ****   // De esta manera obtendría una velocidad de transmisión/recepción de 38400 bps.
 175:Core/Inc/configuraciones.h ****   USART1->BRR = 0x02D9;
 1837              		.loc 3 175 9
 1838 0004 104B     		ldr	r3, .L85
 1839              		.loc 3 175 15
 1840 0006 40F2D922 		movw	r2, #729
 1841 000a 9A60     		str	r2, [r3, #8]
 176:Core/Inc/configuraciones.h **** 
 177:Core/Inc/configuraciones.h ****   USART1->CR2 = 0;
 1842              		.loc 3 177 9
 1843 000c 0E4B     		ldr	r3, .L85
 1844              		.loc 3 177 15
 1845 000e 0022     		movs	r2, #0
 1846 0010 1A61     		str	r2, [r3, #16]
 178:Core/Inc/configuraciones.h ****   // Habilito las interrupciones por error
 179:Core/Inc/configuraciones.h ****   USART1->CR3 = USART_CR3_EIE;
 1847              		.loc 3 179 9
 1848 0012 0D4B     		ldr	r3, .L85
 1849              		.loc 3 179 15
 1850 0014 0122     		movs	r2, #1
 1851 0016 5A61     		str	r2, [r3, #20]
 180:Core/Inc/configuraciones.h ****   // Habilito la USART, el recibimiento de datos y la transmisión de datos.
 181:Core/Inc/configuraciones.h ****   // Implícitamente además, estoy haciendo que lo que se mande sea:
 182:Core/Inc/configuraciones.h ****   //      - 1 bit de start
 183:Core/Inc/configuraciones.h ****   //      - 8 bits de datos
 184:Core/Inc/configuraciones.h ****   //      - 1 bit de stop
 185:Core/Inc/configuraciones.h ****   //      - sin paridad
 186:Core/Inc/configuraciones.h ****   USART1->CR1 = USART_CR1_UE | USART_CR1_RE | USART_CR1_TE | USART_CR1_RXNEIE;
 1852              		.loc 3 186 9
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 68


 1853 0018 0B4B     		ldr	r3, .L85
 1854              		.loc 3 186 15
 1855 001a 42F22C02 		movw	r2, #8236
 1856 001e DA60     		str	r2, [r3, #12]
 187:Core/Inc/configuraciones.h **** 
 188:Core/Inc/configuraciones.h ****   NVIC->ISER[1] |= 1 << (USART1_IRQn - 32);
 1857              		.loc 3 188 17
 1858 0020 0A4B     		ldr	r3, .L85+4
 1859 0022 5B68     		ldr	r3, [r3, #4]
 1860 0024 094A     		ldr	r2, .L85+4
 1861 0026 43F02003 		orr	r3, r3, #32
 1862 002a 5360     		str	r3, [r2, #4]
 189:Core/Inc/configuraciones.h ****   NVIC->ICPR[1] |= 1 << (USART1_IRQn - 32);
 1863              		.loc 3 189 17
 1864 002c 074B     		ldr	r3, .L85+4
 1865 002e D3F88431 		ldr	r3, [r3, #388]
 1866 0032 064A     		ldr	r2, .L85+4
 1867 0034 43F02003 		orr	r3, r3, #32
 1868 0038 C2F88431 		str	r3, [r2, #388]
 190:Core/Inc/configuraciones.h ****   NVIC_SetPriority(USART1_IRQn, 2);
 1869              		.loc 3 190 3
 1870 003c 0221     		movs	r1, #2
 1871 003e 2520     		movs	r0, #37
 1872 0040 FFF7FEFF 		bl	__NVIC_SetPriority
 191:Core/Inc/configuraciones.h **** }
 1873              		.loc 3 191 1
 1874 0044 00BF     		nop
 1875 0046 80BD     		pop	{r7, pc}
 1876              	.L86:
 1877              		.align	2
 1878              	.L85:
 1879 0048 00380140 		.word	1073821696
 1880 004c 00E100E0 		.word	-536813312
 1881              		.cfi_endproc
 1882              	.LFE87:
 1884              		.section	.text.configurarPuertos,"ax",%progbits
 1885              		.align	1
 1886              		.global	configurarPuertos
 1887              		.syntax unified
 1888              		.thumb
 1889              		.thumb_func
 1890              		.fpu softvfp
 1892              	configurarPuertos:
 1893              	.LFB88:
 192:Core/Inc/configuraciones.h **** 
 193:Core/Inc/configuraciones.h **** void configurarPuertos()
 194:Core/Inc/configuraciones.h **** {
 1894              		.loc 3 194 1
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 1, uses_anonymous_args = 0
 1898              		@ link register save eliminated.
 1899 0000 80B4     		push	{r7}
 1900              	.LCFI96:
 1901              		.cfi_def_cfa_offset 4
 1902              		.cfi_offset 7, -4
 1903 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 69


 1904              	.LCFI97:
 1905              		.cfi_def_cfa_register 7
 195:Core/Inc/configuraciones.h ****   RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_AFIOEN | RCC_APB2ENR_USART1EN | RCC_APB2ENR_IOPC
 1906              		.loc 3 195 16
 1907 0004 0D4B     		ldr	r3, .L88
 1908 0006 9B69     		ldr	r3, [r3, #24]
 1909 0008 0C4A     		ldr	r2, .L88
 1910 000a 43F48043 		orr	r3, r3, #16384
 1911 000e 43F01503 		orr	r3, r3, #21
 1912 0012 9361     		str	r3, [r2, #24]
 196:Core/Inc/configuraciones.h **** 
 197:Core/Inc/configuraciones.h ****   // Se configuran como salida los LEDs rojo, verde, y azul
 198:Core/Inc/configuraciones.h ****   GPIOA->CRL = GPIO_CRL_MODE5_1 | GPIO_CRL_MODE6_1 | GPIO_CRL_MODE7_1;
 1913              		.loc 3 198 8
 1914 0014 0A4B     		ldr	r3, .L88+4
 1915              		.loc 3 198 14
 1916 0016 0B4A     		ldr	r2, .L88+8
 1917 0018 1A60     		str	r2, [r3]
 199:Core/Inc/configuraciones.h **** 
 200:Core/Inc/configuraciones.h ****   // Se configura como salida TX el puerto A9 y como RX el puerto A10
 201:Core/Inc/configuraciones.h ****   GPIOA->CRH = GPIO_CRH_CNF9_1 | GPIO_CRH_MODE9_1 |
 1918              		.loc 3 201 8
 1919 001a 094B     		ldr	r3, .L88+4
 1920              		.loc 3 201 14
 1921 001c 4FF40A62 		mov	r2, #2208
 1922 0020 5A60     		str	r2, [r3, #4]
 202:Core/Inc/configuraciones.h ****                GPIO_CRH_CNF10_1;
 203:Core/Inc/configuraciones.h **** 
 204:Core/Inc/configuraciones.h ****   GPIOC->CRH = GPIO_CRH_MODE13_1;
 1923              		.loc 3 204 8
 1924 0022 094B     		ldr	r3, .L88+12
 1925              		.loc 3 204 14
 1926 0024 4FF40012 		mov	r2, #2097152
 1927 0028 5A60     		str	r2, [r3, #4]
 205:Core/Inc/configuraciones.h ****   GPIOC->ODR = GPIO_ODR_ODR13;
 1928              		.loc 3 205 8
 1929 002a 074B     		ldr	r3, .L88+12
 1930              		.loc 3 205 14
 1931 002c 4FF40052 		mov	r2, #8192
 1932 0030 DA60     		str	r2, [r3, #12]
 206:Core/Inc/configuraciones.h **** }
 1933              		.loc 3 206 1
 1934 0032 00BF     		nop
 1935 0034 BD46     		mov	sp, r7
 1936              	.LCFI98:
 1937              		.cfi_def_cfa_register 13
 1938              		@ sp needed
 1939 0036 80BC     		pop	{r7}
 1940              	.LCFI99:
 1941              		.cfi_restore 7
 1942              		.cfi_def_cfa_offset 0
 1943 0038 7047     		bx	lr
 1944              	.L89:
 1945 003a 00BF     		.align	2
 1946              	.L88:
 1947 003c 00100240 		.word	1073876992
 1948 0040 00080140 		.word	1073809408
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 70


 1949 0044 00002022 		.word	572522496
 1950 0048 00100140 		.word	1073811456
 1951              		.cfi_endproc
 1952              	.LFE88:
 1954              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 1955              		.align	1
 1956              		.global	TIM2_IRQHandler
 1957              		.syntax unified
 1958              		.thumb
 1959              		.thumb_func
 1960              		.fpu softvfp
 1962              	TIM2_IRQHandler:
 1963              	.LFB92:
 1964              		.file 4 "Core/Inc/rutinas_de_interrupcion.h"
   1:Core/Inc/rutinas_de_interrupcion.h **** #include "stm32f1xx.h"
   2:Core/Inc/rutinas_de_interrupcion.h **** #include "stm32f103xb.h"
   3:Core/Inc/rutinas_de_interrupcion.h **** #include "myLib.h"
   4:Core/Inc/rutinas_de_interrupcion.h **** #include <string.h>
   5:Core/Inc/rutinas_de_interrupcion.h **** #include <stdlib.h>
   6:Core/Inc/rutinas_de_interrupcion.h **** #include <stdio.h>
   7:Core/Inc/rutinas_de_interrupcion.h **** 
   8:Core/Inc/rutinas_de_interrupcion.h **** void TIM2_IRQHandler()
   9:Core/Inc/rutinas_de_interrupcion.h **** {
 1965              		.loc 4 9 1
 1966              		.cfi_startproc
 1967              		@ args = 0, pretend = 0, frame = 8
 1968              		@ frame_needed = 1, uses_anonymous_args = 0
 1969              		@ link register save eliminated.
 1970 0000 80B4     		push	{r7}
 1971              	.LCFI100:
 1972              		.cfi_def_cfa_offset 4
 1973              		.cfi_offset 7, -4
 1974 0002 83B0     		sub	sp, sp, #12
 1975              	.LCFI101:
 1976              		.cfi_def_cfa_offset 16
 1977 0004 00AF     		add	r7, sp, #0
 1978              	.LCFI102:
 1979              		.cfi_def_cfa_register 7
  10:Core/Inc/rutinas_de_interrupcion.h ****   uint32_t statusRegister = TIM2->SR;
 1980              		.loc 4 10 33
 1981 0006 4FF08043 		mov	r3, #1073741824
 1982              		.loc 4 10 12
 1983 000a 1B69     		ldr	r3, [r3, #16]
 1984 000c 7B60     		str	r3, [r7, #4]
  11:Core/Inc/rutinas_de_interrupcion.h ****   TIM2->SR = 0;
 1985              		.loc 4 11 7
 1986 000e 4FF08043 		mov	r3, #1073741824
 1987              		.loc 4 11 12
 1988 0012 0022     		movs	r2, #0
 1989 0014 1A61     		str	r2, [r3, #16]
  12:Core/Inc/rutinas_de_interrupcion.h **** 
  13:Core/Inc/rutinas_de_interrupcion.h ****   if(statusRegister & TIM_SR_CC1IF)
 1990              		.loc 4 13 21
 1991 0016 7B68     		ldr	r3, [r7, #4]
 1992 0018 03F00203 		and	r3, r3, #2
 1993              		.loc 4 13 5
 1994 001c 002B     		cmp	r3, #0
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 71


 1995 001e 0FD0     		beq	.L91
  14:Core/Inc/rutinas_de_interrupcion.h ****   {
  15:Core/Inc/rutinas_de_interrupcion.h ****     if(TIM2->CCR2 != 0)
 1996              		.loc 4 15 12
 1997 0020 4FF08043 		mov	r3, #1073741824
 1998 0024 9B6B     		ldr	r3, [r3, #56]
 1999              		.loc 4 15 7
 2000 0026 002B     		cmp	r3, #0
 2001 0028 10D0     		beq	.L93
  16:Core/Inc/rutinas_de_interrupcion.h ****     {
  17:Core/Inc/rutinas_de_interrupcion.h ****       // Enciendo el LED rojo
  18:Core/Inc/rutinas_de_interrupcion.h ****       GPIOA->ODR |= GPIO_ODR_ODR5;
 2002              		.loc 4 18 18
 2003 002a 0B4B     		ldr	r3, .L94
 2004 002c DB68     		ldr	r3, [r3, #12]
 2005 002e 0A4A     		ldr	r2, .L94
 2006 0030 43F02003 		orr	r3, r3, #32
 2007 0034 D360     		str	r3, [r2, #12]
  19:Core/Inc/rutinas_de_interrupcion.h ****       TIM2->EGR = TIM_EGR_UG;
 2008              		.loc 4 19 11
 2009 0036 4FF08043 		mov	r3, #1073741824
 2010              		.loc 4 19 17
 2011 003a 0122     		movs	r2, #1
 2012 003c 5A61     		str	r2, [r3, #20]
  20:Core/Inc/rutinas_de_interrupcion.h ****     }
  21:Core/Inc/rutinas_de_interrupcion.h ****   }
  22:Core/Inc/rutinas_de_interrupcion.h ****   else
  23:Core/Inc/rutinas_de_interrupcion.h ****     // Apago el LED rojo
  24:Core/Inc/rutinas_de_interrupcion.h ****     GPIOA->ODR &= ~GPIO_ODR_ODR5;
  25:Core/Inc/rutinas_de_interrupcion.h **** }
 2013              		.loc 4 25 1
 2014 003e 05E0     		b	.L93
 2015              	.L91:
  24:Core/Inc/rutinas_de_interrupcion.h **** }
 2016              		.loc 4 24 16
 2017 0040 054B     		ldr	r3, .L94
 2018 0042 DB68     		ldr	r3, [r3, #12]
 2019 0044 044A     		ldr	r2, .L94
 2020 0046 23F02003 		bic	r3, r3, #32
 2021 004a D360     		str	r3, [r2, #12]
 2022              	.L93:
 2023              		.loc 4 25 1
 2024 004c 00BF     		nop
 2025 004e 0C37     		adds	r7, r7, #12
 2026              	.LCFI103:
 2027              		.cfi_def_cfa_offset 4
 2028 0050 BD46     		mov	sp, r7
 2029              	.LCFI104:
 2030              		.cfi_def_cfa_register 13
 2031              		@ sp needed
 2032 0052 80BC     		pop	{r7}
 2033              	.LCFI105:
 2034              		.cfi_restore 7
 2035              		.cfi_def_cfa_offset 0
 2036 0054 7047     		bx	lr
 2037              	.L95:
 2038 0056 00BF     		.align	2
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 72


 2039              	.L94:
 2040 0058 00080140 		.word	1073809408
 2041              		.cfi_endproc
 2042              	.LFE92:
 2044              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 2045              		.align	1
 2046              		.global	TIM3_IRQHandler
 2047              		.syntax unified
 2048              		.thumb
 2049              		.thumb_func
 2050              		.fpu softvfp
 2052              	TIM3_IRQHandler:
 2053              	.LFB93:
  26:Core/Inc/rutinas_de_interrupcion.h **** 
  27:Core/Inc/rutinas_de_interrupcion.h **** void TIM3_IRQHandler()
  28:Core/Inc/rutinas_de_interrupcion.h **** {
 2054              		.loc 4 28 1
 2055              		.cfi_startproc
 2056              		@ args = 0, pretend = 0, frame = 8
 2057              		@ frame_needed = 1, uses_anonymous_args = 0
 2058              		@ link register save eliminated.
 2059 0000 80B4     		push	{r7}
 2060              	.LCFI106:
 2061              		.cfi_def_cfa_offset 4
 2062              		.cfi_offset 7, -4
 2063 0002 83B0     		sub	sp, sp, #12
 2064              	.LCFI107:
 2065              		.cfi_def_cfa_offset 16
 2066 0004 00AF     		add	r7, sp, #0
 2067              	.LCFI108:
 2068              		.cfi_def_cfa_register 7
  29:Core/Inc/rutinas_de_interrupcion.h ****   uint32_t statusRegister = TIM3->SR;
 2069              		.loc 4 29 33
 2070 0006 124B     		ldr	r3, .L100
 2071              		.loc 4 29 12
 2072 0008 1B69     		ldr	r3, [r3, #16]
 2073 000a 7B60     		str	r3, [r7, #4]
  30:Core/Inc/rutinas_de_interrupcion.h ****   TIM3->SR = 0;
 2074              		.loc 4 30 7
 2075 000c 104B     		ldr	r3, .L100
 2076              		.loc 4 30 12
 2077 000e 0022     		movs	r2, #0
 2078 0010 1A61     		str	r2, [r3, #16]
  31:Core/Inc/rutinas_de_interrupcion.h **** 
  32:Core/Inc/rutinas_de_interrupcion.h ****   if(statusRegister & TIM_SR_CC1IF)
 2079              		.loc 4 32 21
 2080 0012 7B68     		ldr	r3, [r7, #4]
 2081 0014 03F00203 		and	r3, r3, #2
 2082              		.loc 4 32 5
 2083 0018 002B     		cmp	r3, #0
 2084 001a 0DD0     		beq	.L97
  33:Core/Inc/rutinas_de_interrupcion.h ****   {
  34:Core/Inc/rutinas_de_interrupcion.h ****     if(TIM3->CCR2 != 0)
 2085              		.loc 4 34 12
 2086 001c 0C4B     		ldr	r3, .L100
 2087 001e 9B6B     		ldr	r3, [r3, #56]
 2088              		.loc 4 34 7
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 73


 2089 0020 002B     		cmp	r3, #0
 2090 0022 0FD0     		beq	.L99
  35:Core/Inc/rutinas_de_interrupcion.h ****     {
  36:Core/Inc/rutinas_de_interrupcion.h ****       // Enciendo el LED verde
  37:Core/Inc/rutinas_de_interrupcion.h ****       GPIOA->ODR |= GPIO_ODR_ODR6;
 2091              		.loc 4 37 18
 2092 0024 0B4B     		ldr	r3, .L100+4
 2093 0026 DB68     		ldr	r3, [r3, #12]
 2094 0028 0A4A     		ldr	r2, .L100+4
 2095 002a 43F04003 		orr	r3, r3, #64
 2096 002e D360     		str	r3, [r2, #12]
  38:Core/Inc/rutinas_de_interrupcion.h ****       TIM3->EGR = TIM_EGR_UG;
 2097              		.loc 4 38 11
 2098 0030 074B     		ldr	r3, .L100
 2099              		.loc 4 38 17
 2100 0032 0122     		movs	r2, #1
 2101 0034 5A61     		str	r2, [r3, #20]
  39:Core/Inc/rutinas_de_interrupcion.h ****     }
  40:Core/Inc/rutinas_de_interrupcion.h ****   }
  41:Core/Inc/rutinas_de_interrupcion.h ****   else
  42:Core/Inc/rutinas_de_interrupcion.h ****     // Apago el LED verde
  43:Core/Inc/rutinas_de_interrupcion.h ****     GPIOA->ODR &= ~GPIO_ODR_ODR6;
  44:Core/Inc/rutinas_de_interrupcion.h **** }
 2102              		.loc 4 44 1
 2103 0036 05E0     		b	.L99
 2104              	.L97:
  43:Core/Inc/rutinas_de_interrupcion.h **** }
 2105              		.loc 4 43 16
 2106 0038 064B     		ldr	r3, .L100+4
 2107 003a DB68     		ldr	r3, [r3, #12]
 2108 003c 054A     		ldr	r2, .L100+4
 2109 003e 23F04003 		bic	r3, r3, #64
 2110 0042 D360     		str	r3, [r2, #12]
 2111              	.L99:
 2112              		.loc 4 44 1
 2113 0044 00BF     		nop
 2114 0046 0C37     		adds	r7, r7, #12
 2115              	.LCFI109:
 2116              		.cfi_def_cfa_offset 4
 2117 0048 BD46     		mov	sp, r7
 2118              	.LCFI110:
 2119              		.cfi_def_cfa_register 13
 2120              		@ sp needed
 2121 004a 80BC     		pop	{r7}
 2122              	.LCFI111:
 2123              		.cfi_restore 7
 2124              		.cfi_def_cfa_offset 0
 2125 004c 7047     		bx	lr
 2126              	.L101:
 2127 004e 00BF     		.align	2
 2128              	.L100:
 2129 0050 00040040 		.word	1073742848
 2130 0054 00080140 		.word	1073809408
 2131              		.cfi_endproc
 2132              	.LFE93:
 2134              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 2135              		.align	1
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 74


 2136              		.global	TIM4_IRQHandler
 2137              		.syntax unified
 2138              		.thumb
 2139              		.thumb_func
 2140              		.fpu softvfp
 2142              	TIM4_IRQHandler:
 2143              	.LFB94:
  45:Core/Inc/rutinas_de_interrupcion.h **** 
  46:Core/Inc/rutinas_de_interrupcion.h **** void TIM4_IRQHandler()
  47:Core/Inc/rutinas_de_interrupcion.h **** {
 2144              		.loc 4 47 1
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 8
 2147              		@ frame_needed = 1, uses_anonymous_args = 0
 2148              		@ link register save eliminated.
 2149 0000 80B4     		push	{r7}
 2150              	.LCFI112:
 2151              		.cfi_def_cfa_offset 4
 2152              		.cfi_offset 7, -4
 2153 0002 83B0     		sub	sp, sp, #12
 2154              	.LCFI113:
 2155              		.cfi_def_cfa_offset 16
 2156 0004 00AF     		add	r7, sp, #0
 2157              	.LCFI114:
 2158              		.cfi_def_cfa_register 7
  48:Core/Inc/rutinas_de_interrupcion.h ****   uint32_t statusRegister = TIM4->SR;
 2159              		.loc 4 48 33
 2160 0006 124B     		ldr	r3, .L106
 2161              		.loc 4 48 12
 2162 0008 1B69     		ldr	r3, [r3, #16]
 2163 000a 7B60     		str	r3, [r7, #4]
  49:Core/Inc/rutinas_de_interrupcion.h ****   TIM4->SR = 0;
 2164              		.loc 4 49 7
 2165 000c 104B     		ldr	r3, .L106
 2166              		.loc 4 49 12
 2167 000e 0022     		movs	r2, #0
 2168 0010 1A61     		str	r2, [r3, #16]
  50:Core/Inc/rutinas_de_interrupcion.h **** 
  51:Core/Inc/rutinas_de_interrupcion.h ****   if(statusRegister & TIM_SR_CC1IF)
 2169              		.loc 4 51 21
 2170 0012 7B68     		ldr	r3, [r7, #4]
 2171 0014 03F00203 		and	r3, r3, #2
 2172              		.loc 4 51 5
 2173 0018 002B     		cmp	r3, #0
 2174 001a 0DD0     		beq	.L103
  52:Core/Inc/rutinas_de_interrupcion.h ****   {
  53:Core/Inc/rutinas_de_interrupcion.h ****     if(TIM4->CCR2 != 0)
 2175              		.loc 4 53 12
 2176 001c 0C4B     		ldr	r3, .L106
 2177 001e 9B6B     		ldr	r3, [r3, #56]
 2178              		.loc 4 53 7
 2179 0020 002B     		cmp	r3, #0
 2180 0022 0FD0     		beq	.L105
  54:Core/Inc/rutinas_de_interrupcion.h ****     {
  55:Core/Inc/rutinas_de_interrupcion.h ****       // Enciendo el LED azul
  56:Core/Inc/rutinas_de_interrupcion.h ****       GPIOA->ODR |= GPIO_ODR_ODR7;
 2181              		.loc 4 56 18
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 75


 2182 0024 0B4B     		ldr	r3, .L106+4
 2183 0026 DB68     		ldr	r3, [r3, #12]
 2184 0028 0A4A     		ldr	r2, .L106+4
 2185 002a 43F08003 		orr	r3, r3, #128
 2186 002e D360     		str	r3, [r2, #12]
  57:Core/Inc/rutinas_de_interrupcion.h ****       TIM4->EGR = TIM_EGR_UG;
 2187              		.loc 4 57 11
 2188 0030 074B     		ldr	r3, .L106
 2189              		.loc 4 57 17
 2190 0032 0122     		movs	r2, #1
 2191 0034 5A61     		str	r2, [r3, #20]
  58:Core/Inc/rutinas_de_interrupcion.h ****     }
  59:Core/Inc/rutinas_de_interrupcion.h ****   }
  60:Core/Inc/rutinas_de_interrupcion.h ****   else
  61:Core/Inc/rutinas_de_interrupcion.h ****     // Apago el LED azul
  62:Core/Inc/rutinas_de_interrupcion.h ****     GPIOA->ODR &= ~GPIO_ODR_ODR7;
  63:Core/Inc/rutinas_de_interrupcion.h **** }
 2192              		.loc 4 63 1
 2193 0036 05E0     		b	.L105
 2194              	.L103:
  62:Core/Inc/rutinas_de_interrupcion.h **** }
 2195              		.loc 4 62 16
 2196 0038 064B     		ldr	r3, .L106+4
 2197 003a DB68     		ldr	r3, [r3, #12]
 2198 003c 054A     		ldr	r2, .L106+4
 2199 003e 23F08003 		bic	r3, r3, #128
 2200 0042 D360     		str	r3, [r2, #12]
 2201              	.L105:
 2202              		.loc 4 63 1
 2203 0044 00BF     		nop
 2204 0046 0C37     		adds	r7, r7, #12
 2205              	.LCFI115:
 2206              		.cfi_def_cfa_offset 4
 2207 0048 BD46     		mov	sp, r7
 2208              	.LCFI116:
 2209              		.cfi_def_cfa_register 13
 2210              		@ sp needed
 2211 004a 80BC     		pop	{r7}
 2212              	.LCFI117:
 2213              		.cfi_restore 7
 2214              		.cfi_def_cfa_offset 0
 2215 004c 7047     		bx	lr
 2216              	.L107:
 2217 004e 00BF     		.align	2
 2218              	.L106:
 2219 0050 00080040 		.word	1073743872
 2220 0054 00080140 		.word	1073809408
 2221              		.cfi_endproc
 2222              	.LFE94:
 2224              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 2225              		.align	1
 2226              		.global	TIM1_UP_IRQHandler
 2227              		.syntax unified
 2228              		.thumb
 2229              		.thumb_func
 2230              		.fpu softvfp
 2232              	TIM1_UP_IRQHandler:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 76


 2233              	.LFB95:
  64:Core/Inc/rutinas_de_interrupcion.h **** 
  65:Core/Inc/rutinas_de_interrupcion.h **** void TIM1_UP_IRQHandler()
  66:Core/Inc/rutinas_de_interrupcion.h **** {
 2234              		.loc 4 66 1
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 8
 2237              		@ frame_needed = 1, uses_anonymous_args = 0
 2238 0000 80B5     		push	{r7, lr}
 2239              	.LCFI118:
 2240              		.cfi_def_cfa_offset 8
 2241              		.cfi_offset 7, -8
 2242              		.cfi_offset 14, -4
 2243 0002 82B0     		sub	sp, sp, #8
 2244              	.LCFI119:
 2245              		.cfi_def_cfa_offset 16
 2246 0004 00AF     		add	r7, sp, #0
 2247              	.LCFI120:
 2248              		.cfi_def_cfa_register 7
  67:Core/Inc/rutinas_de_interrupcion.h ****   uint32_t odr;
  68:Core/Inc/rutinas_de_interrupcion.h ****   odr = GPIOC->ODR;
 2249              		.loc 4 68 14
 2250 0006 484B     		ldr	r3, .L126
 2251              		.loc 4 68 7
 2252 0008 DB68     		ldr	r3, [r3, #12]
 2253 000a 7B60     		str	r3, [r7, #4]
  69:Core/Inc/rutinas_de_interrupcion.h **** 
  70:Core/Inc/rutinas_de_interrupcion.h ****   if(!partyMode)
 2254              		.loc 4 70 6
 2255 000c 474B     		ldr	r3, .L126+4
 2256 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2257              		.loc 4 70 5
 2258 0010 002B     		cmp	r3, #0
 2259 0012 18D1     		bne	.L109
  71:Core/Inc/rutinas_de_interrupcion.h ****   {
  72:Core/Inc/rutinas_de_interrupcion.h ****     if(odr & GPIO_ODR_ODR13)
 2260              		.loc 4 72 12
 2261 0014 7B68     		ldr	r3, [r7, #4]
 2262 0016 03F40053 		and	r3, r3, #8192
 2263              		.loc 4 72 7
 2264 001a 002B     		cmp	r3, #0
 2265 001c 06D0     		beq	.L110
  73:Core/Inc/rutinas_de_interrupcion.h ****       GPIOC->ODR &= ~GPIO_ODR_ODR13;  // Encender el LED
 2266              		.loc 4 73 18
 2267 001e 424B     		ldr	r3, .L126
 2268 0020 DB68     		ldr	r3, [r3, #12]
 2269 0022 414A     		ldr	r2, .L126
 2270 0024 23F40053 		bic	r3, r3, #8192
 2271 0028 D360     		str	r3, [r2, #12]
 2272 002a 72E0     		b	.L111
 2273              	.L110:
  74:Core/Inc/rutinas_de_interrupcion.h ****     else
  75:Core/Inc/rutinas_de_interrupcion.h ****     {
  76:Core/Inc/rutinas_de_interrupcion.h ****       TIM1->CR1 &= ~TIM_CR1_CEN;      // Para el timer
 2274              		.loc 4 76 17
 2275 002c 404B     		ldr	r3, .L126+8
 2276 002e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 77


 2277 0030 3F4A     		ldr	r2, .L126+8
 2278 0032 23F00103 		bic	r3, r3, #1
 2279 0036 1360     		str	r3, [r2]
  77:Core/Inc/rutinas_de_interrupcion.h ****       GPIOC->ODR |= GPIO_ODR_ODR13;  // Apagar el LED
 2280              		.loc 4 77 18
 2281 0038 3B4B     		ldr	r3, .L126
 2282 003a DB68     		ldr	r3, [r3, #12]
 2283 003c 3A4A     		ldr	r2, .L126
 2284 003e 43F40053 		orr	r3, r3, #8192
 2285 0042 D360     		str	r3, [r2, #12]
 2286 0044 65E0     		b	.L111
 2287              	.L109:
 2288              	.LBB4:
  78:Core/Inc/rutinas_de_interrupcion.h ****     }
  79:Core/Inc/rutinas_de_interrupcion.h ****   }
  80:Core/Inc/rutinas_de_interrupcion.h ****   else
  81:Core/Inc/rutinas_de_interrupcion.h ****   {
  82:Core/Inc/rutinas_de_interrupcion.h ****     static uint8_t color_seleccionado = 0;
  83:Core/Inc/rutinas_de_interrupcion.h ****     if(color_seleccionado == NARANJA) encenderNaranja();
 2289              		.loc 4 83 27
 2290 0046 3B4B     		ldr	r3, .L126+12
 2291 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2292              		.loc 4 83 7
 2293 004a 002B     		cmp	r3, #0
 2294 004c 02D1     		bne	.L112
 2295              		.loc 4 83 39 discriminator 1
 2296 004e FFF7FEFF 		bl	encenderNaranja
 2297 0052 58E0     		b	.L113
 2298              	.L112:
  84:Core/Inc/rutinas_de_interrupcion.h ****     else if(color_seleccionado == AMARILLO) encenderAmarillo();
 2299              		.loc 4 84 32
 2300 0054 374B     		ldr	r3, .L126+12
 2301 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2302              		.loc 4 84 12
 2303 0058 012B     		cmp	r3, #1
 2304 005a 02D1     		bne	.L114
 2305              		.loc 4 84 45 discriminator 1
 2306 005c FFF7FEFF 		bl	encenderAmarillo
 2307 0060 51E0     		b	.L113
 2308              	.L114:
  85:Core/Inc/rutinas_de_interrupcion.h ****     else if(color_seleccionado == FLUOR) encenderFluor();
 2309              		.loc 4 85 32
 2310 0062 344B     		ldr	r3, .L126+12
 2311 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2312              		.loc 4 85 12
 2313 0066 022B     		cmp	r3, #2
 2314 0068 02D1     		bne	.L115
 2315              		.loc 4 85 42 discriminator 1
 2316 006a FFF7FEFF 		bl	encenderFluor
 2317 006e 4AE0     		b	.L113
 2318              	.L115:
  86:Core/Inc/rutinas_de_interrupcion.h ****     else if(color_seleccionado == ROSA) encenderRosa();
 2319              		.loc 4 86 32
 2320 0070 304B     		ldr	r3, .L126+12
 2321 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2322              		.loc 4 86 12
 2323 0074 032B     		cmp	r3, #3
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 78


 2324 0076 02D1     		bne	.L116
 2325              		.loc 4 86 41 discriminator 1
 2326 0078 FFF7FEFF 		bl	encenderRosa
 2327 007c 43E0     		b	.L113
 2328              	.L116:
  87:Core/Inc/rutinas_de_interrupcion.h ****     else if(color_seleccionado == ROJO) encenderRojo();
 2329              		.loc 4 87 32
 2330 007e 2D4B     		ldr	r3, .L126+12
 2331 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2332              		.loc 4 87 12
 2333 0082 042B     		cmp	r3, #4
 2334 0084 02D1     		bne	.L117
 2335              		.loc 4 87 41 discriminator 1
 2336 0086 FFF7FEFF 		bl	encenderRojo
 2337 008a 3CE0     		b	.L113
 2338              	.L117:
  88:Core/Inc/rutinas_de_interrupcion.h ****     else if(color_seleccionado == VIOLETA) encenderVioleta();
 2339              		.loc 4 88 32
 2340 008c 294B     		ldr	r3, .L126+12
 2341 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2342              		.loc 4 88 12
 2343 0090 052B     		cmp	r3, #5
 2344 0092 02D1     		bne	.L118
 2345              		.loc 4 88 44 discriminator 1
 2346 0094 FFF7FEFF 		bl	encenderVioleta
 2347 0098 35E0     		b	.L113
 2348              	.L118:
  89:Core/Inc/rutinas_de_interrupcion.h ****     else if(color_seleccionado == VERDE) encenderVerde();
 2349              		.loc 4 89 32
 2350 009a 264B     		ldr	r3, .L126+12
 2351 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2352              		.loc 4 89 12
 2353 009e 062B     		cmp	r3, #6
 2354 00a0 02D1     		bne	.L119
 2355              		.loc 4 89 42 discriminator 1
 2356 00a2 FFF7FEFF 		bl	encenderVerde
 2357 00a6 2EE0     		b	.L113
 2358              	.L119:
  90:Core/Inc/rutinas_de_interrupcion.h ****     else if(color_seleccionado == CELESTE) encenderCeleste();
 2359              		.loc 4 90 32
 2360 00a8 224B     		ldr	r3, .L126+12
 2361 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2362              		.loc 4 90 12
 2363 00ac 072B     		cmp	r3, #7
 2364 00ae 02D1     		bne	.L120
 2365              		.loc 4 90 44 discriminator 1
 2366 00b0 FFF7FEFF 		bl	encenderCeleste
 2367 00b4 27E0     		b	.L113
 2368              	.L120:
  91:Core/Inc/rutinas_de_interrupcion.h ****     else if(color_seleccionado == AZUL) encenderAzul();
 2369              		.loc 4 91 32
 2370 00b6 1F4B     		ldr	r3, .L126+12
 2371 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2372              		.loc 4 91 12
 2373 00ba 082B     		cmp	r3, #8
 2374 00bc 02D1     		bne	.L121
 2375              		.loc 4 91 41 discriminator 1
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 79


 2376 00be FFF7FEFF 		bl	encenderAzul
 2377 00c2 20E0     		b	.L113
 2378              	.L121:
  92:Core/Inc/rutinas_de_interrupcion.h ****     else if(color_seleccionado == BLANCO) encenderBlanco();
 2379              		.loc 4 92 32
 2380 00c4 1B4B     		ldr	r3, .L126+12
 2381 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2382              		.loc 4 92 12
 2383 00c8 092B     		cmp	r3, #9
 2384 00ca 02D1     		bne	.L122
 2385              		.loc 4 92 43 discriminator 1
 2386 00cc FFF7FEFF 		bl	encenderBlanco
 2387 00d0 19E0     		b	.L113
 2388              	.L122:
  93:Core/Inc/rutinas_de_interrupcion.h ****     else if(color_seleccionado == CELESTE_MAR) encenderCelesteMar();
 2389              		.loc 4 93 32
 2390 00d2 184B     		ldr	r3, .L126+12
 2391 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2392              		.loc 4 93 12
 2393 00d6 0A2B     		cmp	r3, #10
 2394 00d8 02D1     		bne	.L123
 2395              		.loc 4 93 48 discriminator 1
 2396 00da FFF7FEFF 		bl	encenderCelesteMar
 2397 00de 12E0     		b	.L113
 2398              	.L123:
  94:Core/Inc/rutinas_de_interrupcion.h ****     else if(color_seleccionado == VIOLETA_OSCURO) encenderVioletaOscuro();
 2399              		.loc 4 94 32
 2400 00e0 144B     		ldr	r3, .L126+12
 2401 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2402              		.loc 4 94 12
 2403 00e4 0B2B     		cmp	r3, #11
 2404 00e6 02D1     		bne	.L124
 2405              		.loc 4 94 51 discriminator 1
 2406 00e8 FFF7FEFF 		bl	encenderVioletaOscuro
 2407 00ec 0BE0     		b	.L113
 2408              	.L124:
  95:Core/Inc/rutinas_de_interrupcion.h ****     else if(color_seleccionado == FUCSIA) encenderFucsia();
 2409              		.loc 4 95 32
 2410 00ee 114B     		ldr	r3, .L126+12
 2411 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2412              		.loc 4 95 12
 2413 00f2 0C2B     		cmp	r3, #12
 2414 00f4 02D1     		bne	.L125
 2415              		.loc 4 95 43 discriminator 1
 2416 00f6 FFF7FEFF 		bl	encenderFucsia
 2417 00fa 04E0     		b	.L113
 2418              	.L125:
  96:Core/Inc/rutinas_de_interrupcion.h ****     else
  97:Core/Inc/rutinas_de_interrupcion.h ****     {
  98:Core/Inc/rutinas_de_interrupcion.h ****       color_seleccionado = 0;
 2419              		.loc 4 98 26
 2420 00fc 0D4B     		ldr	r3, .L126+12
 2421 00fe 0022     		movs	r2, #0
 2422 0100 1A70     		strb	r2, [r3]
  99:Core/Inc/rutinas_de_interrupcion.h ****       encenderNaranja();
 2423              		.loc 4 99 7
 2424 0102 FFF7FEFF 		bl	encenderNaranja
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 80


 2425              	.L113:
 100:Core/Inc/rutinas_de_interrupcion.h ****     }
 101:Core/Inc/rutinas_de_interrupcion.h ****     color_seleccionado++;
 2426              		.loc 4 101 23
 2427 0106 0B4B     		ldr	r3, .L126+12
 2428 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2429 010a 0133     		adds	r3, r3, #1
 2430 010c DAB2     		uxtb	r2, r3
 2431 010e 094B     		ldr	r3, .L126+12
 2432 0110 1A70     		strb	r2, [r3]
 2433              	.L111:
 2434              	.LBE4:
 102:Core/Inc/rutinas_de_interrupcion.h ****   }
 103:Core/Inc/rutinas_de_interrupcion.h **** 
 104:Core/Inc/rutinas_de_interrupcion.h ****   TIM1->EGR = TIM_EGR_UG;
 2435              		.loc 4 104 7
 2436 0112 074B     		ldr	r3, .L126+8
 2437              		.loc 4 104 13
 2438 0114 0122     		movs	r2, #1
 2439 0116 5A61     		str	r2, [r3, #20]
 105:Core/Inc/rutinas_de_interrupcion.h ****   TIM1->SR = 0;
 2440              		.loc 4 105 7
 2441 0118 054B     		ldr	r3, .L126+8
 2442              		.loc 4 105 12
 2443 011a 0022     		movs	r2, #0
 2444 011c 1A61     		str	r2, [r3, #16]
 106:Core/Inc/rutinas_de_interrupcion.h **** }
 2445              		.loc 4 106 1
 2446 011e 00BF     		nop
 2447 0120 0837     		adds	r7, r7, #8
 2448              	.LCFI121:
 2449              		.cfi_def_cfa_offset 8
 2450 0122 BD46     		mov	sp, r7
 2451              	.LCFI122:
 2452              		.cfi_def_cfa_register 13
 2453              		@ sp needed
 2454 0124 80BD     		pop	{r7, pc}
 2455              	.L127:
 2456 0126 00BF     		.align	2
 2457              	.L126:
 2458 0128 00100140 		.word	1073811456
 2459 012c 00000000 		.word	partyMode
 2460 0130 002C0140 		.word	1073818624
 2461 0134 00000000 		.word	color_seleccionado.0
 2462              		.cfi_endproc
 2463              	.LFE95:
 2465              		.section	.rodata
 2466              		.align	2
 2467              	.LC0:
 2468 0000 70617274 		.ascii	"party\015\012\000"
 2468      790D0A00 
 2469              		.align	2
 2470              	.LC1:
 2471 0008 6F66660D 		.ascii	"off\015\012\000"
 2471      0A00
 2472 000e 0000     		.align	2
 2473              	.LC2:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 81


 2474 0010 720D0A00 		.ascii	"r\015\012\000"
 2475              		.align	2
 2476              	.LC3:
 2477 0014 670D0A00 		.ascii	"g\015\012\000"
 2478              		.align	2
 2479              	.LC4:
 2480 0018 620D0A00 		.ascii	"b\015\012\000"
 2481              		.align	2
 2482              	.LC5:
 2483 001c 6F72616E 		.ascii	"orange\015\012\000"
 2483      67650D0A 
 2483      00
 2484 0025 000000   		.align	2
 2485              	.LC6:
 2486 0028 79656C6C 		.ascii	"yellow\015\012\000"
 2486      6F770D0A 
 2486      00
 2487 0031 000000   		.align	2
 2488              	.LC7:
 2489 0034 666C756F 		.ascii	"fluor\015\012\000"
 2489      720D0A00 
 2490              		.align	2
 2491              	.LC8:
 2492 003c 70696E6B 		.ascii	"pink\015\012\000"
 2492      0D0A00
 2493 0043 00       		.align	2
 2494              	.LC9:
 2495 0044 66756368 		.ascii	"fuchsia\015\012\000"
 2495      7369610D 
 2495      0A00
 2496 004e 0000     		.align	2
 2497              	.LC10:
 2498 0050 70757270 		.ascii	"purple\015\012\000"
 2498      6C650D0A 
 2498      00
 2499 0059 000000   		.align	2
 2500              	.LC11:
 2501 005c 76696F6C 		.ascii	"violet\015\012\000"
 2501      65740D0A 
 2501      00
 2502 0065 000000   		.align	2
 2503              	.LC12:
 2504 0068 6461726B 		.ascii	"dark purple\015\012\000"
 2504      20707572 
 2504      706C650D 
 2504      0A00
 2505 0076 0000     		.align	2
 2506              	.LC13:
 2507 0078 6379616E 		.ascii	"cyan\015\012\000"
 2507      0D0A00
 2508 007f 00       		.align	2
 2509              	.LC14:
 2510 0080 73656120 		.ascii	"sea cyan\015\012\000"
 2510      6379616E 
 2510      0D0A00
 2511 008b 00       		.align	2
 2512              	.LC15:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 82


 2513 008c 7265640D 		.ascii	"red\015\012\000"
 2513      0A00
 2514 0092 0000     		.align	2
 2515              	.LC16:
 2516 0094 67726565 		.ascii	"green\015\012\000"
 2516      6E0D0A00 
 2517              		.align	2
 2518              	.LC17:
 2519 009c 626C7565 		.ascii	"blue\015\012\000"
 2519      0D0A00
 2520 00a3 00       		.align	2
 2521              	.LC18:
 2522 00a4 77686974 		.ascii	"white\015\012\000"
 2522      650D0A00 
 2523              		.section	.text.USART1_IRQHandler,"ax",%progbits
 2524              		.align	1
 2525              		.global	USART1_IRQHandler
 2526              		.syntax unified
 2527              		.thumb
 2528              		.thumb_func
 2529              		.fpu softvfp
 2531              	USART1_IRQHandler:
 2532              	.LFB96:
 107:Core/Inc/rutinas_de_interrupcion.h **** 
 108:Core/Inc/rutinas_de_interrupcion.h **** void USART1_IRQHandler()
 109:Core/Inc/rutinas_de_interrupcion.h **** {
 2533              		.loc 4 109 1
 2534              		.cfi_startproc
 2535              		@ args = 0, pretend = 0, frame = 16
 2536              		@ frame_needed = 1, uses_anonymous_args = 0
 2537 0000 80B5     		push	{r7, lr}
 2538              	.LCFI123:
 2539              		.cfi_def_cfa_offset 8
 2540              		.cfi_offset 7, -8
 2541              		.cfi_offset 14, -4
 2542 0002 84B0     		sub	sp, sp, #16
 2543              	.LCFI124:
 2544              		.cfi_def_cfa_offset 24
 2545 0004 00AF     		add	r7, sp, #0
 2546              	.LCFI125:
 2547              		.cfi_def_cfa_register 7
 110:Core/Inc/rutinas_de_interrupcion.h ****   uint32_t estado = USART1->SR;
 2548              		.loc 4 110 27
 2549 0006 9E4B     		ldr	r3, .L162
 2550              		.loc 4 110 12
 2551 0008 1B68     		ldr	r3, [r3]
 2552 000a BB60     		str	r3, [r7, #8]
 111:Core/Inc/rutinas_de_interrupcion.h ****   
 112:Core/Inc/rutinas_de_interrupcion.h ****   if(estado & USART_SR_FE)
 2553              		.loc 4 112 13
 2554 000c BB68     		ldr	r3, [r7, #8]
 2555 000e 03F00203 		and	r3, r3, #2
 2556              		.loc 4 112 5
 2557 0012 002B     		cmp	r3, #0
 2558 0014 09D0     		beq	.L129
 113:Core/Inc/rutinas_de_interrupcion.h ****   {
 114:Core/Inc/rutinas_de_interrupcion.h ****     msParpadeoLedPlaca(50);
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 83


 2559              		.loc 4 114 5
 2560 0016 3220     		movs	r0, #50
 2561 0018 FFF7FEFF 		bl	msParpadeoLedPlaca
 115:Core/Inc/rutinas_de_interrupcion.h ****     parpadearLedPlacaVeces(4);
 2562              		.loc 4 115 5
 2563 001c 4FF00400 		mov	r0, #4
 2564 0020 4FF00001 		mov	r1, #0
 2565 0024 FFF7FEFF 		bl	parpadearLedPlacaVeces
 2566 0028 18E0     		b	.L130
 2567              	.L129:
 116:Core/Inc/rutinas_de_interrupcion.h ****   }
 117:Core/Inc/rutinas_de_interrupcion.h ****   else if(estado & USART_SR_PE)
 2568              		.loc 4 117 18
 2569 002a BB68     		ldr	r3, [r7, #8]
 2570 002c 03F00103 		and	r3, r3, #1
 2571              		.loc 4 117 10
 2572 0030 002B     		cmp	r3, #0
 2573 0032 09D0     		beq	.L131
 118:Core/Inc/rutinas_de_interrupcion.h ****   {
 119:Core/Inc/rutinas_de_interrupcion.h ****     msParpadeoLedPlaca(150);
 2574              		.loc 4 119 5
 2575 0034 9620     		movs	r0, #150
 2576 0036 FFF7FEFF 		bl	msParpadeoLedPlaca
 120:Core/Inc/rutinas_de_interrupcion.h ****     parpadearLedPlacaVeces(3);
 2577              		.loc 4 120 5
 2578 003a 4FF00300 		mov	r0, #3
 2579 003e 4FF00001 		mov	r1, #0
 2580 0042 FFF7FEFF 		bl	parpadearLedPlacaVeces
 2581 0046 09E0     		b	.L130
 2582              	.L131:
 121:Core/Inc/rutinas_de_interrupcion.h ****   }
 122:Core/Inc/rutinas_de_interrupcion.h ****   else if(estado & USART_SR_NE)
 2583              		.loc 4 122 18
 2584 0048 BB68     		ldr	r3, [r7, #8]
 2585 004a 03F00403 		and	r3, r3, #4
 2586              		.loc 4 122 10
 2587 004e 002B     		cmp	r3, #0
 2588 0050 04D0     		beq	.L130
 123:Core/Inc/rutinas_de_interrupcion.h ****   {
 124:Core/Inc/rutinas_de_interrupcion.h ****     msParpadeoLedPlaca(250);
 2589              		.loc 4 124 5
 2590 0052 FA20     		movs	r0, #250
 2591 0054 FFF7FEFF 		bl	msParpadeoLedPlaca
 125:Core/Inc/rutinas_de_interrupcion.h ****     parpadearLedPlaca();
 2592              		.loc 4 125 5
 2593 0058 FFF7FEFF 		bl	parpadearLedPlaca
 2594              	.L130:
 126:Core/Inc/rutinas_de_interrupcion.h ****   }
 127:Core/Inc/rutinas_de_interrupcion.h **** 
 128:Core/Inc/rutinas_de_interrupcion.h ****   uint8_t dato = USART1->DR;
 2595              		.loc 4 128 24
 2596 005c 884B     		ldr	r3, .L162
 2597 005e 5B68     		ldr	r3, [r3, #4]
 2598              		.loc 4 128 11
 2599 0060 FB71     		strb	r3, [r7, #7]
 129:Core/Inc/rutinas_de_interrupcion.h **** 
 130:Core/Inc/rutinas_de_interrupcion.h ****   if(dato == 0xFE)
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 84


 2600              		.loc 4 130 5
 2601 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2602 0064 FE2B     		cmp	r3, #254
 2603 0066 0AD1     		bne	.L132
 131:Core/Inc/rutinas_de_interrupcion.h ****   {
 132:Core/Inc/rutinas_de_interrupcion.h ****     USART1->DR = 0xFF;
 2604              		.loc 4 132 11
 2605 0068 854B     		ldr	r3, .L162
 2606              		.loc 4 132 16
 2607 006a FF22     		movs	r2, #255
 2608 006c 5A60     		str	r2, [r3, #4]
 133:Core/Inc/rutinas_de_interrupcion.h ****     while(!(USART1->SR & USART_SR_TC));
 2609              		.loc 4 133 10
 2610 006e 00BF     		nop
 2611              	.L133:
 2612              		.loc 4 133 19 discriminator 1
 2613 0070 834B     		ldr	r3, .L162
 2614 0072 1B68     		ldr	r3, [r3]
 2615              		.loc 4 133 24 discriminator 1
 2616 0074 03F04003 		and	r3, r3, #64
 2617              		.loc 4 133 10 discriminator 1
 2618 0078 002B     		cmp	r3, #0
 2619 007a F9D0     		beq	.L133
 134:Core/Inc/rutinas_de_interrupcion.h ****     return;
 2620              		.loc 4 134 5
 2621 007c B3E1     		b	.L128
 2622              	.L132:
 135:Core/Inc/rutinas_de_interrupcion.h ****   }
 136:Core/Inc/rutinas_de_interrupcion.h ****   
 137:Core/Inc/rutinas_de_interrupcion.h ****   if(esNumero(dato))
 2623              		.loc 4 137 6
 2624 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2625 0080 1846     		mov	r0, r3
 2626 0082 FFF7FEFF 		bl	esNumero
 2627 0086 0346     		mov	r3, r0
 2628              		.loc 4 137 5
 2629 0088 002B     		cmp	r3, #0
 2630 008a 1BD0     		beq	.L135
 138:Core/Inc/rutinas_de_interrupcion.h ****   {
 139:Core/Inc/rutinas_de_interrupcion.h ****     if(strlen(intensidadLed) < 5)
 2631              		.loc 4 139 8
 2632 008c 7D4B     		ldr	r3, .L162+4
 2633 008e 1B68     		ldr	r3, [r3]
 2634 0090 1846     		mov	r0, r3
 2635 0092 FFF7FEFF 		bl	strlen
 2636 0096 0346     		mov	r3, r0
 2637              		.loc 4 139 7
 2638 0098 042B     		cmp	r3, #4
 2639 009a 00F2A481 		bhi	.L128
 140:Core/Inc/rutinas_de_interrupcion.h ****     {
 141:Core/Inc/rutinas_de_interrupcion.h ****         intensidadLed[index_intensidad++] = dato;
 2640              		.loc 4 141 22
 2641 009e 794B     		ldr	r3, .L162+4
 2642 00a0 1A68     		ldr	r2, [r3]
 2643              		.loc 4 141 39
 2644 00a2 794B     		ldr	r3, .L162+8
 2645 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 85


 2646 00a6 591C     		adds	r1, r3, #1
 2647 00a8 C8B2     		uxtb	r0, r1
 2648 00aa 7749     		ldr	r1, .L162+8
 2649 00ac 0870     		strb	r0, [r1]
 2650              		.loc 4 141 22
 2651 00ae 1344     		add	r3, r3, r2
 2652              		.loc 4 141 43
 2653 00b0 FA79     		ldrb	r2, [r7, #7]
 2654 00b2 1A70     		strb	r2, [r3]
 142:Core/Inc/rutinas_de_interrupcion.h ****         intensidadLed[index_intensidad] = 0;
 2655              		.loc 4 142 22
 2656 00b4 734B     		ldr	r3, .L162+4
 2657 00b6 1B68     		ldr	r3, [r3]
 2658 00b8 734A     		ldr	r2, .L162+8
 2659 00ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2660 00bc 1344     		add	r3, r3, r2
 2661              		.loc 4 142 41
 2662 00be 0022     		movs	r2, #0
 2663 00c0 1A70     		strb	r2, [r3]
 2664 00c2 90E1     		b	.L128
 2665              	.L135:
 2666              	.LBB5:
 143:Core/Inc/rutinas_de_interrupcion.h ****     }
 144:Core/Inc/rutinas_de_interrupcion.h ****   }
 145:Core/Inc/rutinas_de_interrupcion.h ****   else
 146:Core/Inc/rutinas_de_interrupcion.h ****   {
 147:Core/Inc/rutinas_de_interrupcion.h ****     if(index_caracteres < 20)
 2667              		.loc 4 147 25
 2668 00c4 714B     		ldr	r3, .L162+12
 2669 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2670              		.loc 4 147 7
 2671 00c8 132B     		cmp	r3, #19
 2672 00ca 0AD8     		bhi	.L136
 148:Core/Inc/rutinas_de_interrupcion.h ****                   caracteres[index_caracteres++] = dato;
 2673              		.loc 4 148 29
 2674 00cc 704B     		ldr	r3, .L162+16
 2675 00ce 1A68     		ldr	r2, [r3]
 2676              		.loc 4 148 46
 2677 00d0 6E4B     		ldr	r3, .L162+12
 2678 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2679 00d4 591C     		adds	r1, r3, #1
 2680 00d6 C8B2     		uxtb	r0, r1
 2681 00d8 6C49     		ldr	r1, .L162+12
 2682 00da 0870     		strb	r0, [r1]
 2683              		.loc 4 148 29
 2684 00dc 1344     		add	r3, r3, r2
 2685              		.loc 4 148 50
 2686 00de FA79     		ldrb	r2, [r7, #7]
 2687 00e0 1A70     		strb	r2, [r3]
 2688              	.L136:
 149:Core/Inc/rutinas_de_interrupcion.h **** 
 150:Core/Inc/rutinas_de_interrupcion.h ****     uint16_t numero_intensidad = atoi(intensidadLed);
 2689              		.loc 4 150 34
 2690 00e2 684B     		ldr	r3, .L162+4
 2691 00e4 1B68     		ldr	r3, [r3]
 2692 00e6 1846     		mov	r0, r3
 2693 00e8 FFF7FEFF 		bl	atoi
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 86


 2694 00ec 0346     		mov	r3, r0
 2695              		.loc 4 150 14
 2696 00ee FB81     		strh	r3, [r7, #14]	@ movhi
 151:Core/Inc/rutinas_de_interrupcion.h ****     if(numero_intensidad >= MAXIMA_INTENSIDAD)
 2697              		.loc 4 151 7
 2698 00f0 FB89     		ldrh	r3, [r7, #14]
 2699 00f2 42F20F72 		movw	r2, #9999
 2700 00f6 9342     		cmp	r3, r2
 2701 00f8 02D9     		bls	.L137
 152:Core/Inc/rutinas_de_interrupcion.h ****         numero_intensidad = MAXIMA_INTENSIDAD - PASO;
 2702              		.loc 4 152 27
 2703 00fa 42F20E73 		movw	r3, #9998
 2704 00fe FB81     		strh	r3, [r7, #14]	@ movhi
 2705              	.L137:
 153:Core/Inc/rutinas_de_interrupcion.h **** 
 154:Core/Inc/rutinas_de_interrupcion.h ****     if(caracteres[index_caracteres - 1] == '\n')
 2706              		.loc 4 154 18
 2707 0100 634B     		ldr	r3, .L162+16
 2708 0102 1A68     		ldr	r2, [r3]
 2709 0104 614B     		ldr	r3, .L162+12
 2710 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2711 0108 013B     		subs	r3, r3, #1
 2712 010a 1344     		add	r3, r3, r2
 2713 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2714              		.loc 4 154 7
 2715 010e 0A2B     		cmp	r3, #10
 2716 0110 40F06981 		bne	.L128
 2717              	.LBB6:
 155:Core/Inc/rutinas_de_interrupcion.h ****     {
 156:Core/Inc/rutinas_de_interrupcion.h ****         // Aquí hago el equivalente a lo que hace la función tolower() a la cadena 'caracteres'
 157:Core/Inc/rutinas_de_interrupcion.h ****         for(uint8_t i = 0; i < index_caracteres; i++)
 2718              		.loc 4 157 21
 2719 0114 0023     		movs	r3, #0
 2720 0116 7B73     		strb	r3, [r7, #13]
 2721              		.loc 4 157 9
 2722 0118 1CE0     		b	.L138
 2723              	.L140:
 158:Core/Inc/rutinas_de_interrupcion.h ****         {
 159:Core/Inc/rutinas_de_interrupcion.h ****             if(caracteres[i] >= 'A' && caracteres[i] <= 'Z')
 2724              		.loc 4 159 26
 2725 011a 5D4B     		ldr	r3, .L162+16
 2726 011c 1A68     		ldr	r2, [r3]
 2727 011e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2728 0120 1344     		add	r3, r3, r2
 2729 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2730              		.loc 4 159 15
 2731 0124 402B     		cmp	r3, #64
 2732 0126 12D9     		bls	.L139
 2733              		.loc 4 159 50 discriminator 1
 2734 0128 594B     		ldr	r3, .L162+16
 2735 012a 1A68     		ldr	r2, [r3]
 2736 012c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2737 012e 1344     		add	r3, r3, r2
 2738 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2739              		.loc 4 159 37 discriminator 1
 2740 0132 5A2B     		cmp	r3, #90
 2741 0134 0BD8     		bhi	.L139
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 87


 160:Core/Inc/rutinas_de_interrupcion.h ****                 caracteres[i] += 0x20;
 2742              		.loc 4 160 31
 2743 0136 564B     		ldr	r3, .L162+16
 2744 0138 1A68     		ldr	r2, [r3]
 2745 013a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2746 013c 1344     		add	r3, r3, r2
 2747 013e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2748 0140 534B     		ldr	r3, .L162+16
 2749 0142 1968     		ldr	r1, [r3]
 2750 0144 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2751 0146 0B44     		add	r3, r3, r1
 2752 0148 2032     		adds	r2, r2, #32
 2753 014a D2B2     		uxtb	r2, r2
 2754 014c 1A70     		strb	r2, [r3]
 2755              	.L139:
 157:Core/Inc/rutinas_de_interrupcion.h ****         {
 2756              		.loc 4 157 51 discriminator 2
 2757 014e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2758 0150 0133     		adds	r3, r3, #1
 2759 0152 7B73     		strb	r3, [r7, #13]
 2760              	.L138:
 157:Core/Inc/rutinas_de_interrupcion.h ****         {
 2761              		.loc 4 157 30 discriminator 1
 2762 0154 4D4B     		ldr	r3, .L162+12
 2763 0156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 157:Core/Inc/rutinas_de_interrupcion.h ****         {
 2764              		.loc 4 157 9 discriminator 1
 2765 0158 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 2766 015a 9A42     		cmp	r2, r3
 2767 015c DDD3     		bcc	.L140
 2768              	.LBE6:
 161:Core/Inc/rutinas_de_interrupcion.h ****         }
 162:Core/Inc/rutinas_de_interrupcion.h **** 
 163:Core/Inc/rutinas_de_interrupcion.h ****         memset(intensidadLed, 0, 6);
 2769              		.loc 4 163 9
 2770 015e 494B     		ldr	r3, .L162+4
 2771 0160 1B68     		ldr	r3, [r3]
 2772 0162 0622     		movs	r2, #6
 2773 0164 0021     		movs	r1, #0
 2774 0166 1846     		mov	r0, r3
 2775 0168 FFF7FEFF 		bl	memset
 164:Core/Inc/rutinas_de_interrupcion.h ****         index_intensidad = 0;
 2776              		.loc 4 164 26
 2777 016c 464B     		ldr	r3, .L162+8
 2778 016e 0022     		movs	r2, #0
 2779 0170 1A70     		strb	r2, [r3]
 165:Core/Inc/rutinas_de_interrupcion.h **** 
 166:Core/Inc/rutinas_de_interrupcion.h ****         if(strcmp(caracteres, "party\r\n"))
 2780              		.loc 4 166 12
 2781 0172 474B     		ldr	r3, .L162+16
 2782 0174 1B68     		ldr	r3, [r3]
 2783 0176 4749     		ldr	r1, .L162+20
 2784 0178 1846     		mov	r0, r3
 2785 017a FFF7FEFF 		bl	strcmp
 2786 017e 0346     		mov	r3, r0
 2787              		.loc 4 166 11
 2788 0180 002B     		cmp	r3, #0
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 88


 2789 0182 02D0     		beq	.L141
 167:Core/Inc/rutinas_de_interrupcion.h ****           partyMode = 0;
 2790              		.loc 4 167 21
 2791 0184 444B     		ldr	r3, .L162+24
 2792 0186 0022     		movs	r2, #0
 2793 0188 1A70     		strb	r2, [r3]
 2794              	.L141:
 168:Core/Inc/rutinas_de_interrupcion.h **** 
 169:Core/Inc/rutinas_de_interrupcion.h ****         if(!strcmp(caracteres, "off\r\n"))
 2795              		.loc 4 169 13
 2796 018a 414B     		ldr	r3, .L162+16
 2797 018c 1B68     		ldr	r3, [r3]
 2798 018e 4349     		ldr	r1, .L162+28
 2799 0190 1846     		mov	r0, r3
 2800 0192 FFF7FEFF 		bl	strcmp
 2801 0196 0346     		mov	r3, r0
 2802              		.loc 4 169 11
 2803 0198 002B     		cmp	r3, #0
 2804 019a 0AD1     		bne	.L142
 170:Core/Inc/rutinas_de_interrupcion.h ****         {
 171:Core/Inc/rutinas_de_interrupcion.h ****           TIM2->CCR2 = 0;
 2805              		.loc 4 171 15
 2806 019c 4FF08043 		mov	r3, #1073741824
 2807              		.loc 4 171 22
 2808 01a0 0022     		movs	r2, #0
 2809 01a2 9A63     		str	r2, [r3, #56]
 172:Core/Inc/rutinas_de_interrupcion.h ****           TIM3->CCR2 = 0;
 2810              		.loc 4 172 15
 2811 01a4 3E4B     		ldr	r3, .L162+32
 2812              		.loc 4 172 22
 2813 01a6 0022     		movs	r2, #0
 2814 01a8 9A63     		str	r2, [r3, #56]
 173:Core/Inc/rutinas_de_interrupcion.h ****           TIM4->CCR2 = 0;
 2815              		.loc 4 173 15
 2816 01aa 3E4B     		ldr	r3, .L162+36
 2817              		.loc 4 173 22
 2818 01ac 0022     		movs	r2, #0
 2819 01ae 9A63     		str	r2, [r3, #56]
 2820 01b0 0FE1     		b	.L143
 2821              	.L142:
 174:Core/Inc/rutinas_de_interrupcion.h ****         }
 175:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "r\r\n"))
 2822              		.loc 4 175 18
 2823 01b2 374B     		ldr	r3, .L162+16
 2824 01b4 1B68     		ldr	r3, [r3]
 2825 01b6 3C49     		ldr	r1, .L162+40
 2826 01b8 1846     		mov	r0, r3
 2827 01ba FFF7FEFF 		bl	strcmp
 2828 01be 0346     		mov	r3, r0
 2829              		.loc 4 175 16
 2830 01c0 002B     		cmp	r3, #0
 2831 01c2 05D1     		bne	.L144
 176:Core/Inc/rutinas_de_interrupcion.h ****             TIM2->CCR2 = numero_intensidad * PASO;
 2832              		.loc 4 176 44
 2833 01c4 FB89     		ldrh	r3, [r7, #14]
 2834 01c6 5A00     		lsls	r2, r3, #1
 2835              		.loc 4 176 17
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 89


 2836 01c8 4FF08043 		mov	r3, #1073741824
 2837              		.loc 4 176 24
 2838 01cc 9A63     		str	r2, [r3, #56]
 2839 01ce 00E1     		b	.L143
 2840              	.L144:
 177:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "g\r\n"))
 2841              		.loc 4 177 18
 2842 01d0 2F4B     		ldr	r3, .L162+16
 2843 01d2 1B68     		ldr	r3, [r3]
 2844 01d4 3549     		ldr	r1, .L162+44
 2845 01d6 1846     		mov	r0, r3
 2846 01d8 FFF7FEFF 		bl	strcmp
 2847 01dc 0346     		mov	r3, r0
 2848              		.loc 4 177 16
 2849 01de 002B     		cmp	r3, #0
 2850 01e0 04D1     		bne	.L145
 178:Core/Inc/rutinas_de_interrupcion.h ****             TIM3->CCR2 = numero_intensidad * PASO;
 2851              		.loc 4 178 44
 2852 01e2 FB89     		ldrh	r3, [r7, #14]
 2853 01e4 5A00     		lsls	r2, r3, #1
 2854              		.loc 4 178 17
 2855 01e6 2E4B     		ldr	r3, .L162+32
 2856              		.loc 4 178 24
 2857 01e8 9A63     		str	r2, [r3, #56]
 2858 01ea F2E0     		b	.L143
 2859              	.L145:
 179:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "b\r\n"))
 2860              		.loc 4 179 18
 2861 01ec 284B     		ldr	r3, .L162+16
 2862 01ee 1B68     		ldr	r3, [r3]
 2863 01f0 2F49     		ldr	r1, .L162+48
 2864 01f2 1846     		mov	r0, r3
 2865 01f4 FFF7FEFF 		bl	strcmp
 2866 01f8 0346     		mov	r3, r0
 2867              		.loc 4 179 16
 2868 01fa 002B     		cmp	r3, #0
 2869 01fc 04D1     		bne	.L146
 180:Core/Inc/rutinas_de_interrupcion.h ****             TIM4->CCR2 = numero_intensidad * PASO;
 2870              		.loc 4 180 44
 2871 01fe FB89     		ldrh	r3, [r7, #14]
 2872 0200 5A00     		lsls	r2, r3, #1
 2873              		.loc 4 180 17
 2874 0202 284B     		ldr	r3, .L162+36
 2875              		.loc 4 180 24
 2876 0204 9A63     		str	r2, [r3, #56]
 2877 0206 E4E0     		b	.L143
 2878              	.L146:
 181:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "orange\r\n")) encenderNaranja();
 2879              		.loc 4 181 18
 2880 0208 214B     		ldr	r3, .L162+16
 2881 020a 1B68     		ldr	r3, [r3]
 2882 020c 2949     		ldr	r1, .L162+52
 2883 020e 1846     		mov	r0, r3
 2884 0210 FFF7FEFF 		bl	strcmp
 2885 0214 0346     		mov	r3, r0
 2886              		.loc 4 181 16
 2887 0216 002B     		cmp	r3, #0
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 90


 2888 0218 02D1     		bne	.L147
 2889              		.loc 4 181 52 discriminator 1
 2890 021a FFF7FEFF 		bl	encenderNaranja
 2891 021e D8E0     		b	.L143
 2892              	.L147:
 182:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "yellow\r\n")) encenderAmarillo();
 2893              		.loc 4 182 18
 2894 0220 1B4B     		ldr	r3, .L162+16
 2895 0222 1B68     		ldr	r3, [r3]
 2896 0224 2449     		ldr	r1, .L162+56
 2897 0226 1846     		mov	r0, r3
 2898 0228 FFF7FEFF 		bl	strcmp
 2899 022c 0346     		mov	r3, r0
 2900              		.loc 4 182 16
 2901 022e 002B     		cmp	r3, #0
 2902 0230 02D1     		bne	.L148
 2903              		.loc 4 182 52 discriminator 1
 2904 0232 FFF7FEFF 		bl	encenderAmarillo
 2905 0236 CCE0     		b	.L143
 2906              	.L148:
 183:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "fluor\r\n")) encenderFluor();
 2907              		.loc 4 183 18
 2908 0238 154B     		ldr	r3, .L162+16
 2909 023a 1B68     		ldr	r3, [r3]
 2910 023c 1F49     		ldr	r1, .L162+60
 2911 023e 1846     		mov	r0, r3
 2912 0240 FFF7FEFF 		bl	strcmp
 2913 0244 0346     		mov	r3, r0
 2914              		.loc 4 183 16
 2915 0246 002B     		cmp	r3, #0
 2916 0248 02D1     		bne	.L149
 2917              		.loc 4 183 51 discriminator 1
 2918 024a FFF7FEFF 		bl	encenderFluor
 2919 024e C0E0     		b	.L143
 2920              	.L149:
 184:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "pink\r\n")) encenderRosa();
 2921              		.loc 4 184 18
 2922 0250 0F4B     		ldr	r3, .L162+16
 2923 0252 1B68     		ldr	r3, [r3]
 2924 0254 1A49     		ldr	r1, .L162+64
 2925 0256 1846     		mov	r0, r3
 2926 0258 FFF7FEFF 		bl	strcmp
 2927 025c 0346     		mov	r3, r0
 2928              		.loc 4 184 16
 2929 025e 002B     		cmp	r3, #0
 2930 0260 02D1     		bne	.L150
 2931              		.loc 4 184 50 discriminator 1
 2932 0262 FFF7FEFF 		bl	encenderRosa
 2933 0266 B4E0     		b	.L143
 2934              	.L150:
 185:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "fuchsia\r\n")) encenderFucsia();
 2935              		.loc 4 185 18
 2936 0268 094B     		ldr	r3, .L162+16
 2937 026a 1B68     		ldr	r3, [r3]
 2938 026c 1549     		ldr	r1, .L162+68
 2939 026e 1846     		mov	r0, r3
 2940 0270 FFF7FEFF 		bl	strcmp
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 91


 2941 0274 0346     		mov	r3, r0
 2942              		.loc 4 185 16
 2943 0276 002B     		cmp	r3, #0
 2944 0278 26D1     		bne	.L151
 2945              		.loc 4 185 53 discriminator 1
 2946 027a FFF7FEFF 		bl	encenderFucsia
 2947 027e A8E0     		b	.L143
 2948              	.L163:
 2949              		.align	2
 2950              	.L162:
 2951 0280 00380140 		.word	1073821696
 2952 0284 00000000 		.word	intensidadLed
 2953 0288 00000000 		.word	index_intensidad
 2954 028c 00000000 		.word	index_caracteres
 2955 0290 00000000 		.word	caracteres
 2956 0294 00000000 		.word	.LC0
 2957 0298 00000000 		.word	partyMode
 2958 029c 08000000 		.word	.LC1
 2959 02a0 00040040 		.word	1073742848
 2960 02a4 00080040 		.word	1073743872
 2961 02a8 10000000 		.word	.LC2
 2962 02ac 14000000 		.word	.LC3
 2963 02b0 18000000 		.word	.LC4
 2964 02b4 1C000000 		.word	.LC5
 2965 02b8 28000000 		.word	.LC6
 2966 02bc 34000000 		.word	.LC7
 2967 02c0 3C000000 		.word	.LC8
 2968 02c4 44000000 		.word	.LC9
 2969              	.L151:
 186:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "purple\r\n") || !strcmp(caracteres, "violet\r\n")) encenderVio
 2970              		.loc 4 186 18
 2971 02c8 484B     		ldr	r3, .L164
 2972 02ca 1B68     		ldr	r3, [r3]
 2973 02cc 4849     		ldr	r1, .L164+4
 2974 02ce 1846     		mov	r0, r3
 2975 02d0 FFF7FEFF 		bl	strcmp
 2976 02d4 0346     		mov	r3, r0
 2977              		.loc 4 186 16
 2978 02d6 002B     		cmp	r3, #0
 2979 02d8 08D0     		beq	.L152
 2980              		.loc 4 186 55 discriminator 2
 2981 02da 444B     		ldr	r3, .L164
 2982 02dc 1B68     		ldr	r3, [r3]
 2983 02de 4549     		ldr	r1, .L164+8
 2984 02e0 1846     		mov	r0, r3
 2985 02e2 FFF7FEFF 		bl	strcmp
 2986 02e6 0346     		mov	r3, r0
 2987              		.loc 4 186 51 discriminator 2
 2988 02e8 002B     		cmp	r3, #0
 2989 02ea 02D1     		bne	.L153
 2990              	.L152:
 2991              		.loc 4 186 89 discriminator 3
 2992 02ec FFF7FEFF 		bl	encenderVioleta
 2993 02f0 6FE0     		b	.L143
 2994              	.L153:
 187:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "dark purple\r\n")) encenderVioletaOscuro();
 2995              		.loc 4 187 18
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 92


 2996 02f2 3E4B     		ldr	r3, .L164
 2997 02f4 1B68     		ldr	r3, [r3]
 2998 02f6 4049     		ldr	r1, .L164+12
 2999 02f8 1846     		mov	r0, r3
 3000 02fa FFF7FEFF 		bl	strcmp
 3001 02fe 0346     		mov	r3, r0
 3002              		.loc 4 187 16
 3003 0300 002B     		cmp	r3, #0
 3004 0302 02D1     		bne	.L154
 3005              		.loc 4 187 57 discriminator 1
 3006 0304 FFF7FEFF 		bl	encenderVioletaOscuro
 3007 0308 63E0     		b	.L143
 3008              	.L154:
 188:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "cyan\r\n")) encenderCeleste();
 3009              		.loc 4 188 18
 3010 030a 384B     		ldr	r3, .L164
 3011 030c 1B68     		ldr	r3, [r3]
 3012 030e 3B49     		ldr	r1, .L164+16
 3013 0310 1846     		mov	r0, r3
 3014 0312 FFF7FEFF 		bl	strcmp
 3015 0316 0346     		mov	r3, r0
 3016              		.loc 4 188 16
 3017 0318 002B     		cmp	r3, #0
 3018 031a 02D1     		bne	.L155
 3019              		.loc 4 188 50 discriminator 1
 3020 031c FFF7FEFF 		bl	encenderCeleste
 3021 0320 57E0     		b	.L143
 3022              	.L155:
 189:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "sea cyan\r\n")) encenderCelesteMar();
 3023              		.loc 4 189 18
 3024 0322 324B     		ldr	r3, .L164
 3025 0324 1B68     		ldr	r3, [r3]
 3026 0326 3649     		ldr	r1, .L164+20
 3027 0328 1846     		mov	r0, r3
 3028 032a FFF7FEFF 		bl	strcmp
 3029 032e 0346     		mov	r3, r0
 3030              		.loc 4 189 16
 3031 0330 002B     		cmp	r3, #0
 3032 0332 02D1     		bne	.L156
 3033              		.loc 4 189 54 discriminator 1
 3034 0334 FFF7FEFF 		bl	encenderCelesteMar
 3035 0338 4BE0     		b	.L143
 3036              	.L156:
 190:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "red\r\n")) encenderRojo();
 3037              		.loc 4 190 18
 3038 033a 2C4B     		ldr	r3, .L164
 3039 033c 1B68     		ldr	r3, [r3]
 3040 033e 3149     		ldr	r1, .L164+24
 3041 0340 1846     		mov	r0, r3
 3042 0342 FFF7FEFF 		bl	strcmp
 3043 0346 0346     		mov	r3, r0
 3044              		.loc 4 190 16
 3045 0348 002B     		cmp	r3, #0
 3046 034a 02D1     		bne	.L157
 3047              		.loc 4 190 49 discriminator 1
 3048 034c FFF7FEFF 		bl	encenderRojo
 3049 0350 3FE0     		b	.L143
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 93


 3050              	.L157:
 191:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "green\r\n")) encenderVerde();
 3051              		.loc 4 191 18
 3052 0352 264B     		ldr	r3, .L164
 3053 0354 1B68     		ldr	r3, [r3]
 3054 0356 2C49     		ldr	r1, .L164+28
 3055 0358 1846     		mov	r0, r3
 3056 035a FFF7FEFF 		bl	strcmp
 3057 035e 0346     		mov	r3, r0
 3058              		.loc 4 191 16
 3059 0360 002B     		cmp	r3, #0
 3060 0362 02D1     		bne	.L158
 3061              		.loc 4 191 51 discriminator 1
 3062 0364 FFF7FEFF 		bl	encenderVerde
 3063 0368 33E0     		b	.L143
 3064              	.L158:
 192:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "blue\r\n")) encenderAzul();
 3065              		.loc 4 192 18
 3066 036a 204B     		ldr	r3, .L164
 3067 036c 1B68     		ldr	r3, [r3]
 3068 036e 2749     		ldr	r1, .L164+32
 3069 0370 1846     		mov	r0, r3
 3070 0372 FFF7FEFF 		bl	strcmp
 3071 0376 0346     		mov	r3, r0
 3072              		.loc 4 192 16
 3073 0378 002B     		cmp	r3, #0
 3074 037a 02D1     		bne	.L159
 3075              		.loc 4 192 50 discriminator 1
 3076 037c FFF7FEFF 		bl	encenderAzul
 3077 0380 27E0     		b	.L143
 3078              	.L159:
 193:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "white\r\n")) encenderBlanco();
 3079              		.loc 4 193 18
 3080 0382 1A4B     		ldr	r3, .L164
 3081 0384 1B68     		ldr	r3, [r3]
 3082 0386 2249     		ldr	r1, .L164+36
 3083 0388 1846     		mov	r0, r3
 3084 038a FFF7FEFF 		bl	strcmp
 3085 038e 0346     		mov	r3, r0
 3086              		.loc 4 193 16
 3087 0390 002B     		cmp	r3, #0
 3088 0392 02D1     		bne	.L160
 3089              		.loc 4 193 51 discriminator 1
 3090 0394 FFF7FEFF 		bl	encenderBlanco
 3091 0398 1BE0     		b	.L143
 3092              	.L160:
 194:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "party\r\n"))
 3093              		.loc 4 194 18
 3094 039a 144B     		ldr	r3, .L164
 3095 039c 1B68     		ldr	r3, [r3]
 3096 039e 1D49     		ldr	r1, .L164+40
 3097 03a0 1846     		mov	r0, r3
 3098 03a2 FFF7FEFF 		bl	strcmp
 3099 03a6 0346     		mov	r3, r0
 3100              		.loc 4 194 16
 3101 03a8 002B     		cmp	r3, #0
 3102 03aa 09D1     		bne	.L161
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 94


 195:Core/Inc/rutinas_de_interrupcion.h ****         {
 196:Core/Inc/rutinas_de_interrupcion.h ****             msParpadeoLedPlaca(500);
 3103              		.loc 4 196 13
 3104 03ac 4FF4FA70 		mov	r0, #500
 3105 03b0 FFF7FEFF 		bl	msParpadeoLedPlaca
 197:Core/Inc/rutinas_de_interrupcion.h ****             partyMode = 1;
 3106              		.loc 4 197 23
 3107 03b4 184B     		ldr	r3, .L164+44
 3108 03b6 0122     		movs	r2, #1
 3109 03b8 1A70     		strb	r2, [r3]
 198:Core/Inc/rutinas_de_interrupcion.h ****             parpadearLedPlaca();
 3110              		.loc 4 198 13
 3111 03ba FFF7FEFF 		bl	parpadearLedPlaca
 3112 03be 08E0     		b	.L143
 3113              	.L161:
 199:Core/Inc/rutinas_de_interrupcion.h ****         }
 200:Core/Inc/rutinas_de_interrupcion.h ****         else
 201:Core/Inc/rutinas_de_interrupcion.h ****         {
 202:Core/Inc/rutinas_de_interrupcion.h ****           msParpadeoLedPlaca(100);
 3114              		.loc 4 202 11
 3115 03c0 6420     		movs	r0, #100
 3116 03c2 FFF7FEFF 		bl	msParpadeoLedPlaca
 203:Core/Inc/rutinas_de_interrupcion.h ****           parpadearLedPlacaVeces(2);
 3117              		.loc 4 203 11
 3118 03c6 4FF00200 		mov	r0, #2
 3119 03ca 4FF00001 		mov	r1, #0
 3120 03ce FFF7FEFF 		bl	parpadearLedPlacaVeces
 3121              	.L143:
 204:Core/Inc/rutinas_de_interrupcion.h ****         }
 205:Core/Inc/rutinas_de_interrupcion.h **** 
 206:Core/Inc/rutinas_de_interrupcion.h ****         memset(caracteres, 0, 20);
 3122              		.loc 4 206 9
 3123 03d2 064B     		ldr	r3, .L164
 3124 03d4 1B68     		ldr	r3, [r3]
 3125 03d6 1422     		movs	r2, #20
 3126 03d8 0021     		movs	r1, #0
 3127 03da 1846     		mov	r0, r3
 3128 03dc FFF7FEFF 		bl	memset
 207:Core/Inc/rutinas_de_interrupcion.h ****         index_caracteres = 0;
 3129              		.loc 4 207 26
 3130 03e0 0E4B     		ldr	r3, .L164+48
 3131 03e2 0022     		movs	r2, #0
 3132 03e4 1A70     		strb	r2, [r3]
 3133              	.L128:
 3134              	.LBE5:
 208:Core/Inc/rutinas_de_interrupcion.h ****     }
 209:Core/Inc/rutinas_de_interrupcion.h ****   }
 210:Core/Inc/rutinas_de_interrupcion.h **** }...
 3135              		.loc 4 210 1
 3136 03e6 1037     		adds	r7, r7, #16
 3137              	.LCFI126:
 3138              		.cfi_def_cfa_offset 8
 3139 03e8 BD46     		mov	sp, r7
 3140              	.LCFI127:
 3141              		.cfi_def_cfa_register 13
 3142              		@ sp needed
 3143 03ea 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 95


 3144              	.L165:
 3145              		.align	2
 3146              	.L164:
 3147 03ec 00000000 		.word	caracteres
 3148 03f0 50000000 		.word	.LC10
 3149 03f4 5C000000 		.word	.LC11
 3150 03f8 68000000 		.word	.LC12
 3151 03fc 78000000 		.word	.LC13
 3152 0400 80000000 		.word	.LC14
 3153 0404 8C000000 		.word	.LC15
 3154 0408 94000000 		.word	.LC16
 3155 040c 9C000000 		.word	.LC17
 3156 0410 A4000000 		.word	.LC18
 3157 0414 00000000 		.word	.LC0
 3158 0418 00000000 		.word	partyMode
 3159 041c 00000000 		.word	index_caracteres
 3160              		.cfi_endproc
 3161              	.LFE96:
 3163              		.section	.text.main,"ax",%progbits
 3164              		.align	1
 3165              		.global	main
 3166              		.syntax unified
 3167              		.thumb
 3168              		.thumb_func
 3169              		.fpu softvfp
 3171              	main:
 3172              	.LFB97:
 3173              		.file 5 "Core/Src/main.c"
   1:Core/Src/main.c **** #include "configuraciones.h"
   2:Core/Src/main.c **** #include "rutinas_de_interrupcion.h"
   3:Core/Src/main.c **** #include "myLib.h"
   4:Core/Src/main.c **** #include "stdlib.h"
   5:Core/Src/main.c **** 
   6:Core/Src/main.c **** /**
   7:Core/Src/main.c ****   * @brief  The application entry point.
   8:Core/Src/main.c ****   * @retval int
   9:Core/Src/main.c ****   */
  10:Core/Src/main.c **** int main(void)
  11:Core/Src/main.c **** {
 3174              		.loc 5 11 1
 3175              		.cfi_startproc
 3176              		@ args = 0, pretend = 0, frame = 0
 3177              		@ frame_needed = 1, uses_anonymous_args = 0
 3178 0000 80B5     		push	{r7, lr}
 3179              	.LCFI128:
 3180              		.cfi_def_cfa_offset 8
 3181              		.cfi_offset 7, -8
 3182              		.cfi_offset 14, -4
 3183 0002 00AF     		add	r7, sp, #0
 3184              	.LCFI129:
 3185              		.cfi_def_cfa_register 7
  12:Core/Src/main.c ****   setTo28MHzFromHSE();
 3186              		.loc 5 12 3
 3187 0004 FFF7FEFF 		bl	setTo28MHzFromHSE
  13:Core/Src/main.c **** 
  14:Core/Src/main.c ****   intensidadLed = (char*)malloc(6);
 3188              		.loc 5 14 26
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 96


 3189 0008 0620     		movs	r0, #6
 3190 000a FFF7FEFF 		bl	malloc
 3191 000e 0346     		mov	r3, r0
 3192 0010 1A46     		mov	r2, r3
 3193              		.loc 5 14 17
 3194 0012 134B     		ldr	r3, .L168
 3195 0014 1A60     		str	r2, [r3]
  15:Core/Src/main.c ****   memset(intensidadLed, 0, 6);
 3196              		.loc 5 15 3
 3197 0016 124B     		ldr	r3, .L168
 3198 0018 1B68     		ldr	r3, [r3]
 3199 001a 0622     		movs	r2, #6
 3200 001c 0021     		movs	r1, #0
 3201 001e 1846     		mov	r0, r3
 3202 0020 FFF7FEFF 		bl	memset
  16:Core/Src/main.c ****   index_intensidad = 0;
 3203              		.loc 5 16 20
 3204 0024 0F4B     		ldr	r3, .L168+4
 3205 0026 0022     		movs	r2, #0
 3206 0028 1A70     		strb	r2, [r3]
  17:Core/Src/main.c **** 
  18:Core/Src/main.c ****   caracteres = (char*)malloc(20);
 3207              		.loc 5 18 23
 3208 002a 1420     		movs	r0, #20
 3209 002c FFF7FEFF 		bl	malloc
 3210 0030 0346     		mov	r3, r0
 3211 0032 1A46     		mov	r2, r3
 3212              		.loc 5 18 14
 3213 0034 0C4B     		ldr	r3, .L168+8
 3214 0036 1A60     		str	r2, [r3]
  19:Core/Src/main.c ****   memset(caracteres, 0, 20);
 3215              		.loc 5 19 3
 3216 0038 0B4B     		ldr	r3, .L168+8
 3217 003a 1B68     		ldr	r3, [r3]
 3218 003c 1422     		movs	r2, #20
 3219 003e 0021     		movs	r1, #0
 3220 0040 1846     		mov	r0, r3
 3221 0042 FFF7FEFF 		bl	memset
  20:Core/Src/main.c ****   index_caracteres = 0;
 3222              		.loc 5 20 20
 3223 0046 094B     		ldr	r3, .L168+12
 3224 0048 0022     		movs	r2, #0
 3225 004a 1A70     		strb	r2, [r3]
  21:Core/Src/main.c ****   
  22:Core/Src/main.c ****   configurarPuertos();
 3226              		.loc 5 22 3
 3227 004c FFF7FEFF 		bl	configurarPuertos
  23:Core/Src/main.c ****   configurarTIM1();
 3228              		.loc 5 23 3
 3229 0050 FFF7FEFF 		bl	configurarTIM1
  24:Core/Src/main.c ****   configurarTimerParaLedRgb();
 3230              		.loc 5 24 3
 3231 0054 FFF7FEFF 		bl	configurarTimerParaLedRgb
  25:Core/Src/main.c ****   configurarUSART1();
 3232              		.loc 5 25 3
 3233 0058 FFF7FEFF 		bl	configurarUSART1
 3234              	.L167:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 97


  26:Core/Src/main.c ****   
  27:Core/Src/main.c ****   while(1);
 3235              		.loc 5 27 8 discriminator 1
 3236 005c FEE7     		b	.L167
 3237              	.L169:
 3238 005e 00BF     		.align	2
 3239              	.L168:
 3240 0060 00000000 		.word	intensidadLed
 3241 0064 00000000 		.word	index_intensidad
 3242 0068 00000000 		.word	caracteres
 3243 006c 00000000 		.word	index_caracteres
 3244              		.cfi_endproc
 3245              	.LFE97:
 3247              		.section	.bss.color_seleccionado.0,"aw",%nobits
 3250              	color_seleccionado.0:
 3251 0000 00       		.space	1
 3252              		.text
 3253              	.Letext0:
 3254              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 3255              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 3256              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 3257              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 98


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:16     .text.__NVIC_SetPriority:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:23     .text.__NVIC_SetPriority:00000000 __NVIC_SetPriority
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:98     .text.__NVIC_SetPriority:0000004c $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:104    .bss.intensidadLed:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:107    .bss.intensidadLed:00000000 intensidadLed
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:112    .bss.index_intensidad:00000000 index_intensidad
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:113    .bss.index_intensidad:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:115    .bss.caracteres:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:118    .bss.caracteres:00000000 caracteres
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:123    .bss.index_caracteres:00000000 index_caracteres
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:124    .bss.index_caracteres:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:128    .bss.partyMode:00000000 partyMode
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:129    .bss.partyMode:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:131    .text.transmitirCadena:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:138    .text.transmitirCadena:00000000 transmitirCadena
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:215    .text.transmitirCadena:0000004c $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:220    .text.parpadearLedPlaca:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:227    .text.parpadearLedPlaca:00000000 parpadearLedPlaca
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:266    .text.parpadearLedPlaca:00000020 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:271    .text.parpadearLedPlacaVeces:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:278    .text.parpadearLedPlacaVeces:00000000 parpadearLedPlacaVeces
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:358    .text.parpadearLedPlacaVeces:00000064 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:364    .text.msParpadeoLedPlaca:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:371    .text.msParpadeoLedPlaca:00000000 msParpadeoLedPlaca
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:417    .text.msParpadeoLedPlaca:00000020 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:422    .text.esNumero:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:429    .text.esNumero:00000000 esNumero
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:483    .text.encenderNaranja:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:490    .text.encenderNaranja:00000000 encenderNaranja
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:533    .text.encenderNaranja:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:539    .text.encenderAmarillo:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:546    .text.encenderAmarillo:00000000 encenderAmarillo
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:589    .text.encenderAmarillo:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:595    .text.encenderFluor:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:602    .text.encenderFluor:00000000 encenderFluor
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:645    .text.encenderFluor:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:651    .text.encenderRosa:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:658    .text.encenderRosa:00000000 encenderRosa
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:701    .text.encenderRosa:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:707    .text.encenderRojo:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:714    .text.encenderRojo:00000000 encenderRojo
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:757    .text.encenderRojo:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:763    .text.encenderVioleta:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:770    .text.encenderVioleta:00000000 encenderVioleta
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:813    .text.encenderVioleta:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:819    .text.encenderVerde:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:826    .text.encenderVerde:00000000 encenderVerde
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:869    .text.encenderVerde:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:875    .text.encenderCeleste:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:882    .text.encenderCeleste:00000000 encenderCeleste
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:925    .text.encenderCeleste:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:931    .text.encenderAzul:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:938    .text.encenderAzul:00000000 encenderAzul
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:981    .text.encenderAzul:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:987    .text.encenderBlanco:00000000 $t
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 99


C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:994    .text.encenderBlanco:00000000 encenderBlanco
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1037   .text.encenderBlanco:00000028 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1043   .text.encenderCelesteMar:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1050   .text.encenderCelesteMar:00000000 encenderCelesteMar
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1093   .text.encenderCelesteMar:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1099   .text.encenderVioletaOscuro:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1106   .text.encenderVioletaOscuro:00000000 encenderVioletaOscuro
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1149   .text.encenderVioletaOscuro:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1155   .text.encenderFucsia:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1162   .text.encenderFucsia:00000000 encenderFucsia
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1205   .text.encenderFucsia:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1211   .text.apagarLed:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1218   .text.apagarLed:00000000 apagarLed
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1261   .text.apagarLed:00000020 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1267   .text.setTo28MHzFromHSE:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1274   .text.setTo28MHzFromHSE:00000000 setTo28MHzFromHSE
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1417   .text.setTo28MHzFromHSE:000000e0 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1427   .text.configurarTimerParaLedRgb:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1434   .text.configurarTimerParaLedRgb:00000000 configurarTimerParaLedRgb
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1695   .text.configurarTimerParaLedRgb:000001c8 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1707   .text.configurarTIM1:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1714   .text.configurarTIM1:00000000 configurarTIM1
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1807   .text.configurarTIM1:00000070 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1816   .text.configurarUSART1:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1823   .text.configurarUSART1:00000000 configurarUSART1
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1879   .text.configurarUSART1:00000048 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1885   .text.configurarPuertos:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1892   .text.configurarPuertos:00000000 configurarPuertos
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1947   .text.configurarPuertos:0000003c $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1955   .text.TIM2_IRQHandler:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:1962   .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2040   .text.TIM2_IRQHandler:00000058 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2045   .text.TIM3_IRQHandler:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2052   .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2129   .text.TIM3_IRQHandler:00000050 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2135   .text.TIM4_IRQHandler:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2142   .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2219   .text.TIM4_IRQHandler:00000050 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2225   .text.TIM1_UP_IRQHandler:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2232   .text.TIM1_UP_IRQHandler:00000000 TIM1_UP_IRQHandler
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2458   .text.TIM1_UP_IRQHandler:00000128 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:3250   .bss.color_seleccionado.0:00000000 color_seleccionado.0
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2466   .rodata:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2524   .text.USART1_IRQHandler:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2531   .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2951   .text.USART1_IRQHandler:00000280 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:2971   .text.USART1_IRQHandler:000002c8 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:3147   .text.USART1_IRQHandler:000003ec $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:3164   .text.main:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:3171   .text.main:00000000 main
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:3240   .text.main:00000060 $d
C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s:3251   .bss.color_seleccionado.0:00000000 $d

UNDEFINED SYMBOLS
strlen
SystemCoreClockUpdate
__aeabi_ui2d
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccsdFOSc.s 			page 100


__aeabi_ddiv
__aeabi_dsub
__aeabi_d2uiz
SystemCoreClock
atoi
memset
strcmp
malloc
