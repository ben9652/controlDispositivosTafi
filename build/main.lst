ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.bss.intensidadLed,"aw",%nobits
  16              		.align	2
  19              	intensidadLed:
  20 0000 00000000 		.space	4
  21              		.section	.bss.index_intensidad,"aw",%nobits
  24              	index_intensidad:
  25 0000 00       		.space	1
  26              		.section	.bss.comandoAT,"aw",%nobits
  27              		.align	2
  30              	comandoAT:
  31 0000 00000000 		.space	4
  32              		.section	.bss.index_AT,"aw",%nobits
  35              	index_AT:
  36 0000 00       		.space	1
  37              		.section	.bss.caracteres,"aw",%nobits
  38              		.align	2
  41              	caracteres:
  42 0000 00000000 		.space	4
  43              		.section	.bss.index_caracteres,"aw",%nobits
  46              	index_caracteres:
  47 0000 00       		.space	1
  48              		.section	.bss.partyMode,"aw",%nobits
  51              	partyMode:
  52 0000 00       		.space	1
  53              		.section	.text.transmitirCadena,"ax",%progbits
  54              		.align	1
  55              		.global	transmitirCadena
  56              		.arch armv7-m
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	transmitirCadena:
  63              	.LFB65:
  64              		.file 1 "Core/Inc/myLib.h"
   1:Core/Inc/myLib.h **** #include "stm32f1xx.h"
   2:Core/Inc/myLib.h **** #include "stm32f103xb.h"
   3:Core/Inc/myLib.h **** #include <string.h>
   4:Core/Inc/myLib.h **** 
   5:Core/Inc/myLib.h **** #ifndef __MY_LIB
   6:Core/Inc/myLib.h **** #define __MY_LIB
   7:Core/Inc/myLib.h **** 
   8:Core/Inc/myLib.h **** // Frecuencia a la que funcionará el contador de los timers
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 2


   9:Core/Inc/myLib.h **** #define FRECUENCIA_CNT_LEDS 1e6
  10:Core/Inc/myLib.h **** #define PERIODO_PWM 20000
  11:Core/Inc/myLib.h **** #define PASO 2
  12:Core/Inc/myLib.h **** #define MAXIMA_INTENSIDAD (PERIODO_PWM/PASO)
  13:Core/Inc/myLib.h **** 
  14:Core/Inc/myLib.h **** #define ESP_01 USART1
  15:Core/Inc/myLib.h **** #define PC USART2
  16:Core/Inc/myLib.h **** 
  17:Core/Inc/myLib.h **** #define COMIENZO_ROJO 0
  18:Core/Inc/myLib.h **** #define COMIENZO_
  19:Core/Inc/myLib.h **** 
  20:Core/Inc/myLib.h **** static char* intensidadLed;
  21:Core/Inc/myLib.h **** static uint8_t index_intensidad;
  22:Core/Inc/myLib.h **** 
  23:Core/Inc/myLib.h **** static uint8_t* comandoAT;
  24:Core/Inc/myLib.h **** static uint8_t index_AT;
  25:Core/Inc/myLib.h **** 
  26:Core/Inc/myLib.h **** static char* caracteres;
  27:Core/Inc/myLib.h **** static uint8_t index_caracteres;
  28:Core/Inc/myLib.h **** 
  29:Core/Inc/myLib.h **** static uint8_t partyMode = 0;
  30:Core/Inc/myLib.h **** // Creame una enumeración
  31:Core/Inc/myLib.h **** enum {
  32:Core/Inc/myLib.h ****     NARANJA,
  33:Core/Inc/myLib.h ****     AMARILLO,
  34:Core/Inc/myLib.h ****     FLUOR,
  35:Core/Inc/myLib.h ****     ROSA,
  36:Core/Inc/myLib.h ****     ROJO,
  37:Core/Inc/myLib.h ****     VIOLETA,
  38:Core/Inc/myLib.h ****     VERDE,
  39:Core/Inc/myLib.h ****     CELESTE,
  40:Core/Inc/myLib.h ****     AZUL,
  41:Core/Inc/myLib.h ****     BLANCO,
  42:Core/Inc/myLib.h ****     CELESTE_MAR,
  43:Core/Inc/myLib.h ****     VIOLETA_OSCURO,
  44:Core/Inc/myLib.h ****     FUCSIA
  45:Core/Inc/myLib.h **** };
  46:Core/Inc/myLib.h **** 
  47:Core/Inc/myLib.h **** // Quiero una función con la que pueda ingresar una cadena de caracteres para meter en el buffer d
  48:Core/Inc/myLib.h **** // y que se transmita esa cadena de caracteres
  49:Core/Inc/myLib.h **** void transmitirCadena(char* cadena)
  50:Core/Inc/myLib.h **** {
  65              		.loc 1 50 1
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 16
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69 0000 80B5     		push	{r7, lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 84B0     		sub	sp, sp, #16
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 24
  77 0004 00AF     		add	r7, sp, #0
  78              	.LCFI2:
  79              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 3


  80 0006 7860     		str	r0, [r7, #4]
  51:Core/Inc/myLib.h ****     uint8_t longitud = strlen(cadena);
  81              		.loc 1 51 24
  82 0008 7868     		ldr	r0, [r7, #4]
  83 000a FFF7FEFF 		bl	strlen
  84 000e 0346     		mov	r3, r0
  85              		.loc 1 51 13
  86 0010 BB73     		strb	r3, [r7, #14]
  87              	.LBB2:
  52:Core/Inc/myLib.h ****     for(uint8_t i = 0; i < longitud; i++)
  88              		.loc 1 52 17
  89 0012 0023     		movs	r3, #0
  90 0014 FB73     		strb	r3, [r7, #15]
  91              		.loc 1 52 5
  92 0016 0FE0     		b	.L2
  93              	.L4:
  53:Core/Inc/myLib.h ****     {
  54:Core/Inc/myLib.h ****         while(!(USART1->SR & USART_SR_TC));
  94              		.loc 1 54 14
  95 0018 00BF     		nop
  96              	.L3:
  97              		.loc 1 54 23 discriminator 1
  98 001a 0C4B     		ldr	r3, .L5
  99 001c 1B68     		ldr	r3, [r3]
 100              		.loc 1 54 28 discriminator 1
 101 001e 03F04003 		and	r3, r3, #64
 102              		.loc 1 54 14 discriminator 1
 103 0022 002B     		cmp	r3, #0
 104 0024 F9D0     		beq	.L3
  55:Core/Inc/myLib.h ****         USART1->DR = cadena[i];
 105              		.loc 1 55 28 discriminator 2
 106 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 107 0028 7A68     		ldr	r2, [r7, #4]
 108 002a 1344     		add	r3, r3, r2
 109 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 110              		.loc 1 55 15 discriminator 2
 111 002e 074B     		ldr	r3, .L5
 112              		.loc 1 55 20 discriminator 2
 113 0030 5A60     		str	r2, [r3, #4]
  52:Core/Inc/myLib.h ****     for(uint8_t i = 0; i < longitud; i++)
 114              		.loc 1 52 39 discriminator 2
 115 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 116 0034 0133     		adds	r3, r3, #1
 117 0036 FB73     		strb	r3, [r7, #15]
 118              	.L2:
  52:Core/Inc/myLib.h ****     for(uint8_t i = 0; i < longitud; i++)
 119              		.loc 1 52 5 discriminator 1
 120 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 121 003a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 122 003c 9A42     		cmp	r2, r3
 123 003e EBD3     		bcc	.L4
 124              	.LBE2:
  56:Core/Inc/myLib.h ****     }
  57:Core/Inc/myLib.h **** }
 125              		.loc 1 57 1
 126 0040 00BF     		nop
 127 0042 00BF     		nop
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 4


 128 0044 1037     		adds	r7, r7, #16
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 8
 131 0046 BD46     		mov	sp, r7
 132              	.LCFI4:
 133              		.cfi_def_cfa_register 13
 134              		@ sp needed
 135 0048 80BD     		pop	{r7, pc}
 136              	.L6:
 137 004a 00BF     		.align	2
 138              	.L5:
 139 004c 00380140 		.word	1073821696
 140              		.cfi_endproc
 141              	.LFE65:
 143              		.section	.text.parpadearLedPlaca,"ax",%progbits
 144              		.align	1
 145              		.global	parpadearLedPlaca
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu softvfp
 151              	parpadearLedPlaca:
 152              	.LFB66:
  58:Core/Inc/myLib.h **** 
  59:Core/Inc/myLib.h **** // Sirve para parpadear una sola vez el LED de la placa
  60:Core/Inc/myLib.h **** void parpadearLedPlaca()
  61:Core/Inc/myLib.h **** {
 153              		.loc 1 61 1
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 80B4     		push	{r7}
 159              	.LCFI5:
 160              		.cfi_def_cfa_offset 4
 161              		.cfi_offset 7, -4
 162 0002 00AF     		add	r7, sp, #0
 163              	.LCFI6:
 164              		.cfi_def_cfa_register 7
  62:Core/Inc/myLib.h ****     TIM1->CR1 |= TIM_CR1_CEN;
 165              		.loc 1 62 15
 166 0004 064B     		ldr	r3, .L8
 167 0006 1B68     		ldr	r3, [r3]
 168 0008 054A     		ldr	r2, .L8
 169 000a 43F00103 		orr	r3, r3, #1
 170 000e 1360     		str	r3, [r2]
  63:Core/Inc/myLib.h ****     TIM1->SR = 0;
 171              		.loc 1 63 9
 172 0010 034B     		ldr	r3, .L8
 173              		.loc 1 63 14
 174 0012 0022     		movs	r2, #0
 175 0014 1A61     		str	r2, [r3, #16]
  64:Core/Inc/myLib.h **** }
 176              		.loc 1 64 1
 177 0016 00BF     		nop
 178 0018 BD46     		mov	sp, r7
 179              	.LCFI7:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 5


 180              		.cfi_def_cfa_register 13
 181              		@ sp needed
 182 001a 80BC     		pop	{r7}
 183              	.LCFI8:
 184              		.cfi_restore 7
 185              		.cfi_def_cfa_offset 0
 186 001c 7047     		bx	lr
 187              	.L9:
 188 001e 00BF     		.align	2
 189              	.L8:
 190 0020 002C0140 		.word	1073818624
 191              		.cfi_endproc
 192              	.LFE66:
 194              		.section	.text.parpadearLedPlacaVeces,"ax",%progbits
 195              		.align	1
 196              		.global	parpadearLedPlacaVeces
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu softvfp
 202              	parpadearLedPlacaVeces:
 203              	.LFB67:
  65:Core/Inc/myLib.h **** 
  66:Core/Inc/myLib.h **** // Sirve para parpadear n veces el LED de la placa
  67:Core/Inc/myLib.h **** void parpadearLedPlacaVeces(uint64_t n)
  68:Core/Inc/myLib.h **** {
 204              		.loc 1 68 1
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 16
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 B0B5     		push	{r4, r5, r7, lr}
 209              	.LCFI9:
 210              		.cfi_def_cfa_offset 16
 211              		.cfi_offset 4, -16
 212              		.cfi_offset 5, -12
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0002 84B0     		sub	sp, sp, #16
 216              	.LCFI10:
 217              		.cfi_def_cfa_offset 32
 218 0004 00AF     		add	r7, sp, #0
 219              	.LCFI11:
 220              		.cfi_def_cfa_register 7
 221 0006 C7E90001 		strd	r0, [r7]
 222              	.LBB3:
  69:Core/Inc/myLib.h ****     for(uint64_t i = 0; i < n; i++)
 223              		.loc 1 69 18
 224 000a 4FF00002 		mov	r2, #0
 225 000e 4FF00003 		mov	r3, #0
 226 0012 C7E90223 		strd	r2, [r7, #8]
 227              		.loc 1 69 5
 228 0016 17E0     		b	.L11
 229              	.L14:
  70:Core/Inc/myLib.h ****     {
  71:Core/Inc/myLib.h ****         parpadearLedPlaca();
 230              		.loc 1 71 9
 231 0018 FFF7FEFF 		bl	parpadearLedPlaca
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 6


  72:Core/Inc/myLib.h ****         while(TIM1->CR1 & TIM_CR1_CEN);
 232              		.loc 1 72 14
 233 001c 00BF     		nop
 234              	.L12:
 235              		.loc 1 72 19 discriminator 1
 236 001e 114B     		ldr	r3, .L15
 237 0020 1B68     		ldr	r3, [r3]
 238              		.loc 1 72 25 discriminator 1
 239 0022 03F00103 		and	r3, r3, #1
 240              		.loc 1 72 14 discriminator 1
 241 0026 002B     		cmp	r3, #0
 242 0028 F9D1     		bne	.L12
  73:Core/Inc/myLib.h ****         while(NVIC->IABR[0] & TIM1_UP_IRQn);
 243              		.loc 1 73 14
 244 002a 00BF     		nop
 245              	.L13:
 246              		.loc 1 73 19 discriminator 1
 247 002c 0E4B     		ldr	r3, .L15+4
 248              		.loc 1 73 25 discriminator 1
 249 002e D3F80032 		ldr	r3, [r3, #512]
 250              		.loc 1 73 29 discriminator 1
 251 0032 03F01903 		and	r3, r3, #25
 252              		.loc 1 73 14 discriminator 1
 253 0036 002B     		cmp	r3, #0
 254 0038 F8D1     		bne	.L13
  69:Core/Inc/myLib.h ****     {
 255              		.loc 1 69 33 discriminator 2
 256 003a D7E90223 		ldrd	r2, [r7, #8]
 257 003e 541C     		adds	r4, r2, #1
 258 0040 43F10005 		adc	r5, r3, #0
 259 0044 C7E90245 		strd	r4, [r7, #8]
 260              	.L11:
  69:Core/Inc/myLib.h ****     {
 261              		.loc 1 69 5 discriminator 1
 262 0048 D7E90201 		ldrd	r0, [r7, #8]
 263 004c D7E90023 		ldrd	r2, [r7]
 264 0050 9042     		cmp	r0, r2
 265 0052 71EB0303 		sbcs	r3, r1, r3
 266 0056 DFD3     		bcc	.L14
 267              	.LBE3:
  74:Core/Inc/myLib.h ****     }
  75:Core/Inc/myLib.h **** }
 268              		.loc 1 75 1
 269 0058 00BF     		nop
 270 005a 00BF     		nop
 271 005c 1037     		adds	r7, r7, #16
 272              	.LCFI12:
 273              		.cfi_def_cfa_offset 16
 274 005e BD46     		mov	sp, r7
 275              	.LCFI13:
 276              		.cfi_def_cfa_register 13
 277              		@ sp needed
 278 0060 B0BD     		pop	{r4, r5, r7, pc}
 279              	.L16:
 280 0062 00BF     		.align	2
 281              	.L15:
 282 0064 002C0140 		.word	1073818624
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 7


 283 0068 00E100E0 		.word	-536813312
 284              		.cfi_endproc
 285              	.LFE67:
 287              		.section	.text.msParpadeoLedPlaca,"ax",%progbits
 288              		.align	1
 289              		.global	msParpadeoLedPlaca
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu softvfp
 295              	msParpadeoLedPlaca:
 296              	.LFB68:
  76:Core/Inc/myLib.h **** 
  77:Core/Inc/myLib.h **** // Sirve para configurar el tiempo en el que estará encendido el LED
  78:Core/Inc/myLib.h **** void msParpadeoLedPlaca(uint16_t milisegundos)
  79:Core/Inc/myLib.h **** {
 297              		.loc 1 79 1
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 8
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302 0000 80B4     		push	{r7}
 303              	.LCFI14:
 304              		.cfi_def_cfa_offset 4
 305              		.cfi_offset 7, -4
 306 0002 83B0     		sub	sp, sp, #12
 307              	.LCFI15:
 308              		.cfi_def_cfa_offset 16
 309 0004 00AF     		add	r7, sp, #0
 310              	.LCFI16:
 311              		.cfi_def_cfa_register 7
 312 0006 0346     		mov	r3, r0
 313 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  80:Core/Inc/myLib.h ****     TIM1->ARR = milisegundos;
 314              		.loc 1 80 9
 315 000a 054A     		ldr	r2, .L18
 316              		.loc 1 80 15
 317 000c FB88     		ldrh	r3, [r7, #6]
 318 000e D362     		str	r3, [r2, #44]
  81:Core/Inc/myLib.h ****     TIM1->SR = 0;
 319              		.loc 1 81 9
 320 0010 034B     		ldr	r3, .L18
 321              		.loc 1 81 14
 322 0012 0022     		movs	r2, #0
 323 0014 1A61     		str	r2, [r3, #16]
  82:Core/Inc/myLib.h **** }
 324              		.loc 1 82 1
 325 0016 00BF     		nop
 326 0018 0C37     		adds	r7, r7, #12
 327              	.LCFI17:
 328              		.cfi_def_cfa_offset 4
 329 001a BD46     		mov	sp, r7
 330              	.LCFI18:
 331              		.cfi_def_cfa_register 13
 332              		@ sp needed
 333 001c 80BC     		pop	{r7}
 334              	.LCFI19:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 8


 335              		.cfi_restore 7
 336              		.cfi_def_cfa_offset 0
 337 001e 7047     		bx	lr
 338              	.L19:
 339              		.align	2
 340              	.L18:
 341 0020 002C0140 		.word	1073818624
 342              		.cfi_endproc
 343              	.LFE68:
 345              		.section	.text.esNumero,"ax",%progbits
 346              		.align	1
 347              		.global	esNumero
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu softvfp
 353              	esNumero:
 354              	.LFB69:
  83:Core/Inc/myLib.h **** 
  84:Core/Inc/myLib.h **** uint8_t esNumero(uint8_t car)
  85:Core/Inc/myLib.h **** {
 355              		.loc 1 85 1
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 8
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360 0000 80B4     		push	{r7}
 361              	.LCFI20:
 362              		.cfi_def_cfa_offset 4
 363              		.cfi_offset 7, -4
 364 0002 83B0     		sub	sp, sp, #12
 365              	.LCFI21:
 366              		.cfi_def_cfa_offset 16
 367 0004 00AF     		add	r7, sp, #0
 368              	.LCFI22:
 369              		.cfi_def_cfa_register 7
 370 0006 0346     		mov	r3, r0
 371 0008 FB71     		strb	r3, [r7, #7]
  86:Core/Inc/myLib.h ****     return car >= 0x30 && car <= 0x39;
 372              		.loc 1 86 24
 373 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 374 000c 2F2B     		cmp	r3, #47
 375 000e 04D9     		bls	.L21
 376              		.loc 1 86 24 is_stmt 0 discriminator 1
 377 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 378 0012 392B     		cmp	r3, #57
 379 0014 01D8     		bhi	.L21
 380              		.loc 1 86 24 discriminator 3
 381 0016 0123     		movs	r3, #1
 382 0018 00E0     		b	.L22
 383              	.L21:
 384              		.loc 1 86 24 discriminator 4
 385 001a 0023     		movs	r3, #0
 386              	.L22:
 387              		.loc 1 86 24 discriminator 6
 388 001c DBB2     		uxtb	r3, r3
  87:Core/Inc/myLib.h **** }
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 9


 389              		.loc 1 87 1 is_stmt 1 discriminator 6
 390 001e 1846     		mov	r0, r3
 391 0020 0C37     		adds	r7, r7, #12
 392              	.LCFI23:
 393              		.cfi_def_cfa_offset 4
 394 0022 BD46     		mov	sp, r7
 395              	.LCFI24:
 396              		.cfi_def_cfa_register 13
 397              		@ sp needed
 398 0024 80BC     		pop	{r7}
 399              	.LCFI25:
 400              		.cfi_restore 7
 401              		.cfi_def_cfa_offset 0
 402 0026 7047     		bx	lr
 403              		.cfi_endproc
 404              	.LFE69:
 406              		.section	.text.UARTDisponible,"ax",%progbits
 407              		.align	1
 408              		.global	UARTDisponible
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu softvfp
 414              	UARTDisponible:
 415              	.LFB70:
  88:Core/Inc/myLib.h **** 
  89:Core/Inc/myLib.h **** uint8_t UARTDisponible(USART_TypeDef* pUSART)
  90:Core/Inc/myLib.h **** {
 416              		.loc 1 90 1
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 8
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 421 0000 80B4     		push	{r7}
 422              	.LCFI26:
 423              		.cfi_def_cfa_offset 4
 424              		.cfi_offset 7, -4
 425 0002 83B0     		sub	sp, sp, #12
 426              	.LCFI27:
 427              		.cfi_def_cfa_offset 16
 428 0004 00AF     		add	r7, sp, #0
 429              	.LCFI28:
 430              		.cfi_def_cfa_register 7
 431 0006 7860     		str	r0, [r7, #4]
  91:Core/Inc/myLib.h ****     if(pUSART->SR & USART_SR_TXE) return 1;
 432              		.loc 1 91 14
 433 0008 7B68     		ldr	r3, [r7, #4]
 434 000a 1B68     		ldr	r3, [r3]
 435              		.loc 1 91 19
 436 000c 03F08003 		and	r3, r3, #128
 437              		.loc 1 91 7
 438 0010 002B     		cmp	r3, #0
 439 0012 01D0     		beq	.L25
 440              		.loc 1 91 42 discriminator 1
 441 0014 0123     		movs	r3, #1
 442 0016 00E0     		b	.L26
 443              	.L25:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 10


  92:Core/Inc/myLib.h ****     else return 0;
 444              		.loc 1 92 17
 445 0018 0023     		movs	r3, #0
 446              	.L26:
  93:Core/Inc/myLib.h **** }
 447              		.loc 1 93 1
 448 001a 1846     		mov	r0, r3
 449 001c 0C37     		adds	r7, r7, #12
 450              	.LCFI29:
 451              		.cfi_def_cfa_offset 4
 452 001e BD46     		mov	sp, r7
 453              	.LCFI30:
 454              		.cfi_def_cfa_register 13
 455              		@ sp needed
 456 0020 80BC     		pop	{r7}
 457              	.LCFI31:
 458              		.cfi_restore 7
 459              		.cfi_def_cfa_offset 0
 460 0022 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE70:
 464              		.section	.text.UARTEscribirByte,"ax",%progbits
 465              		.align	1
 466              		.global	UARTEscribirByte
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 470              		.fpu softvfp
 472              	UARTEscribirByte:
 473              	.LFB71:
  94:Core/Inc/myLib.h **** 
  95:Core/Inc/myLib.h **** void UARTEscribirByte(USART_TypeDef* pUSART, uint8_t data)
  96:Core/Inc/myLib.h **** {
 474              		.loc 1 96 1
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 8
 477              		@ frame_needed = 1, uses_anonymous_args = 0
 478 0000 80B5     		push	{r7, lr}
 479              	.LCFI32:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 7, -8
 482              		.cfi_offset 14, -4
 483 0002 82B0     		sub	sp, sp, #8
 484              	.LCFI33:
 485              		.cfi_def_cfa_offset 16
 486 0004 00AF     		add	r7, sp, #0
 487              	.LCFI34:
 488              		.cfi_def_cfa_register 7
 489 0006 7860     		str	r0, [r7, #4]
 490 0008 0B46     		mov	r3, r1
 491 000a FB70     		strb	r3, [r7, #3]
  97:Core/Inc/myLib.h ****     while(!UARTDisponible(pUSART));
 492              		.loc 1 97 10
 493 000c 00BF     		nop
 494              	.L28:
 495              		.loc 1 97 12 discriminator 1
 496 000e 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 11


 497 0010 FFF7FEFF 		bl	UARTDisponible
 498 0014 0346     		mov	r3, r0
 499              		.loc 1 97 10 discriminator 1
 500 0016 002B     		cmp	r3, #0
 501 0018 F9D0     		beq	.L28
  98:Core/Inc/myLib.h ****     pUSART->DR = data;
 502              		.loc 1 98 16
 503 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 504 001c 7B68     		ldr	r3, [r7, #4]
 505 001e 5A60     		str	r2, [r3, #4]
  99:Core/Inc/myLib.h **** }
 506              		.loc 1 99 1
 507 0020 00BF     		nop
 508 0022 0837     		adds	r7, r7, #8
 509              	.LCFI35:
 510              		.cfi_def_cfa_offset 8
 511 0024 BD46     		mov	sp, r7
 512              	.LCFI36:
 513              		.cfi_def_cfa_register 13
 514              		@ sp needed
 515 0026 80BD     		pop	{r7, pc}
 516              		.cfi_endproc
 517              	.LFE71:
 519              		.section	.text.UARTEscribirString,"ax",%progbits
 520              		.align	1
 521              		.global	UARTEscribirString
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 525              		.fpu softvfp
 527              	UARTEscribirString:
 528              	.LFB72:
 100:Core/Inc/myLib.h **** 
 101:Core/Inc/myLib.h **** void UARTEscribirString(USART_TypeDef* pUSART, uint8_t* string)
 102:Core/Inc/myLib.h **** {
 529              		.loc 1 102 1
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 16
 532              		@ frame_needed = 1, uses_anonymous_args = 0
 533 0000 80B5     		push	{r7, lr}
 534              	.LCFI37:
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 7, -8
 537              		.cfi_offset 14, -4
 538 0002 84B0     		sub	sp, sp, #16
 539              	.LCFI38:
 540              		.cfi_def_cfa_offset 24
 541 0004 00AF     		add	r7, sp, #0
 542              	.LCFI39:
 543              		.cfi_def_cfa_register 7
 544 0006 7860     		str	r0, [r7, #4]
 545 0008 3960     		str	r1, [r7]
 546              	.LBB4:
 103:Core/Inc/myLib.h ****     for(uint8_t* p = string; *p != 0; p++)
 547              		.loc 1 103 18
 548 000a 3B68     		ldr	r3, [r7]
 549 000c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 12


 550              		.loc 1 103 5
 551 000e 08E0     		b	.L30
 552              	.L31:
 104:Core/Inc/myLib.h ****         UARTEscribirByte(pUSART, *p);
 553              		.loc 1 104 9 discriminator 3
 554 0010 FB68     		ldr	r3, [r7, #12]
 555 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 556 0014 1946     		mov	r1, r3
 557 0016 7868     		ldr	r0, [r7, #4]
 558 0018 FFF7FEFF 		bl	UARTEscribirByte
 103:Core/Inc/myLib.h ****     for(uint8_t* p = string; *p != 0; p++)
 559              		.loc 1 103 40 discriminator 3
 560 001c FB68     		ldr	r3, [r7, #12]
 561 001e 0133     		adds	r3, r3, #1
 562 0020 FB60     		str	r3, [r7, #12]
 563              	.L30:
 103:Core/Inc/myLib.h ****     for(uint8_t* p = string; *p != 0; p++)
 564              		.loc 1 103 30 discriminator 1
 565 0022 FB68     		ldr	r3, [r7, #12]
 566 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 103:Core/Inc/myLib.h ****     for(uint8_t* p = string; *p != 0; p++)
 567              		.loc 1 103 5 discriminator 1
 568 0026 002B     		cmp	r3, #0
 569 0028 F2D1     		bne	.L31
 570              	.LBE4:
 105:Core/Inc/myLib.h **** }
 571              		.loc 1 105 1
 572 002a 00BF     		nop
 573 002c 00BF     		nop
 574 002e 1037     		adds	r7, r7, #16
 575              	.LCFI40:
 576              		.cfi_def_cfa_offset 8
 577 0030 BD46     		mov	sp, r7
 578              	.LCFI41:
 579              		.cfi_def_cfa_register 13
 580              		@ sp needed
 581 0032 80BD     		pop	{r7, pc}
 582              		.cfi_endproc
 583              	.LFE72:
 585              		.section	.text.encenderNaranja,"ax",%progbits
 586              		.align	1
 587              		.global	encenderNaranja
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 591              		.fpu softvfp
 593              	encenderNaranja:
 594              	.LFB73:
 106:Core/Inc/myLib.h **** 
 107:Core/Inc/myLib.h **** void encenderNaranja()
 108:Core/Inc/myLib.h **** {
 595              		.loc 1 108 1
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 1, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600 0000 80B4     		push	{r7}
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 13


 601              	.LCFI42:
 602              		.cfi_def_cfa_offset 4
 603              		.cfi_offset 7, -4
 604 0002 00AF     		add	r7, sp, #0
 605              	.LCFI43:
 606              		.cfi_def_cfa_register 7
 109:Core/Inc/myLib.h ****     TIM2->CCR2 = 3000 * PASO;
 607              		.loc 1 109 9
 608 0004 4FF08043 		mov	r3, #1073741824
 609              		.loc 1 109 16
 610 0008 41F27072 		movw	r2, #6000
 611 000c 9A63     		str	r2, [r3, #56]
 110:Core/Inc/myLib.h ****     TIM3->CCR2 = 500 * PASO;
 612              		.loc 1 110 9
 613 000e 054B     		ldr	r3, .L33
 614              		.loc 1 110 16
 615 0010 4FF47A72 		mov	r2, #1000
 616 0014 9A63     		str	r2, [r3, #56]
 111:Core/Inc/myLib.h ****     TIM4->CCR2 = 0;
 617              		.loc 1 111 9
 618 0016 044B     		ldr	r3, .L33+4
 619              		.loc 1 111 16
 620 0018 0022     		movs	r2, #0
 621 001a 9A63     		str	r2, [r3, #56]
 112:Core/Inc/myLib.h **** }
 622              		.loc 1 112 1
 623 001c 00BF     		nop
 624 001e BD46     		mov	sp, r7
 625              	.LCFI44:
 626              		.cfi_def_cfa_register 13
 627              		@ sp needed
 628 0020 80BC     		pop	{r7}
 629              	.LCFI45:
 630              		.cfi_restore 7
 631              		.cfi_def_cfa_offset 0
 632 0022 7047     		bx	lr
 633              	.L34:
 634              		.align	2
 635              	.L33:
 636 0024 00040040 		.word	1073742848
 637 0028 00080040 		.word	1073743872
 638              		.cfi_endproc
 639              	.LFE73:
 641              		.section	.text.encenderAmarillo,"ax",%progbits
 642              		.align	1
 643              		.global	encenderAmarillo
 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 647              		.fpu softvfp
 649              	encenderAmarillo:
 650              	.LFB74:
 113:Core/Inc/myLib.h **** 
 114:Core/Inc/myLib.h **** void encenderAmarillo()
 115:Core/Inc/myLib.h **** {
 651              		.loc 1 115 1
 652              		.cfi_startproc
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 14


 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 656 0000 80B4     		push	{r7}
 657              	.LCFI46:
 658              		.cfi_def_cfa_offset 4
 659              		.cfi_offset 7, -4
 660 0002 00AF     		add	r7, sp, #0
 661              	.LCFI47:
 662              		.cfi_def_cfa_register 7
 116:Core/Inc/myLib.h ****     TIM2->CCR2 = 3000 * PASO;
 663              		.loc 1 116 9
 664 0004 4FF08043 		mov	r3, #1073741824
 665              		.loc 1 116 16
 666 0008 41F27072 		movw	r2, #6000
 667 000c 9A63     		str	r2, [r3, #56]
 117:Core/Inc/myLib.h ****     TIM3->CCR2 = 2100 * PASO;
 668              		.loc 1 117 9
 669 000e 054B     		ldr	r3, .L36
 670              		.loc 1 117 16
 671 0010 41F26802 		movw	r2, #4200
 672 0014 9A63     		str	r2, [r3, #56]
 118:Core/Inc/myLib.h ****     TIM4->CCR2 = 0;
 673              		.loc 1 118 9
 674 0016 044B     		ldr	r3, .L36+4
 675              		.loc 1 118 16
 676 0018 0022     		movs	r2, #0
 677 001a 9A63     		str	r2, [r3, #56]
 119:Core/Inc/myLib.h **** }
 678              		.loc 1 119 1
 679 001c 00BF     		nop
 680 001e BD46     		mov	sp, r7
 681              	.LCFI48:
 682              		.cfi_def_cfa_register 13
 683              		@ sp needed
 684 0020 80BC     		pop	{r7}
 685              	.LCFI49:
 686              		.cfi_restore 7
 687              		.cfi_def_cfa_offset 0
 688 0022 7047     		bx	lr
 689              	.L37:
 690              		.align	2
 691              	.L36:
 692 0024 00040040 		.word	1073742848
 693 0028 00080040 		.word	1073743872
 694              		.cfi_endproc
 695              	.LFE74:
 697              		.section	.text.encenderFluor,"ax",%progbits
 698              		.align	1
 699              		.global	encenderFluor
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 703              		.fpu softvfp
 705              	encenderFluor:
 706              	.LFB75:
 120:Core/Inc/myLib.h **** 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 15


 121:Core/Inc/myLib.h **** void encenderFluor()
 122:Core/Inc/myLib.h **** {
 707              		.loc 1 122 1
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712 0000 80B4     		push	{r7}
 713              	.LCFI50:
 714              		.cfi_def_cfa_offset 4
 715              		.cfi_offset 7, -4
 716 0002 00AF     		add	r7, sp, #0
 717              	.LCFI51:
 718              		.cfi_def_cfa_register 7
 123:Core/Inc/myLib.h ****     TIM2->CCR2 = 3000 * PASO;
 719              		.loc 1 123 9
 720 0004 4FF08043 		mov	r3, #1073741824
 721              		.loc 1 123 16
 722 0008 41F27072 		movw	r2, #6000
 723 000c 9A63     		str	r2, [r3, #56]
 124:Core/Inc/myLib.h ****     TIM3->CCR2 = 3000 * PASO;
 724              		.loc 1 124 9
 725 000e 054B     		ldr	r3, .L39
 726              		.loc 1 124 16
 727 0010 41F27072 		movw	r2, #6000
 728 0014 9A63     		str	r2, [r3, #56]
 125:Core/Inc/myLib.h ****     TIM4->CCR2 = 0;
 729              		.loc 1 125 9
 730 0016 044B     		ldr	r3, .L39+4
 731              		.loc 1 125 16
 732 0018 0022     		movs	r2, #0
 733 001a 9A63     		str	r2, [r3, #56]
 126:Core/Inc/myLib.h **** }
 734              		.loc 1 126 1
 735 001c 00BF     		nop
 736 001e BD46     		mov	sp, r7
 737              	.LCFI52:
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 0020 80BC     		pop	{r7}
 741              	.LCFI53:
 742              		.cfi_restore 7
 743              		.cfi_def_cfa_offset 0
 744 0022 7047     		bx	lr
 745              	.L40:
 746              		.align	2
 747              	.L39:
 748 0024 00040040 		.word	1073742848
 749 0028 00080040 		.word	1073743872
 750              		.cfi_endproc
 751              	.LFE75:
 753              		.section	.text.encenderRosa,"ax",%progbits
 754              		.align	1
 755              		.global	encenderRosa
 756              		.syntax unified
 757              		.thumb
 758              		.thumb_func
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 16


 759              		.fpu softvfp
 761              	encenderRosa:
 762              	.LFB76:
 127:Core/Inc/myLib.h **** 
 128:Core/Inc/myLib.h **** void encenderRosa()
 129:Core/Inc/myLib.h **** {
 763              		.loc 1 129 1
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 1, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768 0000 80B4     		push	{r7}
 769              	.LCFI54:
 770              		.cfi_def_cfa_offset 4
 771              		.cfi_offset 7, -4
 772 0002 00AF     		add	r7, sp, #0
 773              	.LCFI55:
 774              		.cfi_def_cfa_register 7
 130:Core/Inc/myLib.h ****     TIM2->CCR2 = 2500 * PASO;
 775              		.loc 1 130 9
 776 0004 4FF08043 		mov	r3, #1073741824
 777              		.loc 1 130 16
 778 0008 41F28832 		movw	r2, #5000
 779 000c 9A63     		str	r2, [r3, #56]
 131:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 780              		.loc 1 131 9
 781 000e 054B     		ldr	r3, .L42
 782              		.loc 1 131 16
 783 0010 0022     		movs	r2, #0
 784 0012 9A63     		str	r2, [r3, #56]
 132:Core/Inc/myLib.h ****     TIM4->CCR2 = 3000 * PASO;
 785              		.loc 1 132 9
 786 0014 044B     		ldr	r3, .L42+4
 787              		.loc 1 132 16
 788 0016 41F27072 		movw	r2, #6000
 789 001a 9A63     		str	r2, [r3, #56]
 133:Core/Inc/myLib.h **** }
 790              		.loc 1 133 1
 791 001c 00BF     		nop
 792 001e BD46     		mov	sp, r7
 793              	.LCFI56:
 794              		.cfi_def_cfa_register 13
 795              		@ sp needed
 796 0020 80BC     		pop	{r7}
 797              	.LCFI57:
 798              		.cfi_restore 7
 799              		.cfi_def_cfa_offset 0
 800 0022 7047     		bx	lr
 801              	.L43:
 802              		.align	2
 803              	.L42:
 804 0024 00040040 		.word	1073742848
 805 0028 00080040 		.word	1073743872
 806              		.cfi_endproc
 807              	.LFE76:
 809              		.section	.text.encenderRojo,"ax",%progbits
 810              		.align	1
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 17


 811              		.global	encenderRojo
 812              		.syntax unified
 813              		.thumb
 814              		.thumb_func
 815              		.fpu softvfp
 817              	encenderRojo:
 818              	.LFB77:
 134:Core/Inc/myLib.h **** 
 135:Core/Inc/myLib.h **** void encenderRojo()
 136:Core/Inc/myLib.h **** {
 819              		.loc 1 136 1
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823              		@ link register save eliminated.
 824 0000 80B4     		push	{r7}
 825              	.LCFI58:
 826              		.cfi_def_cfa_offset 4
 827              		.cfi_offset 7, -4
 828 0002 00AF     		add	r7, sp, #0
 829              	.LCFI59:
 830              		.cfi_def_cfa_register 7
 137:Core/Inc/myLib.h ****     TIM2->CCR2 = 3000 * PASO;
 831              		.loc 1 137 9
 832 0004 4FF08043 		mov	r3, #1073741824
 833              		.loc 1 137 16
 834 0008 41F27072 		movw	r2, #6000
 835 000c 9A63     		str	r2, [r3, #56]
 138:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 836              		.loc 1 138 9
 837 000e 054B     		ldr	r3, .L45
 838              		.loc 1 138 16
 839 0010 0022     		movs	r2, #0
 840 0012 9A63     		str	r2, [r3, #56]
 139:Core/Inc/myLib.h ****     TIM4->CCR2 = 0;
 841              		.loc 1 139 9
 842 0014 044B     		ldr	r3, .L45+4
 843              		.loc 1 139 16
 844 0016 0022     		movs	r2, #0
 845 0018 9A63     		str	r2, [r3, #56]
 140:Core/Inc/myLib.h **** }
 846              		.loc 1 140 1
 847 001a 00BF     		nop
 848 001c BD46     		mov	sp, r7
 849              	.LCFI60:
 850              		.cfi_def_cfa_register 13
 851              		@ sp needed
 852 001e 80BC     		pop	{r7}
 853              	.LCFI61:
 854              		.cfi_restore 7
 855              		.cfi_def_cfa_offset 0
 856 0020 7047     		bx	lr
 857              	.L46:
 858 0022 00BF     		.align	2
 859              	.L45:
 860 0024 00040040 		.word	1073742848
 861 0028 00080040 		.word	1073743872
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 18


 862              		.cfi_endproc
 863              	.LFE77:
 865              		.section	.text.encenderVioleta,"ax",%progbits
 866              		.align	1
 867              		.global	encenderVioleta
 868              		.syntax unified
 869              		.thumb
 870              		.thumb_func
 871              		.fpu softvfp
 873              	encenderVioleta:
 874              	.LFB78:
 141:Core/Inc/myLib.h **** 
 142:Core/Inc/myLib.h **** void encenderVioleta()
 143:Core/Inc/myLib.h **** {
 875              		.loc 1 143 1
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 1, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 880 0000 80B4     		push	{r7}
 881              	.LCFI62:
 882              		.cfi_def_cfa_offset 4
 883              		.cfi_offset 7, -4
 884 0002 00AF     		add	r7, sp, #0
 885              	.LCFI63:
 886              		.cfi_def_cfa_register 7
 144:Core/Inc/myLib.h ****     TIM2->CCR2 = 800 * PASO;
 887              		.loc 1 144 9
 888 0004 4FF08043 		mov	r3, #1073741824
 889              		.loc 1 144 16
 890 0008 4FF4C862 		mov	r2, #1600
 891 000c 9A63     		str	r2, [r3, #56]
 145:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 892              		.loc 1 145 9
 893 000e 054B     		ldr	r3, .L48
 894              		.loc 1 145 16
 895 0010 0022     		movs	r2, #0
 896 0012 9A63     		str	r2, [r3, #56]
 146:Core/Inc/myLib.h ****     TIM4->CCR2 = 3000 * PASO;
 897              		.loc 1 146 9
 898 0014 044B     		ldr	r3, .L48+4
 899              		.loc 1 146 16
 900 0016 41F27072 		movw	r2, #6000
 901 001a 9A63     		str	r2, [r3, #56]
 147:Core/Inc/myLib.h **** }
 902              		.loc 1 147 1
 903 001c 00BF     		nop
 904 001e BD46     		mov	sp, r7
 905              	.LCFI64:
 906              		.cfi_def_cfa_register 13
 907              		@ sp needed
 908 0020 80BC     		pop	{r7}
 909              	.LCFI65:
 910              		.cfi_restore 7
 911              		.cfi_def_cfa_offset 0
 912 0022 7047     		bx	lr
 913              	.L49:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 19


 914              		.align	2
 915              	.L48:
 916 0024 00040040 		.word	1073742848
 917 0028 00080040 		.word	1073743872
 918              		.cfi_endproc
 919              	.LFE78:
 921              		.section	.text.encenderVerde,"ax",%progbits
 922              		.align	1
 923              		.global	encenderVerde
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 927              		.fpu softvfp
 929              	encenderVerde:
 930              	.LFB79:
 148:Core/Inc/myLib.h **** 
 149:Core/Inc/myLib.h **** void encenderVerde()
 150:Core/Inc/myLib.h **** {
 931              		.loc 1 150 1
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 936 0000 80B4     		push	{r7}
 937              	.LCFI66:
 938              		.cfi_def_cfa_offset 4
 939              		.cfi_offset 7, -4
 940 0002 00AF     		add	r7, sp, #0
 941              	.LCFI67:
 942              		.cfi_def_cfa_register 7
 151:Core/Inc/myLib.h ****     TIM2->CCR2 = 0;
 943              		.loc 1 151 9
 944 0004 4FF08043 		mov	r3, #1073741824
 945              		.loc 1 151 16
 946 0008 0022     		movs	r2, #0
 947 000a 9A63     		str	r2, [r3, #56]
 152:Core/Inc/myLib.h ****     TIM3->CCR2 = 3000 * PASO;
 948              		.loc 1 152 9
 949 000c 054B     		ldr	r3, .L51
 950              		.loc 1 152 16
 951 000e 41F27072 		movw	r2, #6000
 952 0012 9A63     		str	r2, [r3, #56]
 153:Core/Inc/myLib.h ****     TIM4->CCR2 = 0;
 953              		.loc 1 153 9
 954 0014 044B     		ldr	r3, .L51+4
 955              		.loc 1 153 16
 956 0016 0022     		movs	r2, #0
 957 0018 9A63     		str	r2, [r3, #56]
 154:Core/Inc/myLib.h **** }
 958              		.loc 1 154 1
 959 001a 00BF     		nop
 960 001c BD46     		mov	sp, r7
 961              	.LCFI68:
 962              		.cfi_def_cfa_register 13
 963              		@ sp needed
 964 001e 80BC     		pop	{r7}
 965              	.LCFI69:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 20


 966              		.cfi_restore 7
 967              		.cfi_def_cfa_offset 0
 968 0020 7047     		bx	lr
 969              	.L52:
 970 0022 00BF     		.align	2
 971              	.L51:
 972 0024 00040040 		.word	1073742848
 973 0028 00080040 		.word	1073743872
 974              		.cfi_endproc
 975              	.LFE79:
 977              		.section	.text.encenderCeleste,"ax",%progbits
 978              		.align	1
 979              		.global	encenderCeleste
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 983              		.fpu softvfp
 985              	encenderCeleste:
 986              	.LFB80:
 155:Core/Inc/myLib.h **** 
 156:Core/Inc/myLib.h **** void encenderCeleste()
 157:Core/Inc/myLib.h **** {
 987              		.loc 1 157 1
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 1, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 992 0000 80B4     		push	{r7}
 993              	.LCFI70:
 994              		.cfi_def_cfa_offset 4
 995              		.cfi_offset 7, -4
 996 0002 00AF     		add	r7, sp, #0
 997              	.LCFI71:
 998              		.cfi_def_cfa_register 7
 158:Core/Inc/myLib.h ****     TIM2->CCR2 = 0;
 999              		.loc 1 158 9
 1000 0004 4FF08043 		mov	r3, #1073741824
 1001              		.loc 1 158 16
 1002 0008 0022     		movs	r2, #0
 1003 000a 9A63     		str	r2, [r3, #56]
 159:Core/Inc/myLib.h ****     TIM3->CCR2 = 1000 * PASO;
 1004              		.loc 1 159 9
 1005 000c 054B     		ldr	r3, .L54
 1006              		.loc 1 159 16
 1007 000e 4FF4FA62 		mov	r2, #2000
 1008 0012 9A63     		str	r2, [r3, #56]
 160:Core/Inc/myLib.h ****     TIM4->CCR2 = 3000 * PASO;
 1009              		.loc 1 160 9
 1010 0014 044B     		ldr	r3, .L54+4
 1011              		.loc 1 160 16
 1012 0016 41F27072 		movw	r2, #6000
 1013 001a 9A63     		str	r2, [r3, #56]
 161:Core/Inc/myLib.h **** }
 1014              		.loc 1 161 1
 1015 001c 00BF     		nop
 1016 001e BD46     		mov	sp, r7
 1017              	.LCFI72:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 21


 1018              		.cfi_def_cfa_register 13
 1019              		@ sp needed
 1020 0020 80BC     		pop	{r7}
 1021              	.LCFI73:
 1022              		.cfi_restore 7
 1023              		.cfi_def_cfa_offset 0
 1024 0022 7047     		bx	lr
 1025              	.L55:
 1026              		.align	2
 1027              	.L54:
 1028 0024 00040040 		.word	1073742848
 1029 0028 00080040 		.word	1073743872
 1030              		.cfi_endproc
 1031              	.LFE80:
 1033              		.section	.text.encenderAzul,"ax",%progbits
 1034              		.align	1
 1035              		.global	encenderAzul
 1036              		.syntax unified
 1037              		.thumb
 1038              		.thumb_func
 1039              		.fpu softvfp
 1041              	encenderAzul:
 1042              	.LFB81:
 162:Core/Inc/myLib.h **** 
 163:Core/Inc/myLib.h **** void encenderAzul()
 164:Core/Inc/myLib.h **** {
 1043              		.loc 1 164 1
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 0
 1046              		@ frame_needed = 1, uses_anonymous_args = 0
 1047              		@ link register save eliminated.
 1048 0000 80B4     		push	{r7}
 1049              	.LCFI74:
 1050              		.cfi_def_cfa_offset 4
 1051              		.cfi_offset 7, -4
 1052 0002 00AF     		add	r7, sp, #0
 1053              	.LCFI75:
 1054              		.cfi_def_cfa_register 7
 165:Core/Inc/myLib.h ****     TIM2->CCR2 = 0;
 1055              		.loc 1 165 9
 1056 0004 4FF08043 		mov	r3, #1073741824
 1057              		.loc 1 165 16
 1058 0008 0022     		movs	r2, #0
 1059 000a 9A63     		str	r2, [r3, #56]
 166:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 1060              		.loc 1 166 9
 1061 000c 054B     		ldr	r3, .L57
 1062              		.loc 1 166 16
 1063 000e 0022     		movs	r2, #0
 1064 0010 9A63     		str	r2, [r3, #56]
 167:Core/Inc/myLib.h ****     TIM4->CCR2 = 3000 * PASO;
 1065              		.loc 1 167 9
 1066 0012 054B     		ldr	r3, .L57+4
 1067              		.loc 1 167 16
 1068 0014 41F27072 		movw	r2, #6000
 1069 0018 9A63     		str	r2, [r3, #56]
 168:Core/Inc/myLib.h **** }
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 22


 1070              		.loc 1 168 1
 1071 001a 00BF     		nop
 1072 001c BD46     		mov	sp, r7
 1073              	.LCFI76:
 1074              		.cfi_def_cfa_register 13
 1075              		@ sp needed
 1076 001e 80BC     		pop	{r7}
 1077              	.LCFI77:
 1078              		.cfi_restore 7
 1079              		.cfi_def_cfa_offset 0
 1080 0020 7047     		bx	lr
 1081              	.L58:
 1082 0022 00BF     		.align	2
 1083              	.L57:
 1084 0024 00040040 		.word	1073742848
 1085 0028 00080040 		.word	1073743872
 1086              		.cfi_endproc
 1087              	.LFE81:
 1089              		.section	.text.encenderBlanco,"ax",%progbits
 1090              		.align	1
 1091              		.global	encenderBlanco
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1095              		.fpu softvfp
 1097              	encenderBlanco:
 1098              	.LFB82:
 169:Core/Inc/myLib.h **** 
 170:Core/Inc/myLib.h **** void encenderBlanco()
 171:Core/Inc/myLib.h **** {
 1099              		.loc 1 171 1
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 1, uses_anonymous_args = 0
 1103              		@ link register save eliminated.
 1104 0000 80B4     		push	{r7}
 1105              	.LCFI78:
 1106              		.cfi_def_cfa_offset 4
 1107              		.cfi_offset 7, -4
 1108 0002 00AF     		add	r7, sp, #0
 1109              	.LCFI79:
 1110              		.cfi_def_cfa_register 7
 172:Core/Inc/myLib.h ****     TIM2->CCR2 = 5000 * PASO;
 1111              		.loc 1 172 9
 1112 0004 4FF08043 		mov	r3, #1073741824
 1113              		.loc 1 172 16
 1114 0008 42F21072 		movw	r2, #10000
 1115 000c 9A63     		str	r2, [r3, #56]
 173:Core/Inc/myLib.h ****     TIM3->CCR2 = 5000 * PASO;
 1116              		.loc 1 173 9
 1117 000e 064B     		ldr	r3, .L60
 1118              		.loc 1 173 16
 1119 0010 42F21072 		movw	r2, #10000
 1120 0014 9A63     		str	r2, [r3, #56]
 174:Core/Inc/myLib.h ****     TIM4->CCR2 = 5000 * PASO;
 1121              		.loc 1 174 9
 1122 0016 054B     		ldr	r3, .L60+4
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 23


 1123              		.loc 1 174 16
 1124 0018 42F21072 		movw	r2, #10000
 1125 001c 9A63     		str	r2, [r3, #56]
 175:Core/Inc/myLib.h **** }
 1126              		.loc 1 175 1
 1127 001e 00BF     		nop
 1128 0020 BD46     		mov	sp, r7
 1129              	.LCFI80:
 1130              		.cfi_def_cfa_register 13
 1131              		@ sp needed
 1132 0022 80BC     		pop	{r7}
 1133              	.LCFI81:
 1134              		.cfi_restore 7
 1135              		.cfi_def_cfa_offset 0
 1136 0024 7047     		bx	lr
 1137              	.L61:
 1138 0026 00BF     		.align	2
 1139              	.L60:
 1140 0028 00040040 		.word	1073742848
 1141 002c 00080040 		.word	1073743872
 1142              		.cfi_endproc
 1143              	.LFE82:
 1145              		.section	.text.encenderCelesteMar,"ax",%progbits
 1146              		.align	1
 1147              		.global	encenderCelesteMar
 1148              		.syntax unified
 1149              		.thumb
 1150              		.thumb_func
 1151              		.fpu softvfp
 1153              	encenderCelesteMar:
 1154              	.LFB83:
 176:Core/Inc/myLib.h **** 
 177:Core/Inc/myLib.h **** void encenderCelesteMar()
 178:Core/Inc/myLib.h **** {
 1155              		.loc 1 178 1
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 1160 0000 80B4     		push	{r7}
 1161              	.LCFI82:
 1162              		.cfi_def_cfa_offset 4
 1163              		.cfi_offset 7, -4
 1164 0002 00AF     		add	r7, sp, #0
 1165              	.LCFI83:
 1166              		.cfi_def_cfa_register 7
 179:Core/Inc/myLib.h ****     TIM2->CCR2 = 0;
 1167              		.loc 1 179 9
 1168 0004 4FF08043 		mov	r3, #1073741824
 1169              		.loc 1 179 16
 1170 0008 0022     		movs	r2, #0
 1171 000a 9A63     		str	r2, [r3, #56]
 180:Core/Inc/myLib.h ****     TIM3->CCR2 = 2000 * PASO;
 1172              		.loc 1 180 9
 1173 000c 054B     		ldr	r3, .L63
 1174              		.loc 1 180 16
 1175 000e 4FF47A62 		mov	r2, #4000
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 24


 1176 0012 9A63     		str	r2, [r3, #56]
 181:Core/Inc/myLib.h ****     TIM4->CCR2 = 3000 * PASO;
 1177              		.loc 1 181 9
 1178 0014 044B     		ldr	r3, .L63+4
 1179              		.loc 1 181 16
 1180 0016 41F27072 		movw	r2, #6000
 1181 001a 9A63     		str	r2, [r3, #56]
 182:Core/Inc/myLib.h **** }
 1182              		.loc 1 182 1
 1183 001c 00BF     		nop
 1184 001e BD46     		mov	sp, r7
 1185              	.LCFI84:
 1186              		.cfi_def_cfa_register 13
 1187              		@ sp needed
 1188 0020 80BC     		pop	{r7}
 1189              	.LCFI85:
 1190              		.cfi_restore 7
 1191              		.cfi_def_cfa_offset 0
 1192 0022 7047     		bx	lr
 1193              	.L64:
 1194              		.align	2
 1195              	.L63:
 1196 0024 00040040 		.word	1073742848
 1197 0028 00080040 		.word	1073743872
 1198              		.cfi_endproc
 1199              	.LFE83:
 1201              		.section	.text.encenderVioletaOscuro,"ax",%progbits
 1202              		.align	1
 1203              		.global	encenderVioletaOscuro
 1204              		.syntax unified
 1205              		.thumb
 1206              		.thumb_func
 1207              		.fpu softvfp
 1209              	encenderVioletaOscuro:
 1210              	.LFB84:
 183:Core/Inc/myLib.h **** 
 184:Core/Inc/myLib.h **** void encenderVioletaOscuro()
 185:Core/Inc/myLib.h **** {
 1211              		.loc 1 185 1
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 1, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
 1216 0000 80B4     		push	{r7}
 1217              	.LCFI86:
 1218              		.cfi_def_cfa_offset 4
 1219              		.cfi_offset 7, -4
 1220 0002 00AF     		add	r7, sp, #0
 1221              	.LCFI87:
 1222              		.cfi_def_cfa_register 7
 186:Core/Inc/myLib.h ****     TIM2->CCR2 = 500 * PASO;
 1223              		.loc 1 186 9
 1224 0004 4FF08043 		mov	r3, #1073741824
 1225              		.loc 1 186 16
 1226 0008 4FF47A72 		mov	r2, #1000
 1227 000c 9A63     		str	r2, [r3, #56]
 187:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 25


 1228              		.loc 1 187 9
 1229 000e 054B     		ldr	r3, .L66
 1230              		.loc 1 187 16
 1231 0010 0022     		movs	r2, #0
 1232 0012 9A63     		str	r2, [r3, #56]
 188:Core/Inc/myLib.h ****     TIM4->CCR2 = 3000 * PASO;
 1233              		.loc 1 188 9
 1234 0014 044B     		ldr	r3, .L66+4
 1235              		.loc 1 188 16
 1236 0016 41F27072 		movw	r2, #6000
 1237 001a 9A63     		str	r2, [r3, #56]
 189:Core/Inc/myLib.h **** }
 1238              		.loc 1 189 1
 1239 001c 00BF     		nop
 1240 001e BD46     		mov	sp, r7
 1241              	.LCFI88:
 1242              		.cfi_def_cfa_register 13
 1243              		@ sp needed
 1244 0020 80BC     		pop	{r7}
 1245              	.LCFI89:
 1246              		.cfi_restore 7
 1247              		.cfi_def_cfa_offset 0
 1248 0022 7047     		bx	lr
 1249              	.L67:
 1250              		.align	2
 1251              	.L66:
 1252 0024 00040040 		.word	1073742848
 1253 0028 00080040 		.word	1073743872
 1254              		.cfi_endproc
 1255              	.LFE84:
 1257              		.section	.text.encenderFucsia,"ax",%progbits
 1258              		.align	1
 1259              		.global	encenderFucsia
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1263              		.fpu softvfp
 1265              	encenderFucsia:
 1266              	.LFB85:
 190:Core/Inc/myLib.h **** 
 191:Core/Inc/myLib.h **** void encenderFucsia()
 192:Core/Inc/myLib.h **** {
 1267              		.loc 1 192 1
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 1, uses_anonymous_args = 0
 1271              		@ link register save eliminated.
 1272 0000 80B4     		push	{r7}
 1273              	.LCFI90:
 1274              		.cfi_def_cfa_offset 4
 1275              		.cfi_offset 7, -4
 1276 0002 00AF     		add	r7, sp, #0
 1277              	.LCFI91:
 1278              		.cfi_def_cfa_register 7
 193:Core/Inc/myLib.h ****     TIM2->CCR2 = 3000 * PASO;
 1279              		.loc 1 193 9
 1280 0004 4FF08043 		mov	r3, #1073741824
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 26


 1281              		.loc 1 193 16
 1282 0008 41F27072 		movw	r2, #6000
 1283 000c 9A63     		str	r2, [r3, #56]
 194:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 1284              		.loc 1 194 9
 1285 000e 054B     		ldr	r3, .L69
 1286              		.loc 1 194 16
 1287 0010 0022     		movs	r2, #0
 1288 0012 9A63     		str	r2, [r3, #56]
 195:Core/Inc/myLib.h ****     TIM4->CCR2 = 1500 * PASO;
 1289              		.loc 1 195 9
 1290 0014 044B     		ldr	r3, .L69+4
 1291              		.loc 1 195 16
 1292 0016 40F6B832 		movw	r2, #3000
 1293 001a 9A63     		str	r2, [r3, #56]
 196:Core/Inc/myLib.h **** }
 1294              		.loc 1 196 1
 1295 001c 00BF     		nop
 1296 001e BD46     		mov	sp, r7
 1297              	.LCFI92:
 1298              		.cfi_def_cfa_register 13
 1299              		@ sp needed
 1300 0020 80BC     		pop	{r7}
 1301              	.LCFI93:
 1302              		.cfi_restore 7
 1303              		.cfi_def_cfa_offset 0
 1304 0022 7047     		bx	lr
 1305              	.L70:
 1306              		.align	2
 1307              	.L69:
 1308 0024 00040040 		.word	1073742848
 1309 0028 00080040 		.word	1073743872
 1310              		.cfi_endproc
 1311              	.LFE85:
 1313              		.section	.text.apagarLed,"ax",%progbits
 1314              		.align	1
 1315              		.global	apagarLed
 1316              		.syntax unified
 1317              		.thumb
 1318              		.thumb_func
 1319              		.fpu softvfp
 1321              	apagarLed:
 1322              	.LFB86:
 197:Core/Inc/myLib.h **** 
 198:Core/Inc/myLib.h **** void apagarLed()
 199:Core/Inc/myLib.h **** {
 1323              		.loc 1 199 1
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 0
 1326              		@ frame_needed = 1, uses_anonymous_args = 0
 1327              		@ link register save eliminated.
 1328 0000 80B4     		push	{r7}
 1329              	.LCFI94:
 1330              		.cfi_def_cfa_offset 4
 1331              		.cfi_offset 7, -4
 1332 0002 00AF     		add	r7, sp, #0
 1333              	.LCFI95:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 27


 1334              		.cfi_def_cfa_register 7
 200:Core/Inc/myLib.h ****     TIM2->CCR2 = 0;
 1335              		.loc 1 200 9
 1336 0004 4FF08043 		mov	r3, #1073741824
 1337              		.loc 1 200 16
 1338 0008 0022     		movs	r2, #0
 1339 000a 9A63     		str	r2, [r3, #56]
 201:Core/Inc/myLib.h ****     TIM3->CCR2 = 0;
 1340              		.loc 1 201 9
 1341 000c 044B     		ldr	r3, .L72
 1342              		.loc 1 201 16
 1343 000e 0022     		movs	r2, #0
 1344 0010 9A63     		str	r2, [r3, #56]
 202:Core/Inc/myLib.h ****     TIM4->CCR2 = 0;
 1345              		.loc 1 202 9
 1346 0012 044B     		ldr	r3, .L72+4
 1347              		.loc 1 202 16
 1348 0014 0022     		movs	r2, #0
 1349 0016 9A63     		str	r2, [r3, #56]
 203:Core/Inc/myLib.h **** }
 1350              		.loc 1 203 1
 1351 0018 00BF     		nop
 1352 001a BD46     		mov	sp, r7
 1353              	.LCFI96:
 1354              		.cfi_def_cfa_register 13
 1355              		@ sp needed
 1356 001c 80BC     		pop	{r7}
 1357              	.LCFI97:
 1358              		.cfi_restore 7
 1359              		.cfi_def_cfa_offset 0
 1360 001e 7047     		bx	lr
 1361              	.L73:
 1362              		.align	2
 1363              	.L72:
 1364 0020 00040040 		.word	1073742848
 1365 0024 00080040 		.word	1073743872
 1366              		.cfi_endproc
 1367              	.LFE86:
 1369              		.section	.text.setTo28MHzFromHSE,"ax",%progbits
 1370              		.align	1
 1371              		.global	setTo28MHzFromHSE
 1372              		.syntax unified
 1373              		.thumb
 1374              		.thumb_func
 1375              		.fpu softvfp
 1377              	setTo28MHzFromHSE:
 1378              	.LFB87:
 1379              		.file 2 "Core/Inc/configuraciones.h"
   1:Core/Inc/configuraciones.h **** #ifndef __CONFIGURACIONES
   2:Core/Inc/configuraciones.h **** #define __CONFIGURACIONES
   3:Core/Inc/configuraciones.h **** #include "stm32f1xx.h"
   4:Core/Inc/configuraciones.h **** #include "stm32f103xb.h"
   5:Core/Inc/configuraciones.h **** #include "myLib.h"
   6:Core/Inc/configuraciones.h **** 
   7:Core/Inc/configuraciones.h **** // Configuro la frecuencia del sistema a 28 MHz
   8:Core/Inc/configuraciones.h **** void setTo28MHzFromHSE(void)
   9:Core/Inc/configuraciones.h **** {
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 28


 1380              		.loc 2 9 1
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 0
 1383              		@ frame_needed = 1, uses_anonymous_args = 0
 1384 0000 80B5     		push	{r7, lr}
 1385              	.LCFI98:
 1386              		.cfi_def_cfa_offset 8
 1387              		.cfi_offset 7, -8
 1388              		.cfi_offset 14, -4
 1389 0002 00AF     		add	r7, sp, #0
 1390              	.LCFI99:
 1391              		.cfi_def_cfa_register 7
  10:Core/Inc/configuraciones.h ****   // Para seleccionar, como frecuencia externa de entrada al micro la del cristal de 8 MHz, llamada
  11:Core/Inc/configuraciones.h ****   RCC->CR |= RCC_CR_HSEON;
 1392              		.loc 2 11 11
 1393 0004 364B     		ldr	r3, .L78
 1394 0006 1B68     		ldr	r3, [r3]
 1395 0008 354A     		ldr	r2, .L78
 1396 000a 43F48033 		orr	r3, r3, #65536
 1397 000e 1360     		str	r3, [r2]
  12:Core/Inc/configuraciones.h **** 
  13:Core/Inc/configuraciones.h ****   // Hay que esperar a que se estabilice la señal seleccionada
  14:Core/Inc/configuraciones.h ****   while(!(RCC->CR & RCC_CR_HSERDY));
 1398              		.loc 2 14 8
 1399 0010 00BF     		nop
 1400              	.L75:
 1401              		.loc 2 14 14 discriminator 1
 1402 0012 334B     		ldr	r3, .L78
 1403 0014 1B68     		ldr	r3, [r3]
 1404              		.loc 2 14 19 discriminator 1
 1405 0016 03F40033 		and	r3, r3, #131072
 1406              		.loc 2 14 8 discriminator 1
 1407 001a 002B     		cmp	r3, #0
 1408 001c F9D0     		beq	.L75
  15:Core/Inc/configuraciones.h **** 
  16:Core/Inc/configuraciones.h ****   // Activa un pre-buffer para la próxima instrucción, así se hace más rápida la ejecución
  17:Core/Inc/configuraciones.h ****   FLASH->ACR |= FLASH_ACR_PRFTBE;
 1409              		.loc 2 17 14
 1410 001e 314B     		ldr	r3, .L78+4
 1411 0020 1B68     		ldr	r3, [r3]
 1412 0022 304A     		ldr	r2, .L78+4
 1413 0024 43F01003 		orr	r3, r3, #16
 1414 0028 1360     		str	r3, [r2]
  18:Core/Inc/configuraciones.h ****   
  19:Core/Inc/configuraciones.h ****   // Esta latencia hay que especificarla para que no haya diferencias entre la
  20:Core/Inc/configuraciones.h ****   // velocidad que espera el micro para ejecutar cada instrucción y la que es realmente.
  21:Core/Inc/configuraciones.h ****   // Aquí se especifica particularmente la velocidad que esperamos configurar del SYSCLK.
  22:Core/Inc/configuraciones.h ****   // 0:      0 < SYSCLK < 24 MHz
  23:Core/Inc/configuraciones.h ****   // 1: 24 MHz < SYSCLK < 48 MHz
  24:Core/Inc/configuraciones.h ****   // 2: 48 MHz < SYSCLK <= 72 MHz
  25:Core/Inc/configuraciones.h ****   FLASH->ACR |= FLASH_ACR_LATENCY_1;
 1415              		.loc 2 25 14
 1416 002a 2E4B     		ldr	r3, .L78+4
 1417 002c 1B68     		ldr	r3, [r3]
 1418 002e 2D4A     		ldr	r2, .L78+4
 1419 0030 43F00203 		orr	r3, r3, #2
 1420 0034 1360     		str	r3, [r2]
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 29


  26:Core/Inc/configuraciones.h ****   // ¿Por qué? Porque esperamos configurar una frecuencia de 28 MHz para el SYSCLK
  27:Core/Inc/configuraciones.h **** 
  28:Core/Inc/configuraciones.h ****   // Con esto selecciono si la frecuencia HSE será dividida entre 2 o no.
  29:Core/Inc/configuraciones.h ****   // Aquí particularmente decido que se dividirá. Por lo que se tornará en 4 MHz.
  30:Core/Inc/configuraciones.h ****   // Esta frecuencia de salida se llama PREDIV1
  31:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_PLLXTPRE;
 1421              		.loc 2 31 13
 1422 0036 2A4B     		ldr	r3, .L78
 1423 0038 5B68     		ldr	r3, [r3, #4]
 1424 003a 294A     		ldr	r2, .L78
 1425 003c 43F40033 		orr	r3, r3, #131072
 1426 0040 5360     		str	r3, [r2, #4]
  32:Core/Inc/configuraciones.h **** 
  33:Core/Inc/configuraciones.h ****   // Con este bit selecciono si la frecuencia de salida PLLCLK será HSI o HSE.
  34:Core/Inc/configuraciones.h ****   // Como venimos configurando el HSE, elegimos esa, que en el multiplexor sería un 1.
  35:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_PLLSRC;
 1427              		.loc 2 35 13
 1428 0042 274B     		ldr	r3, .L78
 1429 0044 5B68     		ldr	r3, [r3, #4]
 1430 0046 264A     		ldr	r2, .L78
 1431 0048 43F48033 		orr	r3, r3, #65536
 1432 004c 5360     		str	r3, [r2, #4]
  36:Core/Inc/configuraciones.h **** 
  37:Core/Inc/configuraciones.h ****   // Aquí multiplico el reloj seleccionado por 7 así la señal termina siendo de 28 MHz
  38:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_PLLMULL7;
 1433              		.loc 2 38 13
 1434 004e 244B     		ldr	r3, .L78
 1435 0050 5B68     		ldr	r3, [r3, #4]
 1436 0052 234A     		ldr	r2, .L78
 1437 0054 43F4A013 		orr	r3, r3, #1310720
 1438 0058 5360     		str	r3, [r2, #4]
  39:Core/Inc/configuraciones.h **** 
  40:Core/Inc/configuraciones.h ****   // Con esto dejo que la señal AHB que sale a los periféricos siga siendo de 28 MHz
  41:Core/Inc/configuraciones.h ****   RCC->CFGR &= ~RCC_CFGR_HPRE;
 1439              		.loc 2 41 13
 1440 005a 214B     		ldr	r3, .L78
 1441 005c 5B68     		ldr	r3, [r3, #4]
 1442 005e 204A     		ldr	r2, .L78
 1443 0060 23F0F003 		bic	r3, r3, #240
 1444 0064 5360     		str	r3, [r2, #4]
  42:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 1445              		.loc 2 42 13
 1446 0066 1E4B     		ldr	r3, .L78
 1447 0068 1D4A     		ldr	r2, .L78
 1448 006a 5B68     		ldr	r3, [r3, #4]
 1449 006c 5360     		str	r3, [r2, #4]
  43:Core/Inc/configuraciones.h **** 
  44:Core/Inc/configuraciones.h ****   // Con esto hago que la señal APB1 sea de 28 MHz
  45:Core/Inc/configuraciones.h ****   RCC->CFGR &= ~RCC_CFGR_PPRE1;
 1450              		.loc 2 45 13
 1451 006e 1C4B     		ldr	r3, .L78
 1452 0070 5B68     		ldr	r3, [r3, #4]
 1453 0072 1B4A     		ldr	r2, .L78
 1454 0074 23F4E063 		bic	r3, r3, #1792
 1455 0078 5360     		str	r3, [r2, #4]
  46:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_PPRE1_DIV1;
 1456              		.loc 2 46 13
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 30


 1457 007a 194B     		ldr	r3, .L78
 1458 007c 184A     		ldr	r2, .L78
 1459 007e 5B68     		ldr	r3, [r3, #4]
 1460 0080 5360     		str	r3, [r2, #4]
  47:Core/Inc/configuraciones.h **** 
  48:Core/Inc/configuraciones.h ****   // Con esto hago que la señal APB2 sea de 28 MHz
  49:Core/Inc/configuraciones.h ****   RCC->CFGR &= ~RCC_CFGR_PPRE2;
 1461              		.loc 2 49 13
 1462 0082 174B     		ldr	r3, .L78
 1463 0084 5B68     		ldr	r3, [r3, #4]
 1464 0086 164A     		ldr	r2, .L78
 1465 0088 23F46053 		bic	r3, r3, #14336
 1466 008c 5360     		str	r3, [r2, #4]
  50:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;
 1467              		.loc 2 50 13
 1468 008e 144B     		ldr	r3, .L78
 1469 0090 134A     		ldr	r2, .L78
 1470 0092 5B68     		ldr	r3, [r3, #4]
 1471 0094 5360     		str	r3, [r2, #4]
  51:Core/Inc/configuraciones.h **** 
  52:Core/Inc/configuraciones.h ****   // Enciendo el PLL
  53:Core/Inc/configuraciones.h ****   RCC->CR |= RCC_CR_PLLON;
 1472              		.loc 2 53 11
 1473 0096 124B     		ldr	r3, .L78
 1474 0098 1B68     		ldr	r3, [r3]
 1475 009a 114A     		ldr	r2, .L78
 1476 009c 43F08073 		orr	r3, r3, #16777216
 1477 00a0 1360     		str	r3, [r2]
  54:Core/Inc/configuraciones.h **** 
  55:Core/Inc/configuraciones.h ****   // Espero a que se estabilice la señal del PLL
  56:Core/Inc/configuraciones.h ****   while(!(RCC->CR & RCC_CR_PLLRDY));
 1478              		.loc 2 56 8
 1479 00a2 00BF     		nop
 1480              	.L76:
 1481              		.loc 2 56 14 discriminator 1
 1482 00a4 0E4B     		ldr	r3, .L78
 1483 00a6 1B68     		ldr	r3, [r3]
 1484              		.loc 2 56 19 discriminator 1
 1485 00a8 03F00073 		and	r3, r3, #33554432
 1486              		.loc 2 56 8 discriminator 1
 1487 00ac 002B     		cmp	r3, #0
 1488 00ae F9D0     		beq	.L76
  57:Core/Inc/configuraciones.h **** 
  58:Core/Inc/configuraciones.h ****   // Selecciono como señal SYSCLK a la señal PLLCLK
  59:Core/Inc/configuraciones.h ****   RCC->CFGR &= ~RCC_CFGR_SW;
 1489              		.loc 2 59 13
 1490 00b0 0B4B     		ldr	r3, .L78
 1491 00b2 5B68     		ldr	r3, [r3, #4]
 1492 00b4 0A4A     		ldr	r2, .L78
 1493 00b6 23F00303 		bic	r3, r3, #3
 1494 00ba 5360     		str	r3, [r2, #4]
  60:Core/Inc/configuraciones.h ****   RCC->CFGR |= RCC_CFGR_SW_PLL;
 1495              		.loc 2 60 13
 1496 00bc 084B     		ldr	r3, .L78
 1497 00be 5B68     		ldr	r3, [r3, #4]
 1498 00c0 074A     		ldr	r2, .L78
 1499 00c2 43F00203 		orr	r3, r3, #2
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 31


 1500 00c6 5360     		str	r3, [r2, #4]
  61:Core/Inc/configuraciones.h ****   while(!(RCC->CFGR & RCC_CFGR_SWS_PLL));
 1501              		.loc 2 61 8
 1502 00c8 00BF     		nop
 1503              	.L77:
 1504              		.loc 2 61 14 discriminator 1
 1505 00ca 054B     		ldr	r3, .L78
 1506 00cc 5B68     		ldr	r3, [r3, #4]
 1507              		.loc 2 61 21 discriminator 1
 1508 00ce 03F00803 		and	r3, r3, #8
 1509              		.loc 2 61 8 discriminator 1
 1510 00d2 002B     		cmp	r3, #0
 1511 00d4 F9D0     		beq	.L77
  62:Core/Inc/configuraciones.h **** 
  63:Core/Inc/configuraciones.h ****   // Actualizo finalmente la señal de reloj del sistema (SYSCLK)
  64:Core/Inc/configuraciones.h ****   SystemCoreClockUpdate();
 1512              		.loc 2 64 3
 1513 00d6 FFF7FEFF 		bl	SystemCoreClockUpdate
  65:Core/Inc/configuraciones.h **** }
 1514              		.loc 2 65 1
 1515 00da 00BF     		nop
 1516 00dc 80BD     		pop	{r7, pc}
 1517              	.L79:
 1518 00de 00BF     		.align	2
 1519              	.L78:
 1520 00e0 00100240 		.word	1073876992
 1521 00e4 00200240 		.word	1073881088
 1522              		.cfi_endproc
 1523              	.LFE87:
 1525              		.section	.text.configurarTimerParaLedRgb,"ax",%progbits
 1526              		.align	1
 1527              		.global	configurarTimerParaLedRgb
 1528              		.syntax unified
 1529              		.thumb
 1530              		.thumb_func
 1531              		.fpu softvfp
 1533              	configurarTimerParaLedRgb:
 1534              	.LFB88:
  66:Core/Inc/configuraciones.h **** 
  67:Core/Inc/configuraciones.h **** void configurarTimerParaLedRgb()
  68:Core/Inc/configuraciones.h **** {
 1535              		.loc 2 68 1
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 1, uses_anonymous_args = 0
 1539              		@ link register save eliminated.
 1540 0000 80B4     		push	{r7}
 1541              	.LCFI100:
 1542              		.cfi_def_cfa_offset 4
 1543              		.cfi_offset 7, -4
 1544 0002 00AF     		add	r7, sp, #0
 1545              	.LCFI101:
 1546              		.cfi_def_cfa_register 7
  69:Core/Inc/configuraciones.h ****   
  70:Core/Inc/configuraciones.h **** }
 1547              		.loc 2 70 1
 1548 0004 00BF     		nop
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 32


 1549 0006 BD46     		mov	sp, r7
 1550              	.LCFI102:
 1551              		.cfi_def_cfa_register 13
 1552              		@ sp needed
 1553 0008 80BC     		pop	{r7}
 1554              	.LCFI103:
 1555              		.cfi_restore 7
 1556              		.cfi_def_cfa_offset 0
 1557 000a 7047     		bx	lr
 1558              		.cfi_endproc
 1559              	.LFE88:
 1561              		.section	.text.configurarTIM1,"ax",%progbits
 1562              		.align	1
 1563              		.global	configurarTIM1
 1564              		.syntax unified
 1565              		.thumb
 1566              		.thumb_func
 1567              		.fpu softvfp
 1569              	configurarTIM1:
 1570              	.LFB89:
  71:Core/Inc/configuraciones.h **** 
  72:Core/Inc/configuraciones.h **** // Timer usado para notificar un error con el LED de la placa
  73:Core/Inc/configuraciones.h **** void configurarTIM1(void)
  74:Core/Inc/configuraciones.h **** {
 1571              		.loc 2 74 1
 1572              		.cfi_startproc
 1573              		@ args = 0, pretend = 0, frame = 8
 1574              		@ frame_needed = 1, uses_anonymous_args = 0
 1575              		@ link register save eliminated.
 1576 0000 80B4     		push	{r7}
 1577              	.LCFI104:
 1578              		.cfi_def_cfa_offset 4
 1579              		.cfi_offset 7, -4
 1580 0002 83B0     		sub	sp, sp, #12
 1581              	.LCFI105:
 1582              		.cfi_def_cfa_offset 16
 1583 0004 00AF     		add	r7, sp, #0
 1584              	.LCFI106:
 1585              		.cfi_def_cfa_register 7
  75:Core/Inc/configuraciones.h ****   __asm__ volatile ("cpsid i");
 1586              		.loc 2 75 3
 1587              		.syntax unified
 1588              	@ 75 "Core/Inc/configuraciones.h" 1
 1589 0006 72B6     		cpsid i
 1590              	@ 0 "" 2
  76:Core/Inc/configuraciones.h **** 
  77:Core/Inc/configuraciones.h ****   // Habilito la entrada de reloj para el Timer 1
  78:Core/Inc/configuraciones.h ****   RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;
 1591              		.loc 2 78 16
 1592              		.thumb
 1593              		.syntax unified
 1594 0008 1A4B     		ldr	r3, .L82
 1595 000a 9B69     		ldr	r3, [r3, #24]
 1596 000c 194A     		ldr	r2, .L82
 1597 000e 43F40063 		orr	r3, r3, #2048
 1598 0012 9361     		str	r3, [r2, #24]
  79:Core/Inc/configuraciones.h **** 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 33


  80:Core/Inc/configuraciones.h ****   uint32_t frecuencia_CNT = 1000;
 1599              		.loc 2 80 12
 1600 0014 4FF47A73 		mov	r3, #1000
 1601 0018 7B60     		str	r3, [r7, #4]
  81:Core/Inc/configuraciones.h **** 
  82:Core/Inc/configuraciones.h ****   // Con esto consigo una frecuencia de 1 kHz para el contador
  83:Core/Inc/configuraciones.h ****   // Así, si la frecuencia de entrada al timer es de 28 MHz, el PSC tendrá el valor 1000
  84:Core/Inc/configuraciones.h ****   TIM1->PSC = SystemCoreClock / frecuencia_CNT - 1;
 1602              		.loc 2 84 31
 1603 001a 174B     		ldr	r3, .L82+4
 1604 001c 1A68     		ldr	r2, [r3]
 1605 001e 7B68     		ldr	r3, [r7, #4]
 1606 0020 B2FBF3F3 		udiv	r3, r2, r3
 1607              		.loc 2 84 7
 1608 0024 154A     		ldr	r2, .L82+8
 1609              		.loc 2 84 48
 1610 0026 013B     		subs	r3, r3, #1
 1611              		.loc 2 84 13
 1612 0028 9362     		str	r3, [r2, #40]
  85:Core/Inc/configuraciones.h ****   // Con esto consigo un período de 0.5 s
  86:Core/Inc/configuraciones.h ****   TIM1->ARR = 500;
 1613              		.loc 2 86 7
 1614 002a 144B     		ldr	r3, .L82+8
 1615              		.loc 2 86 13
 1616 002c 4FF4FA72 		mov	r2, #500
 1617 0030 DA62     		str	r2, [r3, #44]
  87:Core/Inc/configuraciones.h **** 
  88:Core/Inc/configuraciones.h ****   // Hago que los eventos como el desborde generen pedido de interrupción
  89:Core/Inc/configuraciones.h ****   TIM1->DIER = TIM_DIER_UIE;
 1618              		.loc 2 89 7
 1619 0032 124B     		ldr	r3, .L82+8
 1620              		.loc 2 89 14
 1621 0034 0122     		movs	r2, #1
 1622 0036 DA60     		str	r2, [r3, #12]
  90:Core/Inc/configuraciones.h **** 
  91:Core/Inc/configuraciones.h ****   TIM1->CR1 = 0;
 1623              		.loc 2 91 7
 1624 0038 104B     		ldr	r3, .L82+8
 1625              		.loc 2 91 13
 1626 003a 0022     		movs	r2, #0
 1627 003c 1A60     		str	r2, [r3]
  92:Core/Inc/configuraciones.h **** 
  93:Core/Inc/configuraciones.h ****   NVIC->ISER[0] |= 1 << TIM1_UP_IRQn;
 1628              		.loc 2 93 17
 1629 003e 104B     		ldr	r3, .L82+12
 1630 0040 1B68     		ldr	r3, [r3]
 1631 0042 0F4A     		ldr	r2, .L82+12
 1632 0044 43F00073 		orr	r3, r3, #33554432
 1633 0048 1360     		str	r3, [r2]
  94:Core/Inc/configuraciones.h ****   NVIC->ICPR[0] |= 1 << TIM1_UP_IRQn;
 1634              		.loc 2 94 17
 1635 004a 0D4B     		ldr	r3, .L82+12
 1636 004c D3F88031 		ldr	r3, [r3, #384]
 1637 0050 0B4A     		ldr	r2, .L82+12
 1638 0052 43F00073 		orr	r3, r3, #33554432
 1639 0056 C2F88031 		str	r3, [r2, #384]
  95:Core/Inc/configuraciones.h ****   
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 34


  96:Core/Inc/configuraciones.h ****   TIM1->CR1 = TIM_CR1_CEN;
 1640              		.loc 2 96 7
 1641 005a 084B     		ldr	r3, .L82+8
 1642              		.loc 2 96 13
 1643 005c 0122     		movs	r2, #1
 1644 005e 1A60     		str	r2, [r3]
  97:Core/Inc/configuraciones.h ****   TIM1->SR = 0;
 1645              		.loc 2 97 7
 1646 0060 064B     		ldr	r3, .L82+8
 1647              		.loc 2 97 12
 1648 0062 0022     		movs	r2, #0
 1649 0064 1A61     		str	r2, [r3, #16]
  98:Core/Inc/configuraciones.h **** 
  99:Core/Inc/configuraciones.h ****   __asm__ volatile ("cpsie i");
 1650              		.loc 2 99 3
 1651              		.syntax unified
 1652              	@ 99 "Core/Inc/configuraciones.h" 1
 1653 0066 62B6     		cpsie i
 1654              	@ 0 "" 2
 100:Core/Inc/configuraciones.h **** }
 1655              		.loc 2 100 1
 1656              		.thumb
 1657              		.syntax unified
 1658 0068 00BF     		nop
 1659 006a 0C37     		adds	r7, r7, #12
 1660              	.LCFI107:
 1661              		.cfi_def_cfa_offset 4
 1662 006c BD46     		mov	sp, r7
 1663              	.LCFI108:
 1664              		.cfi_def_cfa_register 13
 1665              		@ sp needed
 1666 006e 80BC     		pop	{r7}
 1667              	.LCFI109:
 1668              		.cfi_restore 7
 1669              		.cfi_def_cfa_offset 0
 1670 0070 7047     		bx	lr
 1671              	.L83:
 1672 0072 00BF     		.align	2
 1673              	.L82:
 1674 0074 00100240 		.word	1073876992
 1675 0078 00000000 		.word	SystemCoreClock
 1676 007c 002C0140 		.word	1073818624
 1677 0080 00E100E0 		.word	-536813312
 1678              		.cfi_endproc
 1679              	.LFE89:
 1681              		.section	.text.configurarUSART1,"ax",%progbits
 1682              		.align	1
 1683              		.global	configurarUSART1
 1684              		.syntax unified
 1685              		.thumb
 1686              		.thumb_func
 1687              		.fpu softvfp
 1689              	configurarUSART1:
 1690              	.LFB90:
 101:Core/Inc/configuraciones.h **** 
 102:Core/Inc/configuraciones.h **** // Configurar la USART usada para el módulo Bluetooth
 103:Core/Inc/configuraciones.h **** void configurarUSART1()
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 35


 104:Core/Inc/configuraciones.h **** {
 1691              		.loc 2 104 1
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 1, uses_anonymous_args = 0
 1695              		@ link register save eliminated.
 1696 0000 80B4     		push	{r7}
 1697              	.LCFI110:
 1698              		.cfi_def_cfa_offset 4
 1699              		.cfi_offset 7, -4
 1700 0002 00AF     		add	r7, sp, #0
 1701              	.LCFI111:
 1702              		.cfi_def_cfa_register 7
 105:Core/Inc/configuraciones.h ****   // Esto hace que se divida en 45.57 la frecuencia de 28 MHz.
 106:Core/Inc/configuraciones.h ****   // De esta manera obtendría una velocidad de transmisión/recepción de 38400 bps.
 107:Core/Inc/configuraciones.h ****   USART1->BRR = 0x02D9;
 1703              		.loc 2 107 9
 1704 0004 0F4B     		ldr	r3, .L85
 1705              		.loc 2 107 15
 1706 0006 40F2D922 		movw	r2, #729
 1707 000a 9A60     		str	r2, [r3, #8]
 108:Core/Inc/configuraciones.h **** 
 109:Core/Inc/configuraciones.h ****   USART1->CR2 = 0;
 1708              		.loc 2 109 9
 1709 000c 0D4B     		ldr	r3, .L85
 1710              		.loc 2 109 15
 1711 000e 0022     		movs	r2, #0
 1712 0010 1A61     		str	r2, [r3, #16]
 110:Core/Inc/configuraciones.h ****   // Habilito las interrupciones por error
 111:Core/Inc/configuraciones.h ****   USART1->CR3 = USART_CR3_EIE;
 1713              		.loc 2 111 9
 1714 0012 0C4B     		ldr	r3, .L85
 1715              		.loc 2 111 15
 1716 0014 0122     		movs	r2, #1
 1717 0016 5A61     		str	r2, [r3, #20]
 112:Core/Inc/configuraciones.h ****   // Habilito la USART, el recibimiento de datos y la transmisión de datos.
 113:Core/Inc/configuraciones.h ****   // Implícitamente además, estoy haciendo que lo que se mande sea:
 114:Core/Inc/configuraciones.h ****   //      - 1 bit de start
 115:Core/Inc/configuraciones.h ****   //      - 8 bits de datos
 116:Core/Inc/configuraciones.h ****   //      - 1 bit de stop
 117:Core/Inc/configuraciones.h ****   //      - sin paridad
 118:Core/Inc/configuraciones.h ****   USART1->CR1 = USART_CR1_UE | USART_CR1_RE | USART_CR1_TE | USART_CR1_RXNEIE;
 1718              		.loc 2 118 9
 1719 0018 0A4B     		ldr	r3, .L85
 1720              		.loc 2 118 15
 1721 001a 42F22C02 		movw	r2, #8236
 1722 001e DA60     		str	r2, [r3, #12]
 119:Core/Inc/configuraciones.h **** 
 120:Core/Inc/configuraciones.h ****   NVIC->ISER[1] |= 1 << (USART1_IRQn - 32);
 1723              		.loc 2 120 17
 1724 0020 094B     		ldr	r3, .L85+4
 1725 0022 5B68     		ldr	r3, [r3, #4]
 1726 0024 084A     		ldr	r2, .L85+4
 1727 0026 43F02003 		orr	r3, r3, #32
 1728 002a 5360     		str	r3, [r2, #4]
 121:Core/Inc/configuraciones.h ****   NVIC->ICPR[1] |= 1 << (USART1_IRQn - 32);
 1729              		.loc 2 121 17
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 36


 1730 002c 064B     		ldr	r3, .L85+4
 1731 002e D3F88431 		ldr	r3, [r3, #388]
 1732 0032 054A     		ldr	r2, .L85+4
 1733 0034 43F02003 		orr	r3, r3, #32
 1734 0038 C2F88431 		str	r3, [r2, #388]
 122:Core/Inc/configuraciones.h **** }
 1735              		.loc 2 122 1
 1736 003c 00BF     		nop
 1737 003e BD46     		mov	sp, r7
 1738              	.LCFI112:
 1739              		.cfi_def_cfa_register 13
 1740              		@ sp needed
 1741 0040 80BC     		pop	{r7}
 1742              	.LCFI113:
 1743              		.cfi_restore 7
 1744              		.cfi_def_cfa_offset 0
 1745 0042 7047     		bx	lr
 1746              	.L86:
 1747              		.align	2
 1748              	.L85:
 1749 0044 00380140 		.word	1073821696
 1750 0048 00E100E0 		.word	-536813312
 1751              		.cfi_endproc
 1752              	.LFE90:
 1754              		.section	.text.configurarUSART2,"ax",%progbits
 1755              		.align	1
 1756              		.global	configurarUSART2
 1757              		.syntax unified
 1758              		.thumb
 1759              		.thumb_func
 1760              		.fpu softvfp
 1762              	configurarUSART2:
 1763              	.LFB91:
 123:Core/Inc/configuraciones.h **** 
 124:Core/Inc/configuraciones.h **** void configurarUSART2()
 125:Core/Inc/configuraciones.h **** {
 1764              		.loc 2 125 1
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 1, uses_anonymous_args = 0
 1768              		@ link register save eliminated.
 1769 0000 80B4     		push	{r7}
 1770              	.LCFI114:
 1771              		.cfi_def_cfa_offset 4
 1772              		.cfi_offset 7, -4
 1773 0002 00AF     		add	r7, sp, #0
 1774              	.LCFI115:
 1775              		.cfi_def_cfa_register 7
 126:Core/Inc/configuraciones.h ****   // Esto hace que se divida en 45.57 la frecuencia de 28 MHz.
 127:Core/Inc/configuraciones.h ****   // De esta manera obtendría una velocidad de transmisión/recepción de 38400 bps.
 128:Core/Inc/configuraciones.h ****   USART2->BRR = 0x02D9;
 1776              		.loc 2 128 9
 1777 0004 0F4B     		ldr	r3, .L88
 1778              		.loc 2 128 15
 1779 0006 40F2D922 		movw	r2, #729
 1780 000a 9A60     		str	r2, [r3, #8]
 129:Core/Inc/configuraciones.h **** 
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 37


 130:Core/Inc/configuraciones.h ****   USART2->CR2 = 0;
 1781              		.loc 2 130 9
 1782 000c 0D4B     		ldr	r3, .L88
 1783              		.loc 2 130 15
 1784 000e 0022     		movs	r2, #0
 1785 0010 1A61     		str	r2, [r3, #16]
 131:Core/Inc/configuraciones.h ****   // Habilito las interrupciones por error
 132:Core/Inc/configuraciones.h ****   USART2->CR3 = USART_CR3_EIE;
 1786              		.loc 2 132 9
 1787 0012 0C4B     		ldr	r3, .L88
 1788              		.loc 2 132 15
 1789 0014 0122     		movs	r2, #1
 1790 0016 5A61     		str	r2, [r3, #20]
 133:Core/Inc/configuraciones.h ****   // Habilito la USART, el recibimiento de datos y la transmisión de datos.
 134:Core/Inc/configuraciones.h ****   // Implícitamente además, estoy haciendo que lo que se mande sea:
 135:Core/Inc/configuraciones.h ****   //      - 1 bit de start
 136:Core/Inc/configuraciones.h ****   //      - 8 bits de datos
 137:Core/Inc/configuraciones.h ****   //      - 1 bit de stop
 138:Core/Inc/configuraciones.h ****   //      - sin paridad
 139:Core/Inc/configuraciones.h ****   USART2->CR1 = USART_CR1_UE | USART_CR1_RE | USART_CR1_TE | USART_CR1_RXNEIE;
 1791              		.loc 2 139 9
 1792 0018 0A4B     		ldr	r3, .L88
 1793              		.loc 2 139 15
 1794 001a 42F22C02 		movw	r2, #8236
 1795 001e DA60     		str	r2, [r3, #12]
 140:Core/Inc/configuraciones.h **** 
 141:Core/Inc/configuraciones.h ****   NVIC->ISER[1] |= 1 << (USART2_IRQn - 32);
 1796              		.loc 2 141 17
 1797 0020 094B     		ldr	r3, .L88+4
 1798 0022 5B68     		ldr	r3, [r3, #4]
 1799 0024 084A     		ldr	r2, .L88+4
 1800 0026 43F04003 		orr	r3, r3, #64
 1801 002a 5360     		str	r3, [r2, #4]
 142:Core/Inc/configuraciones.h ****   NVIC->ICPR[1] |= 1 << (USART2_IRQn - 32);
 1802              		.loc 2 142 17
 1803 002c 064B     		ldr	r3, .L88+4
 1804 002e D3F88431 		ldr	r3, [r3, #388]
 1805 0032 054A     		ldr	r2, .L88+4
 1806 0034 43F04003 		orr	r3, r3, #64
 1807 0038 C2F88431 		str	r3, [r2, #388]
 143:Core/Inc/configuraciones.h **** }
 1808              		.loc 2 143 1
 1809 003c 00BF     		nop
 1810 003e BD46     		mov	sp, r7
 1811              	.LCFI116:
 1812              		.cfi_def_cfa_register 13
 1813              		@ sp needed
 1814 0040 80BC     		pop	{r7}
 1815              	.LCFI117:
 1816              		.cfi_restore 7
 1817              		.cfi_def_cfa_offset 0
 1818 0042 7047     		bx	lr
 1819              	.L89:
 1820              		.align	2
 1821              	.L88:
 1822 0044 00440040 		.word	1073759232
 1823 0048 00E100E0 		.word	-536813312
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 38


 1824              		.cfi_endproc
 1825              	.LFE91:
 1827              		.section	.text.configurarPuertos,"ax",%progbits
 1828              		.align	1
 1829              		.global	configurarPuertos
 1830              		.syntax unified
 1831              		.thumb
 1832              		.thumb_func
 1833              		.fpu softvfp
 1835              	configurarPuertos:
 1836              	.LFB92:
 144:Core/Inc/configuraciones.h **** 
 145:Core/Inc/configuraciones.h **** void configurarPuertos()
 146:Core/Inc/configuraciones.h **** {
 1837              		.loc 2 146 1
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 0
 1840              		@ frame_needed = 1, uses_anonymous_args = 0
 1841              		@ link register save eliminated.
 1842 0000 80B4     		push	{r7}
 1843              	.LCFI118:
 1844              		.cfi_def_cfa_offset 4
 1845              		.cfi_offset 7, -4
 1846 0002 00AF     		add	r7, sp, #0
 1847              	.LCFI119:
 1848              		.cfi_def_cfa_register 7
 147:Core/Inc/configuraciones.h ****   RCC->APB2ENR |= RCC_APB2ENR_AFIOEN | RCC_APB2ENR_USART1EN | RCC_APB2ENR_IOPCEN | RCC_APB2ENR_IOPA
 1849              		.loc 2 147 16
 1850 0004 104B     		ldr	r3, .L91
 1851 0006 9B69     		ldr	r3, [r3, #24]
 1852 0008 0F4A     		ldr	r2, .L91
 1853 000a 43F48043 		orr	r3, r3, #16384
 1854 000e 43F01503 		orr	r3, r3, #21
 1855 0012 9361     		str	r3, [r2, #24]
 148:Core/Inc/configuraciones.h ****   RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 1856              		.loc 2 148 16
 1857 0014 0C4B     		ldr	r3, .L91
 1858 0016 DB69     		ldr	r3, [r3, #28]
 1859 0018 0B4A     		ldr	r2, .L91
 1860 001a 43F40033 		orr	r3, r3, #131072
 1861 001e D361     		str	r3, [r2, #28]
 149:Core/Inc/configuraciones.h **** 
 150:Core/Inc/configuraciones.h ****   // Se configura como salida TX el puerto A9 y como RX el puerto A10
 151:Core/Inc/configuraciones.h ****   GPIOA->CRH = GPIO_CRH_CNF9_1 | GPIO_CRH_MODE9_1 |
 1862              		.loc 2 151 8
 1863 0020 0A4B     		ldr	r3, .L91+4
 1864              		.loc 2 151 14
 1865 0022 4FF40A62 		mov	r2, #2208
 1866 0026 5A60     		str	r2, [r3, #4]
 152:Core/Inc/configuraciones.h ****                 GPIO_CRH_CNF10_1;
 153:Core/Inc/configuraciones.h **** 
 154:Core/Inc/configuraciones.h ****   // Se configura como salida TX el puerto A2 y como RX el puerto A3
 155:Core/Inc/configuraciones.h ****   GPIOA->CRL = GPIO_CRL_CNF2_1 | GPIO_CRL_MODE2_1 |
 1867              		.loc 2 155 8
 1868 0028 084B     		ldr	r3, .L91+4
 1869              		.loc 2 155 14
 1870 002a 4FF40A42 		mov	r2, #35328
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 39


 1871 002e 1A60     		str	r2, [r3]
 156:Core/Inc/configuraciones.h ****                 GPIO_CRL_CNF3_1;
 157:Core/Inc/configuraciones.h **** 
 158:Core/Inc/configuraciones.h ****   GPIOC->CRH = GPIO_CRH_MODE13_1;
 1872              		.loc 2 158 8
 1873 0030 074B     		ldr	r3, .L91+8
 1874              		.loc 2 158 14
 1875 0032 4FF40012 		mov	r2, #2097152
 1876 0036 5A60     		str	r2, [r3, #4]
 159:Core/Inc/configuraciones.h ****   GPIOC->ODR = GPIO_ODR_ODR13;
 1877              		.loc 2 159 8
 1878 0038 054B     		ldr	r3, .L91+8
 1879              		.loc 2 159 14
 1880 003a 4FF40052 		mov	r2, #8192
 1881 003e DA60     		str	r2, [r3, #12]
 160:Core/Inc/configuraciones.h **** }
 1882              		.loc 2 160 1
 1883 0040 00BF     		nop
 1884 0042 BD46     		mov	sp, r7
 1885              	.LCFI120:
 1886              		.cfi_def_cfa_register 13
 1887              		@ sp needed
 1888 0044 80BC     		pop	{r7}
 1889              	.LCFI121:
 1890              		.cfi_restore 7
 1891              		.cfi_def_cfa_offset 0
 1892 0046 7047     		bx	lr
 1893              	.L92:
 1894              		.align	2
 1895              	.L91:
 1896 0048 00100240 		.word	1073876992
 1897 004c 00080140 		.word	1073809408
 1898 0050 00100140 		.word	1073811456
 1899              		.cfi_endproc
 1900              	.LFE92:
 1902              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 1903              		.align	1
 1904              		.global	TIM1_UP_IRQHandler
 1905              		.syntax unified
 1906              		.thumb
 1907              		.thumb_func
 1908              		.fpu softvfp
 1910              	TIM1_UP_IRQHandler:
 1911              	.LFB96:
 1912              		.file 3 "Core/Inc/rutinas_de_interrupcion.h"
   1:Core/Inc/rutinas_de_interrupcion.h **** #include "stm32f1xx.h"
   2:Core/Inc/rutinas_de_interrupcion.h **** #include "stm32f103xb.h"
   3:Core/Inc/rutinas_de_interrupcion.h **** #include "myLib.h"
   4:Core/Inc/rutinas_de_interrupcion.h **** #include <string.h>
   5:Core/Inc/rutinas_de_interrupcion.h **** #include <stdlib.h>
   6:Core/Inc/rutinas_de_interrupcion.h **** #include <stdio.h>
   7:Core/Inc/rutinas_de_interrupcion.h **** 
   8:Core/Inc/rutinas_de_interrupcion.h **** void TIM1_UP_IRQHandler()
   9:Core/Inc/rutinas_de_interrupcion.h **** {
 1913              		.loc 3 9 1
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 40


 1916              		@ frame_needed = 1, uses_anonymous_args = 0
 1917              		@ link register save eliminated.
 1918 0000 80B4     		push	{r7}
 1919              	.LCFI122:
 1920              		.cfi_def_cfa_offset 4
 1921              		.cfi_offset 7, -4
 1922 0002 00AF     		add	r7, sp, #0
 1923              	.LCFI123:
 1924              		.cfi_def_cfa_register 7
  10:Core/Inc/rutinas_de_interrupcion.h ****   TIM1->SR = 0;
 1925              		.loc 3 10 7
 1926 0004 064B     		ldr	r3, .L94
 1927              		.loc 3 10 12
 1928 0006 0022     		movs	r2, #0
 1929 0008 1A61     		str	r2, [r3, #16]
  11:Core/Inc/rutinas_de_interrupcion.h ****   
  12:Core/Inc/rutinas_de_interrupcion.h ****   GPIOC->ODR ^= GPIO_ODR_ODR13;
 1930              		.loc 3 12 14
 1931 000a 064B     		ldr	r3, .L94+4
 1932 000c DB68     		ldr	r3, [r3, #12]
 1933 000e 054A     		ldr	r2, .L94+4
 1934 0010 83F40053 		eor	r3, r3, #8192
 1935 0014 D360     		str	r3, [r2, #12]
  13:Core/Inc/rutinas_de_interrupcion.h **** }
 1936              		.loc 3 13 1
 1937 0016 00BF     		nop
 1938 0018 BD46     		mov	sp, r7
 1939              	.LCFI124:
 1940              		.cfi_def_cfa_register 13
 1941              		@ sp needed
 1942 001a 80BC     		pop	{r7}
 1943              	.LCFI125:
 1944              		.cfi_restore 7
 1945              		.cfi_def_cfa_offset 0
 1946 001c 7047     		bx	lr
 1947              	.L95:
 1948 001e 00BF     		.align	2
 1949              	.L94:
 1950 0020 002C0140 		.word	1073818624
 1951 0024 00100140 		.word	1073811456
 1952              		.cfi_endproc
 1953              	.LFE96:
 1955              		.section	.rodata
 1956              		.align	2
 1957              	.LC0:
 1958 0000 70617274 		.ascii	"party\015\012\000"
 1958      790D0A00 
 1959              		.align	2
 1960              	.LC1:
 1961 0008 6F66660D 		.ascii	"off\015\012\000"
 1961      0A00
 1962 000e 0000     		.align	2
 1963              	.LC2:
 1964 0010 720D0A00 		.ascii	"r\015\012\000"
 1965              		.align	2
 1966              	.LC3:
 1967 0014 670D0A00 		.ascii	"g\015\012\000"
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 41


 1968              		.align	2
 1969              	.LC4:
 1970 0018 620D0A00 		.ascii	"b\015\012\000"
 1971              		.align	2
 1972              	.LC5:
 1973 001c 6F72616E 		.ascii	"orange\015\012\000"
 1973      67650D0A 
 1973      00
 1974 0025 000000   		.align	2
 1975              	.LC6:
 1976 0028 79656C6C 		.ascii	"yellow\015\012\000"
 1976      6F770D0A 
 1976      00
 1977 0031 000000   		.align	2
 1978              	.LC7:
 1979 0034 666C756F 		.ascii	"fluor\015\012\000"
 1979      720D0A00 
 1980              		.align	2
 1981              	.LC8:
 1982 003c 70696E6B 		.ascii	"pink\015\012\000"
 1982      0D0A00
 1983 0043 00       		.align	2
 1984              	.LC9:
 1985 0044 66756368 		.ascii	"fuchsia\015\012\000"
 1985      7369610D 
 1985      0A00
 1986 004e 0000     		.align	2
 1987              	.LC10:
 1988 0050 70757270 		.ascii	"purple\015\012\000"
 1988      6C650D0A 
 1988      00
 1989 0059 000000   		.align	2
 1990              	.LC11:
 1991 005c 76696F6C 		.ascii	"violet\015\012\000"
 1991      65740D0A 
 1991      00
 1992 0065 000000   		.align	2
 1993              	.LC12:
 1994 0068 6461726B 		.ascii	"dark purple\015\012\000"
 1994      20707572 
 1994      706C650D 
 1994      0A00
 1995 0076 0000     		.align	2
 1996              	.LC13:
 1997 0078 6379616E 		.ascii	"cyan\015\012\000"
 1997      0D0A00
 1998 007f 00       		.align	2
 1999              	.LC14:
 2000 0080 73656120 		.ascii	"sea cyan\015\012\000"
 2000      6379616E 
 2000      0D0A00
 2001 008b 00       		.align	2
 2002              	.LC15:
 2003 008c 7265640D 		.ascii	"red\015\012\000"
 2003      0A00
 2004 0092 0000     		.align	2
 2005              	.LC16:
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 42


 2006 0094 67726565 		.ascii	"green\015\012\000"
 2006      6E0D0A00 
 2007              		.align	2
 2008              	.LC17:
 2009 009c 626C7565 		.ascii	"blue\015\012\000"
 2009      0D0A00
 2010 00a3 00       		.align	2
 2011              	.LC18:
 2012 00a4 77686974 		.ascii	"white\015\012\000"
 2012      650D0A00 
 2013              		.section	.text.USART1_IRQHandler,"ax",%progbits
 2014              		.align	1
 2015              		.global	USART1_IRQHandler
 2016              		.syntax unified
 2017              		.thumb
 2018              		.thumb_func
 2019              		.fpu softvfp
 2021              	USART1_IRQHandler:
 2022              	.LFB97:
  14:Core/Inc/rutinas_de_interrupcion.h **** 
  15:Core/Inc/rutinas_de_interrupcion.h **** void USART1_IRQHandler()
  16:Core/Inc/rutinas_de_interrupcion.h **** {
 2023              		.loc 3 16 1
 2024              		.cfi_startproc
 2025              		@ args = 0, pretend = 0, frame = 16
 2026              		@ frame_needed = 1, uses_anonymous_args = 0
 2027 0000 80B5     		push	{r7, lr}
 2028              	.LCFI126:
 2029              		.cfi_def_cfa_offset 8
 2030              		.cfi_offset 7, -8
 2031              		.cfi_offset 14, -4
 2032 0002 84B0     		sub	sp, sp, #16
 2033              	.LCFI127:
 2034              		.cfi_def_cfa_offset 24
 2035 0004 00AF     		add	r7, sp, #0
 2036              	.LCFI128:
 2037              		.cfi_def_cfa_register 7
  17:Core/Inc/rutinas_de_interrupcion.h ****   uint32_t estado = USART1->SR;
 2038              		.loc 3 17 27
 2039 0006 9E4B     		ldr	r3, .L130
 2040              		.loc 3 17 12
 2041 0008 1B68     		ldr	r3, [r3]
 2042 000a BB60     		str	r3, [r7, #8]
  18:Core/Inc/rutinas_de_interrupcion.h ****   
  19:Core/Inc/rutinas_de_interrupcion.h ****   if(estado & USART_SR_FE)
 2043              		.loc 3 19 13
 2044 000c BB68     		ldr	r3, [r7, #8]
 2045 000e 03F00203 		and	r3, r3, #2
 2046              		.loc 3 19 5
 2047 0012 002B     		cmp	r3, #0
 2048 0014 09D0     		beq	.L97
  20:Core/Inc/rutinas_de_interrupcion.h ****   {
  21:Core/Inc/rutinas_de_interrupcion.h ****     msParpadeoLedPlaca(50);
 2049              		.loc 3 21 5
 2050 0016 3220     		movs	r0, #50
 2051 0018 FFF7FEFF 		bl	msParpadeoLedPlaca
  22:Core/Inc/rutinas_de_interrupcion.h ****     parpadearLedPlacaVeces(4);
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 43


 2052              		.loc 3 22 5
 2053 001c 4FF00400 		mov	r0, #4
 2054 0020 4FF00001 		mov	r1, #0
 2055 0024 FFF7FEFF 		bl	parpadearLedPlacaVeces
 2056 0028 18E0     		b	.L98
 2057              	.L97:
  23:Core/Inc/rutinas_de_interrupcion.h ****   }
  24:Core/Inc/rutinas_de_interrupcion.h ****   else if(estado & USART_SR_PE)
 2058              		.loc 3 24 18
 2059 002a BB68     		ldr	r3, [r7, #8]
 2060 002c 03F00103 		and	r3, r3, #1
 2061              		.loc 3 24 10
 2062 0030 002B     		cmp	r3, #0
 2063 0032 09D0     		beq	.L99
  25:Core/Inc/rutinas_de_interrupcion.h ****   {
  26:Core/Inc/rutinas_de_interrupcion.h ****     msParpadeoLedPlaca(150);
 2064              		.loc 3 26 5
 2065 0034 9620     		movs	r0, #150
 2066 0036 FFF7FEFF 		bl	msParpadeoLedPlaca
  27:Core/Inc/rutinas_de_interrupcion.h ****     parpadearLedPlacaVeces(3);
 2067              		.loc 3 27 5
 2068 003a 4FF00300 		mov	r0, #3
 2069 003e 4FF00001 		mov	r1, #0
 2070 0042 FFF7FEFF 		bl	parpadearLedPlacaVeces
 2071 0046 09E0     		b	.L98
 2072              	.L99:
  28:Core/Inc/rutinas_de_interrupcion.h ****   }
  29:Core/Inc/rutinas_de_interrupcion.h ****   else if(estado & USART_SR_NE)
 2073              		.loc 3 29 18
 2074 0048 BB68     		ldr	r3, [r7, #8]
 2075 004a 03F00403 		and	r3, r3, #4
 2076              		.loc 3 29 10
 2077 004e 002B     		cmp	r3, #0
 2078 0050 04D0     		beq	.L98
  30:Core/Inc/rutinas_de_interrupcion.h ****   {
  31:Core/Inc/rutinas_de_interrupcion.h ****     msParpadeoLedPlaca(250);
 2079              		.loc 3 31 5
 2080 0052 FA20     		movs	r0, #250
 2081 0054 FFF7FEFF 		bl	msParpadeoLedPlaca
  32:Core/Inc/rutinas_de_interrupcion.h ****     parpadearLedPlaca();
 2082              		.loc 3 32 5
 2083 0058 FFF7FEFF 		bl	parpadearLedPlaca
 2084              	.L98:
  33:Core/Inc/rutinas_de_interrupcion.h ****   }
  34:Core/Inc/rutinas_de_interrupcion.h **** 
  35:Core/Inc/rutinas_de_interrupcion.h ****   uint8_t dato = USART1->DR;
 2085              		.loc 3 35 24
 2086 005c 884B     		ldr	r3, .L130
 2087 005e 5B68     		ldr	r3, [r3, #4]
 2088              		.loc 3 35 11
 2089 0060 FB71     		strb	r3, [r7, #7]
  36:Core/Inc/rutinas_de_interrupcion.h **** 
  37:Core/Inc/rutinas_de_interrupcion.h ****   if(dato == 0xFE)
 2090              		.loc 3 37 5
 2091 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2092 0064 FE2B     		cmp	r3, #254
 2093 0066 0AD1     		bne	.L100
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 44


  38:Core/Inc/rutinas_de_interrupcion.h ****   {
  39:Core/Inc/rutinas_de_interrupcion.h ****     USART1->DR = 0xFF;
 2094              		.loc 3 39 11
 2095 0068 854B     		ldr	r3, .L130
 2096              		.loc 3 39 16
 2097 006a FF22     		movs	r2, #255
 2098 006c 5A60     		str	r2, [r3, #4]
  40:Core/Inc/rutinas_de_interrupcion.h ****     while(!(USART1->SR & USART_SR_TC));
 2099              		.loc 3 40 10
 2100 006e 00BF     		nop
 2101              	.L101:
 2102              		.loc 3 40 19 discriminator 1
 2103 0070 834B     		ldr	r3, .L130
 2104 0072 1B68     		ldr	r3, [r3]
 2105              		.loc 3 40 24 discriminator 1
 2106 0074 03F04003 		and	r3, r3, #64
 2107              		.loc 3 40 10 discriminator 1
 2108 0078 002B     		cmp	r3, #0
 2109 007a F9D0     		beq	.L101
  41:Core/Inc/rutinas_de_interrupcion.h ****     return;
 2110              		.loc 3 41 5
 2111 007c B3E1     		b	.L96
 2112              	.L100:
  42:Core/Inc/rutinas_de_interrupcion.h ****   }
  43:Core/Inc/rutinas_de_interrupcion.h ****   
  44:Core/Inc/rutinas_de_interrupcion.h ****   if(esNumero(dato))
 2113              		.loc 3 44 6
 2114 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2115 0080 1846     		mov	r0, r3
 2116 0082 FFF7FEFF 		bl	esNumero
 2117 0086 0346     		mov	r3, r0
 2118              		.loc 3 44 5
 2119 0088 002B     		cmp	r3, #0
 2120 008a 1BD0     		beq	.L103
  45:Core/Inc/rutinas_de_interrupcion.h ****   {
  46:Core/Inc/rutinas_de_interrupcion.h ****     if(strlen(intensidadLed) < 5)
 2121              		.loc 3 46 8
 2122 008c 7D4B     		ldr	r3, .L130+4
 2123 008e 1B68     		ldr	r3, [r3]
 2124 0090 1846     		mov	r0, r3
 2125 0092 FFF7FEFF 		bl	strlen
 2126 0096 0346     		mov	r3, r0
 2127              		.loc 3 46 7
 2128 0098 042B     		cmp	r3, #4
 2129 009a 00F2A481 		bhi	.L96
  47:Core/Inc/rutinas_de_interrupcion.h ****     {
  48:Core/Inc/rutinas_de_interrupcion.h ****         intensidadLed[index_intensidad++] = dato;
 2130              		.loc 3 48 22
 2131 009e 794B     		ldr	r3, .L130+4
 2132 00a0 1A68     		ldr	r2, [r3]
 2133              		.loc 3 48 39
 2134 00a2 794B     		ldr	r3, .L130+8
 2135 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2136 00a6 591C     		adds	r1, r3, #1
 2137 00a8 C8B2     		uxtb	r0, r1
 2138 00aa 7749     		ldr	r1, .L130+8
 2139 00ac 0870     		strb	r0, [r1]
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 45


 2140              		.loc 3 48 22
 2141 00ae 1344     		add	r3, r3, r2
 2142              		.loc 3 48 43
 2143 00b0 FA79     		ldrb	r2, [r7, #7]
 2144 00b2 1A70     		strb	r2, [r3]
  49:Core/Inc/rutinas_de_interrupcion.h ****         intensidadLed[index_intensidad] = 0;
 2145              		.loc 3 49 22
 2146 00b4 734B     		ldr	r3, .L130+4
 2147 00b6 1B68     		ldr	r3, [r3]
 2148 00b8 734A     		ldr	r2, .L130+8
 2149 00ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2150 00bc 1344     		add	r3, r3, r2
 2151              		.loc 3 49 41
 2152 00be 0022     		movs	r2, #0
 2153 00c0 1A70     		strb	r2, [r3]
 2154 00c2 90E1     		b	.L96
 2155              	.L103:
 2156              	.LBB5:
  50:Core/Inc/rutinas_de_interrupcion.h ****     }
  51:Core/Inc/rutinas_de_interrupcion.h ****   }
  52:Core/Inc/rutinas_de_interrupcion.h ****   else
  53:Core/Inc/rutinas_de_interrupcion.h ****   {
  54:Core/Inc/rutinas_de_interrupcion.h ****     if(index_caracteres < 20)
 2157              		.loc 3 54 25
 2158 00c4 714B     		ldr	r3, .L130+12
 2159 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2160              		.loc 3 54 7
 2161 00c8 132B     		cmp	r3, #19
 2162 00ca 0AD8     		bhi	.L104
  55:Core/Inc/rutinas_de_interrupcion.h ****                   caracteres[index_caracteres++] = dato;
 2163              		.loc 3 55 29
 2164 00cc 704B     		ldr	r3, .L130+16
 2165 00ce 1A68     		ldr	r2, [r3]
 2166              		.loc 3 55 46
 2167 00d0 6E4B     		ldr	r3, .L130+12
 2168 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2169 00d4 591C     		adds	r1, r3, #1
 2170 00d6 C8B2     		uxtb	r0, r1
 2171 00d8 6C49     		ldr	r1, .L130+12
 2172 00da 0870     		strb	r0, [r1]
 2173              		.loc 3 55 29
 2174 00dc 1344     		add	r3, r3, r2
 2175              		.loc 3 55 50
 2176 00de FA79     		ldrb	r2, [r7, #7]
 2177 00e0 1A70     		strb	r2, [r3]
 2178              	.L104:
  56:Core/Inc/rutinas_de_interrupcion.h **** 
  57:Core/Inc/rutinas_de_interrupcion.h ****     uint16_t numero_intensidad = atoi(intensidadLed);
 2179              		.loc 3 57 34
 2180 00e2 684B     		ldr	r3, .L130+4
 2181 00e4 1B68     		ldr	r3, [r3]
 2182 00e6 1846     		mov	r0, r3
 2183 00e8 FFF7FEFF 		bl	atoi
 2184 00ec 0346     		mov	r3, r0
 2185              		.loc 3 57 14
 2186 00ee FB81     		strh	r3, [r7, #14]	@ movhi
  58:Core/Inc/rutinas_de_interrupcion.h ****     if(numero_intensidad >= MAXIMA_INTENSIDAD)
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 46


 2187              		.loc 3 58 7
 2188 00f0 FB89     		ldrh	r3, [r7, #14]
 2189 00f2 42F20F72 		movw	r2, #9999
 2190 00f6 9342     		cmp	r3, r2
 2191 00f8 02D9     		bls	.L105
  59:Core/Inc/rutinas_de_interrupcion.h ****         numero_intensidad = MAXIMA_INTENSIDAD - PASO;
 2192              		.loc 3 59 27
 2193 00fa 42F20E73 		movw	r3, #9998
 2194 00fe FB81     		strh	r3, [r7, #14]	@ movhi
 2195              	.L105:
  60:Core/Inc/rutinas_de_interrupcion.h **** 
  61:Core/Inc/rutinas_de_interrupcion.h ****     if(caracteres[index_caracteres - 1] == '\n')
 2196              		.loc 3 61 18
 2197 0100 634B     		ldr	r3, .L130+16
 2198 0102 1A68     		ldr	r2, [r3]
 2199 0104 614B     		ldr	r3, .L130+12
 2200 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2201 0108 013B     		subs	r3, r3, #1
 2202 010a 1344     		add	r3, r3, r2
 2203 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2204              		.loc 3 61 7
 2205 010e 0A2B     		cmp	r3, #10
 2206 0110 40F06981 		bne	.L96
 2207              	.LBB6:
  62:Core/Inc/rutinas_de_interrupcion.h ****     {
  63:Core/Inc/rutinas_de_interrupcion.h ****         // Aquí hago el equivalente a lo que hace la función tolower() a la cadena 'caracteres'
  64:Core/Inc/rutinas_de_interrupcion.h ****         for(uint8_t i = 0; i < index_caracteres; i++)
 2208              		.loc 3 64 21
 2209 0114 0023     		movs	r3, #0
 2210 0116 7B73     		strb	r3, [r7, #13]
 2211              		.loc 3 64 9
 2212 0118 1CE0     		b	.L106
 2213              	.L108:
  65:Core/Inc/rutinas_de_interrupcion.h ****         {
  66:Core/Inc/rutinas_de_interrupcion.h ****             if(caracteres[i] >= 'A' && caracteres[i] <= 'Z')
 2214              		.loc 3 66 26
 2215 011a 5D4B     		ldr	r3, .L130+16
 2216 011c 1A68     		ldr	r2, [r3]
 2217 011e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2218 0120 1344     		add	r3, r3, r2
 2219 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2220              		.loc 3 66 15
 2221 0124 402B     		cmp	r3, #64
 2222 0126 12D9     		bls	.L107
 2223              		.loc 3 66 50 discriminator 1
 2224 0128 594B     		ldr	r3, .L130+16
 2225 012a 1A68     		ldr	r2, [r3]
 2226 012c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2227 012e 1344     		add	r3, r3, r2
 2228 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2229              		.loc 3 66 37 discriminator 1
 2230 0132 5A2B     		cmp	r3, #90
 2231 0134 0BD8     		bhi	.L107
  67:Core/Inc/rutinas_de_interrupcion.h ****                 caracteres[i] += 0x20;
 2232              		.loc 3 67 31
 2233 0136 564B     		ldr	r3, .L130+16
 2234 0138 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 47


 2235 013a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2236 013c 1344     		add	r3, r3, r2
 2237 013e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2238 0140 534B     		ldr	r3, .L130+16
 2239 0142 1968     		ldr	r1, [r3]
 2240 0144 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2241 0146 0B44     		add	r3, r3, r1
 2242 0148 2032     		adds	r2, r2, #32
 2243 014a D2B2     		uxtb	r2, r2
 2244 014c 1A70     		strb	r2, [r3]
 2245              	.L107:
  64:Core/Inc/rutinas_de_interrupcion.h ****         {
 2246              		.loc 3 64 51 discriminator 2
 2247 014e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2248 0150 0133     		adds	r3, r3, #1
 2249 0152 7B73     		strb	r3, [r7, #13]
 2250              	.L106:
  64:Core/Inc/rutinas_de_interrupcion.h ****         {
 2251              		.loc 3 64 30 discriminator 1
 2252 0154 4D4B     		ldr	r3, .L130+12
 2253 0156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  64:Core/Inc/rutinas_de_interrupcion.h ****         {
 2254              		.loc 3 64 9 discriminator 1
 2255 0158 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 2256 015a 9A42     		cmp	r2, r3
 2257 015c DDD3     		bcc	.L108
 2258              	.LBE6:
  68:Core/Inc/rutinas_de_interrupcion.h ****         }
  69:Core/Inc/rutinas_de_interrupcion.h **** 
  70:Core/Inc/rutinas_de_interrupcion.h ****         memset(intensidadLed, 0, 6);
 2259              		.loc 3 70 9
 2260 015e 494B     		ldr	r3, .L130+4
 2261 0160 1B68     		ldr	r3, [r3]
 2262 0162 0622     		movs	r2, #6
 2263 0164 0021     		movs	r1, #0
 2264 0166 1846     		mov	r0, r3
 2265 0168 FFF7FEFF 		bl	memset
  71:Core/Inc/rutinas_de_interrupcion.h ****         index_intensidad = 0;
 2266              		.loc 3 71 26
 2267 016c 464B     		ldr	r3, .L130+8
 2268 016e 0022     		movs	r2, #0
 2269 0170 1A70     		strb	r2, [r3]
  72:Core/Inc/rutinas_de_interrupcion.h **** 
  73:Core/Inc/rutinas_de_interrupcion.h ****         if(strcmp(caracteres, "party\r\n"))
 2270              		.loc 3 73 12
 2271 0172 474B     		ldr	r3, .L130+16
 2272 0174 1B68     		ldr	r3, [r3]
 2273 0176 4749     		ldr	r1, .L130+20
 2274 0178 1846     		mov	r0, r3
 2275 017a FFF7FEFF 		bl	strcmp
 2276 017e 0346     		mov	r3, r0
 2277              		.loc 3 73 11
 2278 0180 002B     		cmp	r3, #0
 2279 0182 02D0     		beq	.L109
  74:Core/Inc/rutinas_de_interrupcion.h ****           partyMode = 0;
 2280              		.loc 3 74 21
 2281 0184 444B     		ldr	r3, .L130+24
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 48


 2282 0186 0022     		movs	r2, #0
 2283 0188 1A70     		strb	r2, [r3]
 2284              	.L109:
  75:Core/Inc/rutinas_de_interrupcion.h **** 
  76:Core/Inc/rutinas_de_interrupcion.h ****         if(!strcmp(caracteres, "off\r\n"))
 2285              		.loc 3 76 13
 2286 018a 414B     		ldr	r3, .L130+16
 2287 018c 1B68     		ldr	r3, [r3]
 2288 018e 4349     		ldr	r1, .L130+28
 2289 0190 1846     		mov	r0, r3
 2290 0192 FFF7FEFF 		bl	strcmp
 2291 0196 0346     		mov	r3, r0
 2292              		.loc 3 76 11
 2293 0198 002B     		cmp	r3, #0
 2294 019a 0AD1     		bne	.L110
  77:Core/Inc/rutinas_de_interrupcion.h ****         {
  78:Core/Inc/rutinas_de_interrupcion.h ****           TIM2->CCR2 = 0;
 2295              		.loc 3 78 15
 2296 019c 4FF08043 		mov	r3, #1073741824
 2297              		.loc 3 78 22
 2298 01a0 0022     		movs	r2, #0
 2299 01a2 9A63     		str	r2, [r3, #56]
  79:Core/Inc/rutinas_de_interrupcion.h ****           TIM3->CCR2 = 0;
 2300              		.loc 3 79 15
 2301 01a4 3E4B     		ldr	r3, .L130+32
 2302              		.loc 3 79 22
 2303 01a6 0022     		movs	r2, #0
 2304 01a8 9A63     		str	r2, [r3, #56]
  80:Core/Inc/rutinas_de_interrupcion.h ****           TIM4->CCR2 = 0;
 2305              		.loc 3 80 15
 2306 01aa 3E4B     		ldr	r3, .L130+36
 2307              		.loc 3 80 22
 2308 01ac 0022     		movs	r2, #0
 2309 01ae 9A63     		str	r2, [r3, #56]
 2310 01b0 0FE1     		b	.L111
 2311              	.L110:
  81:Core/Inc/rutinas_de_interrupcion.h ****         }
  82:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "r\r\n"))
 2312              		.loc 3 82 18
 2313 01b2 374B     		ldr	r3, .L130+16
 2314 01b4 1B68     		ldr	r3, [r3]
 2315 01b6 3C49     		ldr	r1, .L130+40
 2316 01b8 1846     		mov	r0, r3
 2317 01ba FFF7FEFF 		bl	strcmp
 2318 01be 0346     		mov	r3, r0
 2319              		.loc 3 82 16
 2320 01c0 002B     		cmp	r3, #0
 2321 01c2 05D1     		bne	.L112
  83:Core/Inc/rutinas_de_interrupcion.h ****             TIM2->CCR2 = numero_intensidad * PASO;
 2322              		.loc 3 83 44
 2323 01c4 FB89     		ldrh	r3, [r7, #14]
 2324 01c6 5A00     		lsls	r2, r3, #1
 2325              		.loc 3 83 17
 2326 01c8 4FF08043 		mov	r3, #1073741824
 2327              		.loc 3 83 24
 2328 01cc 9A63     		str	r2, [r3, #56]
 2329 01ce 00E1     		b	.L111
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 49


 2330              	.L112:
  84:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "g\r\n"))
 2331              		.loc 3 84 18
 2332 01d0 2F4B     		ldr	r3, .L130+16
 2333 01d2 1B68     		ldr	r3, [r3]
 2334 01d4 3549     		ldr	r1, .L130+44
 2335 01d6 1846     		mov	r0, r3
 2336 01d8 FFF7FEFF 		bl	strcmp
 2337 01dc 0346     		mov	r3, r0
 2338              		.loc 3 84 16
 2339 01de 002B     		cmp	r3, #0
 2340 01e0 04D1     		bne	.L113
  85:Core/Inc/rutinas_de_interrupcion.h ****             TIM3->CCR2 = numero_intensidad * PASO;
 2341              		.loc 3 85 44
 2342 01e2 FB89     		ldrh	r3, [r7, #14]
 2343 01e4 5A00     		lsls	r2, r3, #1
 2344              		.loc 3 85 17
 2345 01e6 2E4B     		ldr	r3, .L130+32
 2346              		.loc 3 85 24
 2347 01e8 9A63     		str	r2, [r3, #56]
 2348 01ea F2E0     		b	.L111
 2349              	.L113:
  86:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "b\r\n"))
 2350              		.loc 3 86 18
 2351 01ec 284B     		ldr	r3, .L130+16
 2352 01ee 1B68     		ldr	r3, [r3]
 2353 01f0 2F49     		ldr	r1, .L130+48
 2354 01f2 1846     		mov	r0, r3
 2355 01f4 FFF7FEFF 		bl	strcmp
 2356 01f8 0346     		mov	r3, r0
 2357              		.loc 3 86 16
 2358 01fa 002B     		cmp	r3, #0
 2359 01fc 04D1     		bne	.L114
  87:Core/Inc/rutinas_de_interrupcion.h ****             TIM4->CCR2 = numero_intensidad * PASO;
 2360              		.loc 3 87 44
 2361 01fe FB89     		ldrh	r3, [r7, #14]
 2362 0200 5A00     		lsls	r2, r3, #1
 2363              		.loc 3 87 17
 2364 0202 284B     		ldr	r3, .L130+36
 2365              		.loc 3 87 24
 2366 0204 9A63     		str	r2, [r3, #56]
 2367 0206 E4E0     		b	.L111
 2368              	.L114:
  88:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "orange\r\n")) encenderNaranja();
 2369              		.loc 3 88 18
 2370 0208 214B     		ldr	r3, .L130+16
 2371 020a 1B68     		ldr	r3, [r3]
 2372 020c 2949     		ldr	r1, .L130+52
 2373 020e 1846     		mov	r0, r3
 2374 0210 FFF7FEFF 		bl	strcmp
 2375 0214 0346     		mov	r3, r0
 2376              		.loc 3 88 16
 2377 0216 002B     		cmp	r3, #0
 2378 0218 02D1     		bne	.L115
 2379              		.loc 3 88 52 discriminator 1
 2380 021a FFF7FEFF 		bl	encenderNaranja
 2381 021e D8E0     		b	.L111
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 50


 2382              	.L115:
  89:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "yellow\r\n")) encenderAmarillo();
 2383              		.loc 3 89 18
 2384 0220 1B4B     		ldr	r3, .L130+16
 2385 0222 1B68     		ldr	r3, [r3]
 2386 0224 2449     		ldr	r1, .L130+56
 2387 0226 1846     		mov	r0, r3
 2388 0228 FFF7FEFF 		bl	strcmp
 2389 022c 0346     		mov	r3, r0
 2390              		.loc 3 89 16
 2391 022e 002B     		cmp	r3, #0
 2392 0230 02D1     		bne	.L116
 2393              		.loc 3 89 52 discriminator 1
 2394 0232 FFF7FEFF 		bl	encenderAmarillo
 2395 0236 CCE0     		b	.L111
 2396              	.L116:
  90:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "fluor\r\n")) encenderFluor();
 2397              		.loc 3 90 18
 2398 0238 154B     		ldr	r3, .L130+16
 2399 023a 1B68     		ldr	r3, [r3]
 2400 023c 1F49     		ldr	r1, .L130+60
 2401 023e 1846     		mov	r0, r3
 2402 0240 FFF7FEFF 		bl	strcmp
 2403 0244 0346     		mov	r3, r0
 2404              		.loc 3 90 16
 2405 0246 002B     		cmp	r3, #0
 2406 0248 02D1     		bne	.L117
 2407              		.loc 3 90 51 discriminator 1
 2408 024a FFF7FEFF 		bl	encenderFluor
 2409 024e C0E0     		b	.L111
 2410              	.L117:
  91:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "pink\r\n")) encenderRosa();
 2411              		.loc 3 91 18
 2412 0250 0F4B     		ldr	r3, .L130+16
 2413 0252 1B68     		ldr	r3, [r3]
 2414 0254 1A49     		ldr	r1, .L130+64
 2415 0256 1846     		mov	r0, r3
 2416 0258 FFF7FEFF 		bl	strcmp
 2417 025c 0346     		mov	r3, r0
 2418              		.loc 3 91 16
 2419 025e 002B     		cmp	r3, #0
 2420 0260 02D1     		bne	.L118
 2421              		.loc 3 91 50 discriminator 1
 2422 0262 FFF7FEFF 		bl	encenderRosa
 2423 0266 B4E0     		b	.L111
 2424              	.L118:
  92:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "fuchsia\r\n")) encenderFucsia();
 2425              		.loc 3 92 18
 2426 0268 094B     		ldr	r3, .L130+16
 2427 026a 1B68     		ldr	r3, [r3]
 2428 026c 1549     		ldr	r1, .L130+68
 2429 026e 1846     		mov	r0, r3
 2430 0270 FFF7FEFF 		bl	strcmp
 2431 0274 0346     		mov	r3, r0
 2432              		.loc 3 92 16
 2433 0276 002B     		cmp	r3, #0
 2434 0278 26D1     		bne	.L119
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 51


 2435              		.loc 3 92 53 discriminator 1
 2436 027a FFF7FEFF 		bl	encenderFucsia
 2437 027e A8E0     		b	.L111
 2438              	.L131:
 2439              		.align	2
 2440              	.L130:
 2441 0280 00380140 		.word	1073821696
 2442 0284 00000000 		.word	intensidadLed
 2443 0288 00000000 		.word	index_intensidad
 2444 028c 00000000 		.word	index_caracteres
 2445 0290 00000000 		.word	caracteres
 2446 0294 00000000 		.word	.LC0
 2447 0298 00000000 		.word	partyMode
 2448 029c 08000000 		.word	.LC1
 2449 02a0 00040040 		.word	1073742848
 2450 02a4 00080040 		.word	1073743872
 2451 02a8 10000000 		.word	.LC2
 2452 02ac 14000000 		.word	.LC3
 2453 02b0 18000000 		.word	.LC4
 2454 02b4 1C000000 		.word	.LC5
 2455 02b8 28000000 		.word	.LC6
 2456 02bc 34000000 		.word	.LC7
 2457 02c0 3C000000 		.word	.LC8
 2458 02c4 44000000 		.word	.LC9
 2459              	.L119:
  93:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "purple\r\n") || !strcmp(caracteres, "violet\r\n")) encenderVio
 2460              		.loc 3 93 18
 2461 02c8 484B     		ldr	r3, .L132
 2462 02ca 1B68     		ldr	r3, [r3]
 2463 02cc 4849     		ldr	r1, .L132+4
 2464 02ce 1846     		mov	r0, r3
 2465 02d0 FFF7FEFF 		bl	strcmp
 2466 02d4 0346     		mov	r3, r0
 2467              		.loc 3 93 16
 2468 02d6 002B     		cmp	r3, #0
 2469 02d8 08D0     		beq	.L120
 2470              		.loc 3 93 55 discriminator 2
 2471 02da 444B     		ldr	r3, .L132
 2472 02dc 1B68     		ldr	r3, [r3]
 2473 02de 4549     		ldr	r1, .L132+8
 2474 02e0 1846     		mov	r0, r3
 2475 02e2 FFF7FEFF 		bl	strcmp
 2476 02e6 0346     		mov	r3, r0
 2477              		.loc 3 93 51 discriminator 2
 2478 02e8 002B     		cmp	r3, #0
 2479 02ea 02D1     		bne	.L121
 2480              	.L120:
 2481              		.loc 3 93 89 discriminator 3
 2482 02ec FFF7FEFF 		bl	encenderVioleta
 2483 02f0 6FE0     		b	.L111
 2484              	.L121:
  94:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "dark purple\r\n")) encenderVioletaOscuro();
 2485              		.loc 3 94 18
 2486 02f2 3E4B     		ldr	r3, .L132
 2487 02f4 1B68     		ldr	r3, [r3]
 2488 02f6 4049     		ldr	r1, .L132+12
 2489 02f8 1846     		mov	r0, r3
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 52


 2490 02fa FFF7FEFF 		bl	strcmp
 2491 02fe 0346     		mov	r3, r0
 2492              		.loc 3 94 16
 2493 0300 002B     		cmp	r3, #0
 2494 0302 02D1     		bne	.L122
 2495              		.loc 3 94 57 discriminator 1
 2496 0304 FFF7FEFF 		bl	encenderVioletaOscuro
 2497 0308 63E0     		b	.L111
 2498              	.L122:
  95:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "cyan\r\n")) encenderCeleste();
 2499              		.loc 3 95 18
 2500 030a 384B     		ldr	r3, .L132
 2501 030c 1B68     		ldr	r3, [r3]
 2502 030e 3B49     		ldr	r1, .L132+16
 2503 0310 1846     		mov	r0, r3
 2504 0312 FFF7FEFF 		bl	strcmp
 2505 0316 0346     		mov	r3, r0
 2506              		.loc 3 95 16
 2507 0318 002B     		cmp	r3, #0
 2508 031a 02D1     		bne	.L123
 2509              		.loc 3 95 50 discriminator 1
 2510 031c FFF7FEFF 		bl	encenderCeleste
 2511 0320 57E0     		b	.L111
 2512              	.L123:
  96:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "sea cyan\r\n")) encenderCelesteMar();
 2513              		.loc 3 96 18
 2514 0322 324B     		ldr	r3, .L132
 2515 0324 1B68     		ldr	r3, [r3]
 2516 0326 3649     		ldr	r1, .L132+20
 2517 0328 1846     		mov	r0, r3
 2518 032a FFF7FEFF 		bl	strcmp
 2519 032e 0346     		mov	r3, r0
 2520              		.loc 3 96 16
 2521 0330 002B     		cmp	r3, #0
 2522 0332 02D1     		bne	.L124
 2523              		.loc 3 96 54 discriminator 1
 2524 0334 FFF7FEFF 		bl	encenderCelesteMar
 2525 0338 4BE0     		b	.L111
 2526              	.L124:
  97:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "red\r\n")) encenderRojo();
 2527              		.loc 3 97 18
 2528 033a 2C4B     		ldr	r3, .L132
 2529 033c 1B68     		ldr	r3, [r3]
 2530 033e 3149     		ldr	r1, .L132+24
 2531 0340 1846     		mov	r0, r3
 2532 0342 FFF7FEFF 		bl	strcmp
 2533 0346 0346     		mov	r3, r0
 2534              		.loc 3 97 16
 2535 0348 002B     		cmp	r3, #0
 2536 034a 02D1     		bne	.L125
 2537              		.loc 3 97 49 discriminator 1
 2538 034c FFF7FEFF 		bl	encenderRojo
 2539 0350 3FE0     		b	.L111
 2540              	.L125:
  98:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "green\r\n")) encenderVerde();
 2541              		.loc 3 98 18
 2542 0352 264B     		ldr	r3, .L132
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 53


 2543 0354 1B68     		ldr	r3, [r3]
 2544 0356 2C49     		ldr	r1, .L132+28
 2545 0358 1846     		mov	r0, r3
 2546 035a FFF7FEFF 		bl	strcmp
 2547 035e 0346     		mov	r3, r0
 2548              		.loc 3 98 16
 2549 0360 002B     		cmp	r3, #0
 2550 0362 02D1     		bne	.L126
 2551              		.loc 3 98 51 discriminator 1
 2552 0364 FFF7FEFF 		bl	encenderVerde
 2553 0368 33E0     		b	.L111
 2554              	.L126:
  99:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "blue\r\n")) encenderAzul();
 2555              		.loc 3 99 18
 2556 036a 204B     		ldr	r3, .L132
 2557 036c 1B68     		ldr	r3, [r3]
 2558 036e 2749     		ldr	r1, .L132+32
 2559 0370 1846     		mov	r0, r3
 2560 0372 FFF7FEFF 		bl	strcmp
 2561 0376 0346     		mov	r3, r0
 2562              		.loc 3 99 16
 2563 0378 002B     		cmp	r3, #0
 2564 037a 02D1     		bne	.L127
 2565              		.loc 3 99 50 discriminator 1
 2566 037c FFF7FEFF 		bl	encenderAzul
 2567 0380 27E0     		b	.L111
 2568              	.L127:
 100:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "white\r\n")) encenderBlanco();
 2569              		.loc 3 100 18
 2570 0382 1A4B     		ldr	r3, .L132
 2571 0384 1B68     		ldr	r3, [r3]
 2572 0386 2249     		ldr	r1, .L132+36
 2573 0388 1846     		mov	r0, r3
 2574 038a FFF7FEFF 		bl	strcmp
 2575 038e 0346     		mov	r3, r0
 2576              		.loc 3 100 16
 2577 0390 002B     		cmp	r3, #0
 2578 0392 02D1     		bne	.L128
 2579              		.loc 3 100 51 discriminator 1
 2580 0394 FFF7FEFF 		bl	encenderBlanco
 2581 0398 1BE0     		b	.L111
 2582              	.L128:
 101:Core/Inc/rutinas_de_interrupcion.h ****         else if(!strcmp(caracteres, "party\r\n"))
 2583              		.loc 3 101 18
 2584 039a 144B     		ldr	r3, .L132
 2585 039c 1B68     		ldr	r3, [r3]
 2586 039e 1D49     		ldr	r1, .L132+40
 2587 03a0 1846     		mov	r0, r3
 2588 03a2 FFF7FEFF 		bl	strcmp
 2589 03a6 0346     		mov	r3, r0
 2590              		.loc 3 101 16
 2591 03a8 002B     		cmp	r3, #0
 2592 03aa 09D1     		bne	.L129
 102:Core/Inc/rutinas_de_interrupcion.h ****         {
 103:Core/Inc/rutinas_de_interrupcion.h ****             msParpadeoLedPlaca(500);
 2593              		.loc 3 103 13
 2594 03ac 4FF4FA70 		mov	r0, #500
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 54


 2595 03b0 FFF7FEFF 		bl	msParpadeoLedPlaca
 104:Core/Inc/rutinas_de_interrupcion.h ****             partyMode = 1;
 2596              		.loc 3 104 23
 2597 03b4 184B     		ldr	r3, .L132+44
 2598 03b6 0122     		movs	r2, #1
 2599 03b8 1A70     		strb	r2, [r3]
 105:Core/Inc/rutinas_de_interrupcion.h ****             parpadearLedPlaca();
 2600              		.loc 3 105 13
 2601 03ba FFF7FEFF 		bl	parpadearLedPlaca
 2602 03be 08E0     		b	.L111
 2603              	.L129:
 106:Core/Inc/rutinas_de_interrupcion.h ****         }
 107:Core/Inc/rutinas_de_interrupcion.h ****         else
 108:Core/Inc/rutinas_de_interrupcion.h ****         {
 109:Core/Inc/rutinas_de_interrupcion.h ****           msParpadeoLedPlaca(100);
 2604              		.loc 3 109 11
 2605 03c0 6420     		movs	r0, #100
 2606 03c2 FFF7FEFF 		bl	msParpadeoLedPlaca
 110:Core/Inc/rutinas_de_interrupcion.h ****           parpadearLedPlacaVeces(2);
 2607              		.loc 3 110 11
 2608 03c6 4FF00200 		mov	r0, #2
 2609 03ca 4FF00001 		mov	r1, #0
 2610 03ce FFF7FEFF 		bl	parpadearLedPlacaVeces
 2611              	.L111:
 111:Core/Inc/rutinas_de_interrupcion.h ****         }
 112:Core/Inc/rutinas_de_interrupcion.h **** 
 113:Core/Inc/rutinas_de_interrupcion.h ****         memset(caracteres, 0, 20);
 2612              		.loc 3 113 9
 2613 03d2 064B     		ldr	r3, .L132
 2614 03d4 1B68     		ldr	r3, [r3]
 2615 03d6 1422     		movs	r2, #20
 2616 03d8 0021     		movs	r1, #0
 2617 03da 1846     		mov	r0, r3
 2618 03dc FFF7FEFF 		bl	memset
 114:Core/Inc/rutinas_de_interrupcion.h ****         index_caracteres = 0;
 2619              		.loc 3 114 26
 2620 03e0 0E4B     		ldr	r3, .L132+48
 2621 03e2 0022     		movs	r2, #0
 2622 03e4 1A70     		strb	r2, [r3]
 2623              	.L96:
 2624              	.LBE5:
 115:Core/Inc/rutinas_de_interrupcion.h ****     }
 116:Core/Inc/rutinas_de_interrupcion.h ****   }
 117:Core/Inc/rutinas_de_interrupcion.h **** }...
 2625              		.loc 3 117 1
 2626 03e6 1037     		adds	r7, r7, #16
 2627              	.LCFI129:
 2628              		.cfi_def_cfa_offset 8
 2629 03e8 BD46     		mov	sp, r7
 2630              	.LCFI130:
 2631              		.cfi_def_cfa_register 13
 2632              		@ sp needed
 2633 03ea 80BD     		pop	{r7, pc}
 2634              	.L133:
 2635              		.align	2
 2636              	.L132:
 2637 03ec 00000000 		.word	caracteres
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 55


 2638 03f0 50000000 		.word	.LC10
 2639 03f4 5C000000 		.word	.LC11
 2640 03f8 68000000 		.word	.LC12
 2641 03fc 78000000 		.word	.LC13
 2642 0400 80000000 		.word	.LC14
 2643 0404 8C000000 		.word	.LC15
 2644 0408 94000000 		.word	.LC16
 2645 040c 9C000000 		.word	.LC17
 2646 0410 A4000000 		.word	.LC18
 2647 0414 00000000 		.word	.LC0
 2648 0418 00000000 		.word	partyMode
 2649 041c 00000000 		.word	index_caracteres
 2650              		.cfi_endproc
 2651              	.LFE97:
 2653              		.section	.text.USART2_IRQHandler,"ax",%progbits
 2654              		.align	1
 2655              		.global	USART2_IRQHandler
 2656              		.syntax unified
 2657              		.thumb
 2658              		.thumb_func
 2659              		.fpu softvfp
 2661              	USART2_IRQHandler:
 2662              	.LFB98:
 2663              		.file 4 "Core/Inc/gestorComandosAT.h"
   1:Core/Inc/gestorComandosAT.h **** #include "myLib.h"
   2:Core/Inc/gestorComandosAT.h **** 
   3:Core/Inc/gestorComandosAT.h **** void USART2_IRQHandler()
   4:Core/Inc/gestorComandosAT.h **** {
 2664              		.loc 4 4 1
 2665              		.cfi_startproc
 2666              		@ args = 0, pretend = 0, frame = 8
 2667              		@ frame_needed = 1, uses_anonymous_args = 0
 2668 0000 80B5     		push	{r7, lr}
 2669              	.LCFI131:
 2670              		.cfi_def_cfa_offset 8
 2671              		.cfi_offset 7, -8
 2672              		.cfi_offset 14, -4
 2673 0002 82B0     		sub	sp, sp, #8
 2674              	.LCFI132:
 2675              		.cfi_def_cfa_offset 16
 2676 0004 00AF     		add	r7, sp, #0
 2677              	.LCFI133:
 2678              		.cfi_def_cfa_register 7
   5:Core/Inc/gestorComandosAT.h ****     uint32_t estado = PC->SR;
 2679              		.loc 4 5 25
 2680 0006 384B     		ldr	r3, .L140
 2681              		.loc 4 5 14
 2682 0008 1B68     		ldr	r3, [r3]
 2683 000a 7B60     		str	r3, [r7, #4]
   6:Core/Inc/gestorComandosAT.h **** 
   7:Core/Inc/gestorComandosAT.h ****     // Para cuando se recibe un dato de la computadora
   8:Core/Inc/gestorComandosAT.h ****     if(estado & USART_SR_RXNE)
 2684              		.loc 4 8 15
 2685 000c 7B68     		ldr	r3, [r7, #4]
 2686 000e 03F02003 		and	r3, r3, #32
 2687              		.loc 4 8 7
 2688 0012 002B     		cmp	r3, #0
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 56


 2689 0014 64D0     		beq	.L139
 2690              	.LBB7:
   9:Core/Inc/gestorComandosAT.h ****     {
  10:Core/Inc/gestorComandosAT.h ****         char dato = PC->DR;
 2691              		.loc 4 10 23
 2692 0016 344B     		ldr	r3, .L140
 2693 0018 5B68     		ldr	r3, [r3, #4]
 2694              		.loc 4 10 14
 2695 001a FB70     		strb	r3, [r7, #3]
  11:Core/Inc/gestorComandosAT.h ****         
  12:Core/Inc/gestorComandosAT.h ****         *(comandoAT + index_AT++) = dato;
 2696              		.loc 4 12 21
 2697 001c 334B     		ldr	r3, .L140+4
 2698 001e 1A68     		ldr	r2, [r3]
 2699              		.loc 4 12 31
 2700 0020 334B     		ldr	r3, .L140+8
 2701 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2702 0024 591C     		adds	r1, r3, #1
 2703 0026 C8B2     		uxtb	r0, r1
 2704 0028 3149     		ldr	r1, .L140+8
 2705 002a 0870     		strb	r0, [r1]
 2706              		.loc 4 12 21
 2707 002c 1344     		add	r3, r3, r2
 2708              		.loc 4 12 35
 2709 002e FA78     		ldrb	r2, [r7, #3]
 2710 0030 1A70     		strb	r2, [r3]
  13:Core/Inc/gestorComandosAT.h **** 
  14:Core/Inc/gestorComandosAT.h ****         if(dato == '\b')
 2711              		.loc 4 14 11
 2712 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2713 0034 082B     		cmp	r3, #8
 2714 0036 25D1     		bne	.L136
  15:Core/Inc/gestorComandosAT.h ****         {
  16:Core/Inc/gestorComandosAT.h ****             if(index_AT > 0)
 2715              		.loc 4 16 25
 2716 0038 2D4B     		ldr	r3, .L140+8
 2717 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2718              		.loc 4 16 15
 2719 003c 002B     		cmp	r3, #0
 2720 003e 19D0     		beq	.L137
  17:Core/Inc/gestorComandosAT.h ****             {
  18:Core/Inc/gestorComandosAT.h ****                 *(comandoAT + --index_AT) = 0;
 2721              		.loc 4 18 29
 2722 0040 2A4B     		ldr	r3, .L140+4
 2723 0042 1B68     		ldr	r3, [r3]
 2724              		.loc 4 18 31
 2725 0044 2A4A     		ldr	r2, .L140+8
 2726 0046 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2727 0048 013A     		subs	r2, r2, #1
 2728 004a D1B2     		uxtb	r1, r2
 2729              		.loc 4 18 43
 2730 004c 284A     		ldr	r2, .L140+8
 2731 004e 1170     		strb	r1, [r2]
 2732              		.loc 4 18 31
 2733 0050 274A     		ldr	r2, .L140+8
 2734 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2735              		.loc 4 18 29
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 57


 2736 0054 1344     		add	r3, r3, r2
 2737              		.loc 4 18 43
 2738 0056 0022     		movs	r2, #0
 2739 0058 1A70     		strb	r2, [r3]
  19:Core/Inc/gestorComandosAT.h ****                 *(comandoAT + --index_AT) = 0;
 2740              		.loc 4 19 29
 2741 005a 244B     		ldr	r3, .L140+4
 2742 005c 1B68     		ldr	r3, [r3]
 2743              		.loc 4 19 31
 2744 005e 244A     		ldr	r2, .L140+8
 2745 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2746 0062 013A     		subs	r2, r2, #1
 2747 0064 D1B2     		uxtb	r1, r2
 2748              		.loc 4 19 43
 2749 0066 224A     		ldr	r2, .L140+8
 2750 0068 1170     		strb	r1, [r2]
 2751              		.loc 4 19 31
 2752 006a 214A     		ldr	r2, .L140+8
 2753 006c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2754              		.loc 4 19 29
 2755 006e 1344     		add	r3, r3, r2
 2756              		.loc 4 19 43
 2757 0070 0022     		movs	r2, #0
 2758 0072 1A70     		strb	r2, [r3]
 2759              	.L137:
  20:Core/Inc/gestorComandosAT.h ****             }
  21:Core/Inc/gestorComandosAT.h ****             
  22:Core/Inc/gestorComandosAT.h ****             UARTEscribirByte(PC, 0x08);
 2760              		.loc 4 22 13
 2761 0074 0821     		movs	r1, #8
 2762 0076 1C48     		ldr	r0, .L140
 2763 0078 FFF7FEFF 		bl	UARTEscribirByte
  23:Core/Inc/gestorComandosAT.h ****             UARTEscribirByte(PC, 0x20);
 2764              		.loc 4 23 13
 2765 007c 2021     		movs	r1, #32
 2766 007e 1A48     		ldr	r0, .L140
 2767 0080 FFF7FEFF 		bl	UARTEscribirByte
 2768              	.L136:
  24:Core/Inc/gestorComandosAT.h ****         }
  25:Core/Inc/gestorComandosAT.h ****         if(dato == '\r')
 2769              		.loc 4 25 11
 2770 0084 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2771 0086 0D2B     		cmp	r3, #13
 2772 0088 25D1     		bne	.L138
  26:Core/Inc/gestorComandosAT.h ****         {
  27:Core/Inc/gestorComandosAT.h ****             UARTEscribirByte(PC, '\n');
 2773              		.loc 4 27 13
 2774 008a 0A21     		movs	r1, #10
 2775 008c 1648     		ldr	r0, .L140
 2776 008e FFF7FEFF 		bl	UARTEscribirByte
  28:Core/Inc/gestorComandosAT.h ****             
  29:Core/Inc/gestorComandosAT.h ****             *(comandoAT + index_AT++) = '\n';
 2777              		.loc 4 29 25
 2778 0092 164B     		ldr	r3, .L140+4
 2779 0094 1A68     		ldr	r2, [r3]
 2780              		.loc 4 29 35
 2781 0096 164B     		ldr	r3, .L140+8
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 58


 2782 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2783 009a 591C     		adds	r1, r3, #1
 2784 009c C8B2     		uxtb	r0, r1
 2785 009e 1449     		ldr	r1, .L140+8
 2786 00a0 0870     		strb	r0, [r1]
 2787              		.loc 4 29 25
 2788 00a2 1344     		add	r3, r3, r2
 2789              		.loc 4 29 39
 2790 00a4 0A22     		movs	r2, #10
 2791 00a6 1A70     		strb	r2, [r3]
  30:Core/Inc/gestorComandosAT.h ****             *(comandoAT + index_AT) = 0;
 2792              		.loc 4 30 25
 2793 00a8 104B     		ldr	r3, .L140+4
 2794 00aa 1B68     		ldr	r3, [r3]
 2795 00ac 104A     		ldr	r2, .L140+8
 2796 00ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2797 00b0 1344     		add	r3, r3, r2
 2798              		.loc 4 30 37
 2799 00b2 0022     		movs	r2, #0
 2800 00b4 1A70     		strb	r2, [r3]
  31:Core/Inc/gestorComandosAT.h ****             
  32:Core/Inc/gestorComandosAT.h ****             memset(comandoAT, 0, 50);
 2801              		.loc 4 32 13
 2802 00b6 0D4B     		ldr	r3, .L140+4
 2803 00b8 1B68     		ldr	r3, [r3]
 2804 00ba 3222     		movs	r2, #50
 2805 00bc 0021     		movs	r1, #0
 2806 00be 1846     		mov	r0, r3
 2807 00c0 FFF7FEFF 		bl	memset
  33:Core/Inc/gestorComandosAT.h ****             index_AT = 0;
 2808              		.loc 4 33 22
 2809 00c4 0A4B     		ldr	r3, .L140+8
 2810 00c6 0022     		movs	r2, #0
 2811 00c8 1A70     		strb	r2, [r3]
  34:Core/Inc/gestorComandosAT.h **** 
  35:Core/Inc/gestorComandosAT.h ****             UARTEscribirString(ESP_01, comandoAT);
 2812              		.loc 4 35 13
 2813 00ca 084B     		ldr	r3, .L140+4
 2814 00cc 1B68     		ldr	r3, [r3]
 2815 00ce 1946     		mov	r1, r3
 2816 00d0 0848     		ldr	r0, .L140+12
 2817 00d2 FFF7FEFF 		bl	UARTEscribirString
 2818              	.L138:
  36:Core/Inc/gestorComandosAT.h ****         }
  37:Core/Inc/gestorComandosAT.h **** 
  38:Core/Inc/gestorComandosAT.h ****         UARTEscribirByte(PC, dato);
 2819              		.loc 4 38 9
 2820 00d6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2821 00d8 1946     		mov	r1, r3
 2822 00da 0348     		ldr	r0, .L140
 2823 00dc FFF7FEFF 		bl	UARTEscribirByte
 2824              	.L139:
 2825              	.LBE7:
  39:Core/Inc/gestorComandosAT.h ****     }
  40:Core/Inc/gestorComandosAT.h **** }...
 2826              		.loc 4 40 1
 2827 00e0 00BF     		nop
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 59


 2828 00e2 0837     		adds	r7, r7, #8
 2829              	.LCFI134:
 2830              		.cfi_def_cfa_offset 8
 2831 00e4 BD46     		mov	sp, r7
 2832              	.LCFI135:
 2833              		.cfi_def_cfa_register 13
 2834              		@ sp needed
 2835 00e6 80BD     		pop	{r7, pc}
 2836              	.L141:
 2837              		.align	2
 2838              	.L140:
 2839 00e8 00440040 		.word	1073759232
 2840 00ec 00000000 		.word	comandoAT
 2841 00f0 00000000 		.word	index_AT
 2842 00f4 00380140 		.word	1073821696
 2843              		.cfi_endproc
 2844              	.LFE98:
 2846              		.section	.text.main,"ax",%progbits
 2847              		.align	1
 2848              		.global	main
 2849              		.syntax unified
 2850              		.thumb
 2851              		.thumb_func
 2852              		.fpu softvfp
 2854              	main:
 2855              	.LFB99:
 2856              		.file 5 "Core/Src/main.c"
   1:Core/Src/main.c **** #include "configuraciones.h"
   2:Core/Src/main.c **** #include "rutinas_de_interrupcion.h"
   3:Core/Src/main.c **** #include "gestorComandosAT.h"
   4:Core/Src/main.c **** #include "myLib.h"
   5:Core/Src/main.c **** #include "stdlib.h"
   6:Core/Src/main.c **** 
   7:Core/Src/main.c **** /**
   8:Core/Src/main.c ****   * @brief  The application entry point.
   9:Core/Src/main.c ****   * @retval int
  10:Core/Src/main.c ****   */
  11:Core/Src/main.c **** int main(void)
  12:Core/Src/main.c **** {
 2857              		.loc 5 12 1
 2858              		.cfi_startproc
 2859              		@ args = 0, pretend = 0, frame = 0
 2860              		@ frame_needed = 1, uses_anonymous_args = 0
 2861 0000 80B5     		push	{r7, lr}
 2862              	.LCFI136:
 2863              		.cfi_def_cfa_offset 8
 2864              		.cfi_offset 7, -8
 2865              		.cfi_offset 14, -4
 2866 0002 00AF     		add	r7, sp, #0
 2867              	.LCFI137:
 2868              		.cfi_def_cfa_register 7
  13:Core/Src/main.c ****   setTo28MHzFromHSE();
 2869              		.loc 5 13 3
 2870 0004 FFF7FEFF 		bl	setTo28MHzFromHSE
  14:Core/Src/main.c **** 
  15:Core/Src/main.c ****   comandoAT = (uint8_t*)malloc(50);
 2871              		.loc 5 15 25
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 60


 2872 0008 3220     		movs	r0, #50
 2873 000a FFF7FEFF 		bl	malloc
 2874 000e 0346     		mov	r3, r0
 2875 0010 1A46     		mov	r2, r3
 2876              		.loc 5 15 13
 2877 0012 1A4B     		ldr	r3, .L144
 2878 0014 1A60     		str	r2, [r3]
  16:Core/Src/main.c ****   *comandoAT = 0;
 2879              		.loc 5 16 3
 2880 0016 194B     		ldr	r3, .L144
 2881 0018 1B68     		ldr	r3, [r3]
 2882              		.loc 5 16 14
 2883 001a 0022     		movs	r2, #0
 2884 001c 1A70     		strb	r2, [r3]
  17:Core/Src/main.c ****   index_AT = 0;
 2885              		.loc 5 17 12
 2886 001e 184B     		ldr	r3, .L144+4
 2887 0020 0022     		movs	r2, #0
 2888 0022 1A70     		strb	r2, [r3]
  18:Core/Src/main.c **** 
  19:Core/Src/main.c ****   intensidadLed = (char*)malloc(6);
 2889              		.loc 5 19 26
 2890 0024 0620     		movs	r0, #6
 2891 0026 FFF7FEFF 		bl	malloc
 2892 002a 0346     		mov	r3, r0
 2893 002c 1A46     		mov	r2, r3
 2894              		.loc 5 19 17
 2895 002e 154B     		ldr	r3, .L144+8
 2896 0030 1A60     		str	r2, [r3]
  20:Core/Src/main.c ****   memset(intensidadLed, 0, 6);
 2897              		.loc 5 20 3
 2898 0032 144B     		ldr	r3, .L144+8
 2899 0034 1B68     		ldr	r3, [r3]
 2900 0036 0622     		movs	r2, #6
 2901 0038 0021     		movs	r1, #0
 2902 003a 1846     		mov	r0, r3
 2903 003c FFF7FEFF 		bl	memset
  21:Core/Src/main.c ****   index_intensidad = 0;
 2904              		.loc 5 21 20
 2905 0040 114B     		ldr	r3, .L144+12
 2906 0042 0022     		movs	r2, #0
 2907 0044 1A70     		strb	r2, [r3]
  22:Core/Src/main.c **** 
  23:Core/Src/main.c ****   caracteres = (char*)malloc(20);
 2908              		.loc 5 23 23
 2909 0046 1420     		movs	r0, #20
 2910 0048 FFF7FEFF 		bl	malloc
 2911 004c 0346     		mov	r3, r0
 2912 004e 1A46     		mov	r2, r3
 2913              		.loc 5 23 14
 2914 0050 0E4B     		ldr	r3, .L144+16
 2915 0052 1A60     		str	r2, [r3]
  24:Core/Src/main.c ****   memset(caracteres, 0, 20);
 2916              		.loc 5 24 3
 2917 0054 0D4B     		ldr	r3, .L144+16
 2918 0056 1B68     		ldr	r3, [r3]
 2919 0058 1422     		movs	r2, #20
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 61


 2920 005a 0021     		movs	r1, #0
 2921 005c 1846     		mov	r0, r3
 2922 005e FFF7FEFF 		bl	memset
  25:Core/Src/main.c ****   index_caracteres = 0;
 2923              		.loc 5 25 20
 2924 0062 0B4B     		ldr	r3, .L144+20
 2925 0064 0022     		movs	r2, #0
 2926 0066 1A70     		strb	r2, [r3]
  26:Core/Src/main.c ****   
  27:Core/Src/main.c ****   configurarPuertos();
 2927              		.loc 5 27 3
 2928 0068 FFF7FEFF 		bl	configurarPuertos
  28:Core/Src/main.c ****   configurarTIM1();
 2929              		.loc 5 28 3
 2930 006c FFF7FEFF 		bl	configurarTIM1
  29:Core/Src/main.c ****   configurarTimerParaLedRgb();
 2931              		.loc 5 29 3
 2932 0070 FFF7FEFF 		bl	configurarTimerParaLedRgb
  30:Core/Src/main.c ****   // configurarUSART1();
  31:Core/Src/main.c ****   configurarUSART2();
 2933              		.loc 5 31 3
 2934 0074 FFF7FEFF 		bl	configurarUSART2
 2935              	.L143:
  32:Core/Src/main.c ****   
  33:Core/Src/main.c ****   while(1);
 2936              		.loc 5 33 8 discriminator 1
 2937 0078 FEE7     		b	.L143
 2938              	.L145:
 2939 007a 00BF     		.align	2
 2940              	.L144:
 2941 007c 00000000 		.word	comandoAT
 2942 0080 00000000 		.word	index_AT
 2943 0084 00000000 		.word	intensidadLed
 2944 0088 00000000 		.word	index_intensidad
 2945 008c 00000000 		.word	caracteres
 2946 0090 00000000 		.word	index_caracteres
 2947              		.cfi_endproc
 2948              	.LFE99:
 2950              		.text
 2951              	.Letext0:
 2952              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 2953              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 2954              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 2955              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2956              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 62


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:16     .bss.intensidadLed:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:19     .bss.intensidadLed:00000000 intensidadLed
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:24     .bss.index_intensidad:00000000 index_intensidad
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:25     .bss.index_intensidad:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:27     .bss.comandoAT:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:30     .bss.comandoAT:00000000 comandoAT
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:35     .bss.index_AT:00000000 index_AT
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:36     .bss.index_AT:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:38     .bss.caracteres:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:41     .bss.caracteres:00000000 caracteres
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:46     .bss.index_caracteres:00000000 index_caracteres
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:47     .bss.index_caracteres:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:51     .bss.partyMode:00000000 partyMode
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:52     .bss.partyMode:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:54     .text.transmitirCadena:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:62     .text.transmitirCadena:00000000 transmitirCadena
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:139    .text.transmitirCadena:0000004c $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:144    .text.parpadearLedPlaca:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:151    .text.parpadearLedPlaca:00000000 parpadearLedPlaca
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:190    .text.parpadearLedPlaca:00000020 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:195    .text.parpadearLedPlacaVeces:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:202    .text.parpadearLedPlacaVeces:00000000 parpadearLedPlacaVeces
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:282    .text.parpadearLedPlacaVeces:00000064 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:288    .text.msParpadeoLedPlaca:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:295    .text.msParpadeoLedPlaca:00000000 msParpadeoLedPlaca
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:341    .text.msParpadeoLedPlaca:00000020 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:346    .text.esNumero:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:353    .text.esNumero:00000000 esNumero
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:407    .text.UARTDisponible:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:414    .text.UARTDisponible:00000000 UARTDisponible
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:465    .text.UARTEscribirByte:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:472    .text.UARTEscribirByte:00000000 UARTEscribirByte
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:520    .text.UARTEscribirString:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:527    .text.UARTEscribirString:00000000 UARTEscribirString
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:586    .text.encenderNaranja:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:593    .text.encenderNaranja:00000000 encenderNaranja
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:636    .text.encenderNaranja:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:642    .text.encenderAmarillo:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:649    .text.encenderAmarillo:00000000 encenderAmarillo
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:692    .text.encenderAmarillo:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:698    .text.encenderFluor:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:705    .text.encenderFluor:00000000 encenderFluor
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:748    .text.encenderFluor:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:754    .text.encenderRosa:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:761    .text.encenderRosa:00000000 encenderRosa
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:804    .text.encenderRosa:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:810    .text.encenderRojo:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:817    .text.encenderRojo:00000000 encenderRojo
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:860    .text.encenderRojo:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:866    .text.encenderVioleta:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:873    .text.encenderVioleta:00000000 encenderVioleta
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:916    .text.encenderVioleta:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:922    .text.encenderVerde:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:929    .text.encenderVerde:00000000 encenderVerde
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:972    .text.encenderVerde:00000024 $d
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 63


C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:978    .text.encenderCeleste:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:985    .text.encenderCeleste:00000000 encenderCeleste
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1028   .text.encenderCeleste:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1034   .text.encenderAzul:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1041   .text.encenderAzul:00000000 encenderAzul
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1084   .text.encenderAzul:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1090   .text.encenderBlanco:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1097   .text.encenderBlanco:00000000 encenderBlanco
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1140   .text.encenderBlanco:00000028 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1146   .text.encenderCelesteMar:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1153   .text.encenderCelesteMar:00000000 encenderCelesteMar
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1196   .text.encenderCelesteMar:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1202   .text.encenderVioletaOscuro:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1209   .text.encenderVioletaOscuro:00000000 encenderVioletaOscuro
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1252   .text.encenderVioletaOscuro:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1258   .text.encenderFucsia:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1265   .text.encenderFucsia:00000000 encenderFucsia
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1308   .text.encenderFucsia:00000024 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1314   .text.apagarLed:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1321   .text.apagarLed:00000000 apagarLed
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1364   .text.apagarLed:00000020 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1370   .text.setTo28MHzFromHSE:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1377   .text.setTo28MHzFromHSE:00000000 setTo28MHzFromHSE
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1520   .text.setTo28MHzFromHSE:000000e0 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1526   .text.configurarTimerParaLedRgb:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1533   .text.configurarTimerParaLedRgb:00000000 configurarTimerParaLedRgb
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1562   .text.configurarTIM1:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1569   .text.configurarTIM1:00000000 configurarTIM1
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1674   .text.configurarTIM1:00000074 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1682   .text.configurarUSART1:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1689   .text.configurarUSART1:00000000 configurarUSART1
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1749   .text.configurarUSART1:00000044 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1755   .text.configurarUSART2:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1762   .text.configurarUSART2:00000000 configurarUSART2
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1822   .text.configurarUSART2:00000044 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1828   .text.configurarPuertos:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1835   .text.configurarPuertos:00000000 configurarPuertos
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1896   .text.configurarPuertos:00000048 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1903   .text.TIM1_UP_IRQHandler:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1910   .text.TIM1_UP_IRQHandler:00000000 TIM1_UP_IRQHandler
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1950   .text.TIM1_UP_IRQHandler:00000020 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:1956   .rodata:00000000 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:2014   .text.USART1_IRQHandler:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:2021   .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:2441   .text.USART1_IRQHandler:00000280 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:2461   .text.USART1_IRQHandler:000002c8 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:2637   .text.USART1_IRQHandler:000003ec $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:2654   .text.USART2_IRQHandler:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:2661   .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:2839   .text.USART2_IRQHandler:000000e8 $d
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:2847   .text.main:00000000 $t
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:2854   .text.main:00000000 main
C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s:2941   .text.main:0000007c $d

UNDEFINED SYMBOLS
strlen
SystemCoreClockUpdate
ARM GAS  C:\Users\ben96\AppData\Local\Temp\ccHyh5fO.s 			page 64


SystemCoreClock
atoi
memset
strcmp
malloc
